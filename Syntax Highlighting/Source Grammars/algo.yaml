%YAML 1.2
---
name: Algo
scope: source.Algo
file_extensions: [ ag ]

contexts:
  main:
    - match: '(let)'
      captures:
        0: keyword.Algo
    - match: '(import)'
      captures:
        0: keyword.control.import.Algo
    - match: '(//)'
      captures:
        0: comment.Algo
      push: 
        - match: '(^(?=.{0,1})(?:|))'
          pop: true
          captures:
            0: keyword.Algo
        - match: '(.)'
          captures:
            0: comment.Algo
    - match: '(\")'
      captures:
        0: string.Algo
      push: 
        - match: '(\")'
          pop: true
          captures:
            0: string.Algo
        - match: '(\\.)'
          captures:
            0: constant.character.escape.Algo
        - match: '(.*?(?!\\.).)'
          captures:
            0: string.Algo
        - match: '(.)'
          captures:
            0: text.Algo
    - match: '(-?[1-9][0-9]*|0)'
      captures:
        0: constant.numeric.Algo
    - match: '(-?[1-9]*[0-9]\.[0-9]+)'
      captures:
        0: constant.numeric.Algo
    - match: '(true|false)'
      captures:
        0: constant.other.Algo
    - match: '((-?[1-9][0-9]*|0)[\x{0020}]*/[\x{0020}]*(-?[1-9][0-9]*|0))'
      captures:
        0: constant.numeric.Algo
    - match: '(if|else)'
      captures:
        0: keyword.control.conditional.Algo
    - match: '(foreach|for|while|try|catch|throw)'
      captures:
        0: keyword.control.Algo
    - match: '(up to| as | in | from | at | sf| to )'
      captures:
        0: keyword.operator.word.Algo
    - match: '(null|true|false)'
      captures:
        0: constant.language.Algo
    - match: '(let|break|continue|enum|library|object|return|print|disregard|external|add|remove)'
      captures:
        0: keyword.Algo
    - match: '(\+\=|\-\=|\/\=|\*\=|\+\+|\-\-|\+|\-|\/|\*|\^)'
      captures:
        0: keyword.operator.arithmetic.Algo
    - match: '(\||\&|==)'
      captures:
        0: keyword.operator.logical.Algo
    - match: '(\=)'
      captures:
        0: keyword.operator.assignment.Algo
    - match: '(([a-zA-Z_0-9]+\.[a-zA-Z_0-9]+)+)'
      captures:
        0: variable.Algo
    - match: '([a-zA-Z_0-9]+)'
      captures:
        0: variable.Algo
    - match: '([a-zA-Z_0-9]\()'
      captures:
        0: none.Algo
      push: 
        - match: '(\))'
          pop: true
          captures:
            0: none.Algo
        - match: '(,)'
          captures:
            0: none.Algo
        - match: '([a-zA-Z_0-9]+)'
          captures:
            0: variable.parameter.Algo
        - match: '(.)'
          captures:
            0: text.Algo
    - match: '(.)'
      captures:
        0: text.Algo
