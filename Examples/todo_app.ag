// Persistent To-Do List in Algo
// by Larry Tang, 2019

//Require the needed libraries.
import "io";
import "json";

///////////////////////
// UTILITY FUNCTIONS //
///////////////////////

//Gets the to-do notes file.
let getNotes() =
{
    //Check if the notes file exists.
    if (!file.exists("notes.json"))
    {
        //Doesn't exist, return default notes.
        let notes = object 
        {
            let list = [];
            let currentID = 0;
        }

        //Save file.
        output.toFile("notes.json", json.make(notes));
        return notes;
    }

    //File exists, serialize and return.
    return json.parse(input.fromFile("notes.json"));
}

//Creates a to-do note.
let createNote(name, text) = 
{
    //Get the notes file.
    let notes = getNotes();

    //Add a note to the file, using the current ID.
    let newNote = object
    {
        let id = notes.currentID;
        let name = name;
        let text = text;
    }
    add newNote to notes.list;
    
}

///////////////////////


//Let the user select an option.
print "Welcome to the Algo To-Do Example App 2.0!";
print "Select an option to get started.";
print "-------------------";
print "1 - Create a note.";
print "2 - Edit a note.";
print "3 - Delete a note.";
print "4 - View your notes.";
print "-------------------\n";

//Attempt to get user input.
let response = -1;
while (true)
{
    try
    {
        response = int(input.get());

        //Within the number range?
        if (response < 1 | response > 4)
        {
            print "Invalid number given, please try again.";
        }
        else 
        {
            //Yes.
            break;
        }
    }
    catch(e)
    {
        print "Invalid number given, please try again.";
    }
}

//Switch on the input.
if (response == 1)
{
    print "1";
}
else if (response == 2)
{
    print "2";
}
else if (response == 3)
{
    print "3";
}
else
{
    print "4";
}