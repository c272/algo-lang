//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/c272/Repos/algo-lang/Algo/Parsing/algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, FOREACH_SYM=9, ADD_SYM=10, BREAK_SYM=11, CONTINUE_SYM=12, AT_SYM=13, 
		REMOVE_SYM=14, FROM_SYM=15, WHILE_SYM=16, IN_SYM=17, IF_SYM=18, UP_SYM=19, 
		TO_SYM=20, AS_SYM=21, ENUM_SYM=22, LIB_SYM=23, SIG_FIG_SYM=24, OBJ_SYM=25, 
		ELSE_SYM=26, IMPORT_SYM=27, RETURN_SYM=28, PRINT_SYM=29, DISREGARD_SYM=30, 
		EXTERNAL_SYM=31, ENDLINE=32, EQUALS=33, COMMA=34, LBRACE=35, RBRACE=36, 
		LSQBR=37, RSQBR=38, INVERT_SYM=39, STREAMING_SYM=40, LBRACKET=41, RBRACKET=42, 
		ADD_OP=43, TAKE_OP=44, MUL_OP=45, DIV_OP=46, POW_OP=47, MOD_OP=48, POINT=49, 
		ADDFROM_OP=50, TAKEFROM_OP=51, DIVFROM_OP=52, MULFROM_OP=53, ADD_PFOP=54, 
		TAKE_PFOP=55, BIN_OR=56, BIN_AND=57, BIN_NET=58, BIN_EQUALS=59, GRTR_THAN=60, 
		LESS_THAN=61, GRTR_THAN_ET=62, LESS_THAN_ET=63, IDENTIFIER=64, COMMENT=65, 
		WS=66, UNKNOWN_SYMBOL=67;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "BREAK_SYM", "CONTINUE_SYM", "AT_SYM", 
		"REMOVE_SYM", "FROM_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", 
		"AS_SYM", "ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", 
		"IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", 
		"ENDLINE", "EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"STREAMING_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "MOD_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'foreach'", 
		"'add'", "'break'", "'continue'", "'at'", "'remove'", "'from'", "'while'", 
		"'in'", "'if'", "'up'", "'to'", "'as'", "'enum'", "'library'", "'sf'", 
		"'object'", "'else'", "'import'", "'return'", "'print'", "'disregard'", 
		"'external'", "';'", "'='", "','", "'{'", "'}'", "'['", "']'", "'!'", 
		"'<-'", "'('", "')'", "'+'", "'-'", "'*'", "'/'", "'^'", "'%'", "'.'", 
		"'+='", "'-='", "'/='", "'*='", "'++'", "'--'", "'|'", "'&'", "'!='", 
		"'=='", "'>'", "'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "BREAK_SYM", "CONTINUE_SYM", "AT_SYM", 
		"REMOVE_SYM", "FROM_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", 
		"AS_SYM", "ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", 
		"IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", 
		"ENDLINE", "EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"STREAMING_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "MOD_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x45\x1C0\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37"+
		"\t\x37\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4"+
		"?\t?\x4@\t@\x4\x41\t\x41\x4\x42\t\x42\x4\x43\t\x43\x4\x44\t\x44\x3\x2"+
		"\x5\x2\x8B\n\x2\x3\x2\x3\x2\a\x2\x8F\n\x2\f\x2\xE\x2\x92\v\x2\x3\x2\x5"+
		"\x2\x95\n\x2\x3\x3\x5\x3\x98\n\x3\x3\x3\a\x3\x9B\n\x3\f\x3\xE\x3\x9E\v"+
		"\x3\x3\x3\x3\x3\x3\x3\x6\x3\xA3\n\x3\r\x3\xE\x3\xA4\x3\x4\x3\x4\x3\x4"+
		"\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4\xB0\n\x4\x3\x5\x3\x5\x3\x5"+
		"\x3\x5\a\x5\xB6\n\x5\f\x5\xE\x5\xB9\v\x5\x3\x5\x3\x5\x3\x6\x3\x6\a\x6"+
		"\xBF\n\x6\f\x6\xE\x6\xC2\v\x6\x3\x6\x3\x6\a\x6\xC6\n\x6\f\x6\xE\x6\xC9"+
		"\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3"+
		"\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3"+
		"\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3\r\x3"+
		"\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3"+
		"\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3"+
		"\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3"+
		"\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x3"+
		"\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3"+
		"\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3"+
		"\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3"+
		"\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3 \x3!\x3!"+
		"\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3"+
		")\x3*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3\x31"+
		"\x3\x31\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33\x3\x34\x3\x34\x3\x34\x3\x35"+
		"\x3\x35\x3\x35\x3\x36\x3\x36\x3\x36\x3\x37\x3\x37\x3\x37\x3\x38\x3\x38"+
		"\x3\x38\x3\x39\x3\x39\x3:\x3:\x3;\x3;\x3;\x3<\x3<\x3<\x3=\x3=\x3>\x3>"+
		"\x3?\x3?\x3?\x3@\x3@\x3@\x3\x41\x3\x41\a\x41\x1A9\n\x41\f\x41\xE\x41\x1AC"+
		"\v\x41\x3\x42\x3\x42\x3\x42\x3\x42\a\x42\x1B2\n\x42\f\x42\xE\x42\x1B5"+
		"\v\x42\x3\x42\x3\x42\x3\x42\x3\x42\x3\x43\x3\x43\x3\x43\x3\x43\x3\x44"+
		"\x3\x44\x3\x1B3\x2\x2\x45\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2"+
		"\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D"+
		"\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2"+
		"\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2"+
		"\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2"+
		"*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2"+
		"\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38o\x2\x39q\x2:s\x2;u\x2<w\x2=y\x2>"+
		"{\x2?}\x2@\x7F\x2\x41\x81\x2\x42\x83\x2\x43\x85\x2\x44\x87\x2\x45\x3\x2"+
		"\t\x3\x2\x33;\x3\x2\x32;\x3\x2$$\x3\x2\"\"\x5\x2\x43\\\x61\x61\x63|\x6"+
		"\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x1CC\x2\x3\x3\x2\x2\x2"+
		"\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2"+
		"\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2"+
		"\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3"+
		"\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3"+
		"\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2"+
		"\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2"+
		"\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2"+
		"\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2"+
		"\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2"+
		"\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2"+
		"U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2"+
		"\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3"+
		"\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2"+
		"\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x2u\x3\x2\x2\x2\x2"+
		"w\x3\x2\x2\x2\x2y\x3\x2\x2\x2\x2{\x3\x2\x2\x2\x2}\x3\x2\x2\x2\x2\x7F\x3"+
		"\x2\x2\x2\x2\x81\x3\x2\x2\x2\x2\x83\x3\x2\x2\x2\x2\x85\x3\x2\x2\x2\x2"+
		"\x87\x3\x2\x2\x2\x3\x94\x3\x2\x2\x2\x5\x97\x3\x2\x2\x2\a\xAF\x3\x2\x2"+
		"\x2\t\xB1\x3\x2\x2\x2\v\xBC\x3\x2\x2\x2\r\xCC\x3\x2\x2\x2\xF\xD1\x3\x2"+
		"\x2\x2\x11\xD5\x3\x2\x2\x2\x13\xD9\x3\x2\x2\x2\x15\xE1\x3\x2\x2\x2\x17"+
		"\xE5\x3\x2\x2\x2\x19\xEB\x3\x2\x2\x2\x1B\xF4\x3\x2\x2\x2\x1D\xF7\x3\x2"+
		"\x2\x2\x1F\xFE\x3\x2\x2\x2!\x103\x3\x2\x2\x2#\x109\x3\x2\x2\x2%\x10C\x3"+
		"\x2\x2\x2\'\x10F\x3\x2\x2\x2)\x112\x3\x2\x2\x2+\x115\x3\x2\x2\x2-\x118"+
		"\x3\x2\x2\x2/\x11D\x3\x2\x2\x2\x31\x125\x3\x2\x2\x2\x33\x128\x3\x2\x2"+
		"\x2\x35\x12F\x3\x2\x2\x2\x37\x134\x3\x2\x2\x2\x39\x13B\x3\x2\x2\x2;\x142"+
		"\x3\x2\x2\x2=\x148\x3\x2\x2\x2?\x152\x3\x2\x2\x2\x41\x15B\x3\x2\x2\x2"+
		"\x43\x15D\x3\x2\x2\x2\x45\x15F\x3\x2\x2\x2G\x161\x3\x2\x2\x2I\x163\x3"+
		"\x2\x2\x2K\x165\x3\x2\x2\x2M\x167\x3\x2\x2\x2O\x169\x3\x2\x2\x2Q\x16B"+
		"\x3\x2\x2\x2S\x16E\x3\x2\x2\x2U\x170\x3\x2\x2\x2W\x172\x3\x2\x2\x2Y\x174"+
		"\x3\x2\x2\x2[\x176\x3\x2\x2\x2]\x178\x3\x2\x2\x2_\x17A\x3\x2\x2\x2\x61"+
		"\x17C\x3\x2\x2\x2\x63\x17E\x3\x2\x2\x2\x65\x180\x3\x2\x2\x2g\x183\x3\x2"+
		"\x2\x2i\x186\x3\x2\x2\x2k\x189\x3\x2\x2\x2m\x18C\x3\x2\x2\x2o\x18F\x3"+
		"\x2\x2\x2q\x192\x3\x2\x2\x2s\x194\x3\x2\x2\x2u\x196\x3\x2\x2\x2w\x199"+
		"\x3\x2\x2\x2y\x19C\x3\x2\x2\x2{\x19E\x3\x2\x2\x2}\x1A0\x3\x2\x2\x2\x7F"+
		"\x1A3\x3\x2\x2\x2\x81\x1A6\x3\x2\x2\x2\x83\x1AD\x3\x2\x2\x2\x85\x1BA\x3"+
		"\x2\x2\x2\x87\x1BE\x3\x2\x2\x2\x89\x8B\a/\x2\x2\x8A\x89\x3\x2\x2\x2\x8A"+
		"\x8B\x3\x2\x2\x2\x8B\x8C\x3\x2\x2\x2\x8C\x90\t\x2\x2\x2\x8D\x8F\t\x3\x2"+
		"\x2\x8E\x8D\x3\x2\x2\x2\x8F\x92\x3\x2\x2\x2\x90\x8E\x3\x2\x2\x2\x90\x91"+
		"\x3\x2\x2\x2\x91\x95\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x93\x95\a\x32\x2"+
		"\x2\x94\x8A\x3\x2\x2\x2\x94\x93\x3\x2\x2\x2\x95\x4\x3\x2\x2\x2\x96\x98"+
		"\a/\x2\x2\x97\x96\x3\x2\x2\x2\x97\x98\x3\x2\x2\x2\x98\x9C\x3\x2\x2\x2"+
		"\x99\x9B\t\x2\x2\x2\x9A\x99\x3\x2\x2\x2\x9B\x9E\x3\x2\x2\x2\x9C\x9A\x3"+
		"\x2\x2\x2\x9C\x9D\x3\x2\x2\x2\x9D\x9F\x3\x2\x2\x2\x9E\x9C\x3\x2\x2\x2"+
		"\x9F\xA0\t\x3\x2\x2\xA0\xA2\a\x30\x2\x2\xA1\xA3\t\x3\x2\x2\xA2\xA1\x3"+
		"\x2\x2\x2\xA3\xA4\x3\x2\x2\x2\xA4\xA2\x3\x2\x2\x2\xA4\xA5\x3\x2\x2\x2"+
		"\xA5\x6\x3\x2\x2\x2\xA6\xA7\av\x2\x2\xA7\xA8\at\x2\x2\xA8\xA9\aw\x2\x2"+
		"\xA9\xB0\ag\x2\x2\xAA\xAB\ah\x2\x2\xAB\xAC\a\x63\x2\x2\xAC\xAD\an\x2\x2"+
		"\xAD\xAE\au\x2\x2\xAE\xB0\ag\x2\x2\xAF\xA6\x3\x2\x2\x2\xAF\xAA\x3\x2\x2"+
		"\x2\xB0\b\x3\x2\x2\x2\xB1\xB7\a$\x2\x2\xB2\xB6\n\x4\x2\x2\xB3\xB4\a^\x2"+
		"\x2\xB4\xB6\a$\x2\x2\xB5\xB2\x3\x2\x2\x2\xB5\xB3\x3\x2\x2\x2\xB6\xB9\x3"+
		"\x2\x2\x2\xB7\xB5\x3\x2\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xBA\x3\x2\x2\x2"+
		"\xB9\xB7\x3\x2\x2\x2\xBA\xBB\a$\x2\x2\xBB\n\x3\x2\x2\x2\xBC\xC0\x5\x3"+
		"\x2\x2\xBD\xBF\t\x5\x2\x2\xBE\xBD\x3\x2\x2\x2\xBF\xC2\x3\x2\x2\x2\xC0"+
		"\xBE\x3\x2\x2\x2\xC0\xC1\x3\x2\x2\x2\xC1\xC3\x3\x2\x2\x2\xC2\xC0\x3\x2"+
		"\x2\x2\xC3\xC7\x5]/\x2\xC4\xC6\t\x5\x2\x2\xC5\xC4\x3\x2\x2\x2\xC6\xC9"+
		"\x3\x2\x2\x2\xC7\xC5\x3\x2\x2\x2\xC7\xC8\x3\x2\x2\x2\xC8\xCA\x3\x2\x2"+
		"\x2\xC9\xC7\x3\x2\x2\x2\xCA\xCB\x5\x3\x2\x2\xCB\f\x3\x2\x2\x2\xCC\xCD"+
		"\ap\x2\x2\xCD\xCE\aw\x2\x2\xCE\xCF\an\x2\x2\xCF\xD0\an\x2\x2\xD0\xE\x3"+
		"\x2\x2\x2\xD1\xD2\an\x2\x2\xD2\xD3\ag\x2\x2\xD3\xD4\av\x2\x2\xD4\x10\x3"+
		"\x2\x2\x2\xD5\xD6\ah\x2\x2\xD6\xD7\aq\x2\x2\xD7\xD8\at\x2\x2\xD8\x12\x3"+
		"\x2\x2\x2\xD9\xDA\ah\x2\x2\xDA\xDB\aq\x2\x2\xDB\xDC\at\x2\x2\xDC\xDD\a"+
		"g\x2\x2\xDD\xDE\a\x63\x2\x2\xDE\xDF\a\x65\x2\x2\xDF\xE0\aj\x2\x2\xE0\x14"+
		"\x3\x2\x2\x2\xE1\xE2\a\x63\x2\x2\xE2\xE3\a\x66\x2\x2\xE3\xE4\a\x66\x2"+
		"\x2\xE4\x16\x3\x2\x2\x2\xE5\xE6\a\x64\x2\x2\xE6\xE7\at\x2\x2\xE7\xE8\a"+
		"g\x2\x2\xE8\xE9\a\x63\x2\x2\xE9\xEA\am\x2\x2\xEA\x18\x3\x2\x2\x2\xEB\xEC"+
		"\a\x65\x2\x2\xEC\xED\aq\x2\x2\xED\xEE\ap\x2\x2\xEE\xEF\av\x2\x2\xEF\xF0"+
		"\ak\x2\x2\xF0\xF1\ap\x2\x2\xF1\xF2\aw\x2\x2\xF2\xF3\ag\x2\x2\xF3\x1A\x3"+
		"\x2\x2\x2\xF4\xF5\a\x63\x2\x2\xF5\xF6\av\x2\x2\xF6\x1C\x3\x2\x2\x2\xF7"+
		"\xF8\at\x2\x2\xF8\xF9\ag\x2\x2\xF9\xFA\ao\x2\x2\xFA\xFB\aq\x2\x2\xFB\xFC"+
		"\ax\x2\x2\xFC\xFD\ag\x2\x2\xFD\x1E\x3\x2\x2\x2\xFE\xFF\ah\x2\x2\xFF\x100"+
		"\at\x2\x2\x100\x101\aq\x2\x2\x101\x102\ao\x2\x2\x102 \x3\x2\x2\x2\x103"+
		"\x104\ay\x2\x2\x104\x105\aj\x2\x2\x105\x106\ak\x2\x2\x106\x107\an\x2\x2"+
		"\x107\x108\ag\x2\x2\x108\"\x3\x2\x2\x2\x109\x10A\ak\x2\x2\x10A\x10B\a"+
		"p\x2\x2\x10B$\x3\x2\x2\x2\x10C\x10D\ak\x2\x2\x10D\x10E\ah\x2\x2\x10E&"+
		"\x3\x2\x2\x2\x10F\x110\aw\x2\x2\x110\x111\ar\x2\x2\x111(\x3\x2\x2\x2\x112"+
		"\x113\av\x2\x2\x113\x114\aq\x2\x2\x114*\x3\x2\x2\x2\x115\x116\a\x63\x2"+
		"\x2\x116\x117\au\x2\x2\x117,\x3\x2\x2\x2\x118\x119\ag\x2\x2\x119\x11A"+
		"\ap\x2\x2\x11A\x11B\aw\x2\x2\x11B\x11C\ao\x2\x2\x11C.\x3\x2\x2\x2\x11D"+
		"\x11E\an\x2\x2\x11E\x11F\ak\x2\x2\x11F\x120\a\x64\x2\x2\x120\x121\at\x2"+
		"\x2\x121\x122\a\x63\x2\x2\x122\x123\at\x2\x2\x123\x124\a{\x2\x2\x124\x30"+
		"\x3\x2\x2\x2\x125\x126\au\x2\x2\x126\x127\ah\x2\x2\x127\x32\x3\x2\x2\x2"+
		"\x128\x129\aq\x2\x2\x129\x12A\a\x64\x2\x2\x12A\x12B\al\x2\x2\x12B\x12C"+
		"\ag\x2\x2\x12C\x12D\a\x65\x2\x2\x12D\x12E\av\x2\x2\x12E\x34\x3\x2\x2\x2"+
		"\x12F\x130\ag\x2\x2\x130\x131\an\x2\x2\x131\x132\au\x2\x2\x132\x133\a"+
		"g\x2\x2\x133\x36\x3\x2\x2\x2\x134\x135\ak\x2\x2\x135\x136\ao\x2\x2\x136"+
		"\x137\ar\x2\x2\x137\x138\aq\x2\x2\x138\x139\at\x2\x2\x139\x13A\av\x2\x2"+
		"\x13A\x38\x3\x2\x2\x2\x13B\x13C\at\x2\x2\x13C\x13D\ag\x2\x2\x13D\x13E"+
		"\av\x2\x2\x13E\x13F\aw\x2\x2\x13F\x140\at\x2\x2\x140\x141\ap\x2\x2\x141"+
		":\x3\x2\x2\x2\x142\x143\ar\x2\x2\x143\x144\at\x2\x2\x144\x145\ak\x2\x2"+
		"\x145\x146\ap\x2\x2\x146\x147\av\x2\x2\x147<\x3\x2\x2\x2\x148\x149\a\x66"+
		"\x2\x2\x149\x14A\ak\x2\x2\x14A\x14B\au\x2\x2\x14B\x14C\at\x2\x2\x14C\x14D"+
		"\ag\x2\x2\x14D\x14E\ai\x2\x2\x14E\x14F\a\x63\x2\x2\x14F\x150\at\x2\x2"+
		"\x150\x151\a\x66\x2\x2\x151>\x3\x2\x2\x2\x152\x153\ag\x2\x2\x153\x154"+
		"\az\x2\x2\x154\x155\av\x2\x2\x155\x156\ag\x2\x2\x156\x157\at\x2\x2\x157"+
		"\x158\ap\x2\x2\x158\x159\a\x63\x2\x2\x159\x15A\an\x2\x2\x15A@\x3\x2\x2"+
		"\x2\x15B\x15C\a=\x2\x2\x15C\x42\x3\x2\x2\x2\x15D\x15E\a?\x2\x2\x15E\x44"+
		"\x3\x2\x2\x2\x15F\x160\a.\x2\x2\x160\x46\x3\x2\x2\x2\x161\x162\a}\x2\x2"+
		"\x162H\x3\x2\x2\x2\x163\x164\a\x7F\x2\x2\x164J\x3\x2\x2\x2\x165\x166\a"+
		"]\x2\x2\x166L\x3\x2\x2\x2\x167\x168\a_\x2\x2\x168N\x3\x2\x2\x2\x169\x16A"+
		"\a#\x2\x2\x16AP\x3\x2\x2\x2\x16B\x16C\a>\x2\x2\x16C\x16D\a/\x2\x2\x16D"+
		"R\x3\x2\x2\x2\x16E\x16F\a*\x2\x2\x16FT\x3\x2\x2\x2\x170\x171\a+\x2\x2"+
		"\x171V\x3\x2\x2\x2\x172\x173\a-\x2\x2\x173X\x3\x2\x2\x2\x174\x175\a/\x2"+
		"\x2\x175Z\x3\x2\x2\x2\x176\x177\a,\x2\x2\x177\\\x3\x2\x2\x2\x178\x179"+
		"\a\x31\x2\x2\x179^\x3\x2\x2\x2\x17A\x17B\a`\x2\x2\x17B`\x3\x2\x2\x2\x17C"+
		"\x17D\a\'\x2\x2\x17D\x62\x3\x2\x2\x2\x17E\x17F\a\x30\x2\x2\x17F\x64\x3"+
		"\x2\x2\x2\x180\x181\a-\x2\x2\x181\x182\a?\x2\x2\x182\x66\x3\x2\x2\x2\x183"+
		"\x184\a/\x2\x2\x184\x185\a?\x2\x2\x185h\x3\x2\x2\x2\x186\x187\a\x31\x2"+
		"\x2\x187\x188\a?\x2\x2\x188j\x3\x2\x2\x2\x189\x18A\a,\x2\x2\x18A\x18B"+
		"\a?\x2\x2\x18Bl\x3\x2\x2\x2\x18C\x18D\a-\x2\x2\x18D\x18E\a-\x2\x2\x18E"+
		"n\x3\x2\x2\x2\x18F\x190\a/\x2\x2\x190\x191\a/\x2\x2\x191p\x3\x2\x2\x2"+
		"\x192\x193\a~\x2\x2\x193r\x3\x2\x2\x2\x194\x195\a(\x2\x2\x195t\x3\x2\x2"+
		"\x2\x196\x197\a#\x2\x2\x197\x198\a?\x2\x2\x198v\x3\x2\x2\x2\x199\x19A"+
		"\a?\x2\x2\x19A\x19B\a?\x2\x2\x19Bx\x3\x2\x2\x2\x19C\x19D\a@\x2\x2\x19D"+
		"z\x3\x2\x2\x2\x19E\x19F\a>\x2\x2\x19F|\x3\x2\x2\x2\x1A0\x1A1\a@\x2\x2"+
		"\x1A1\x1A2\a?\x2\x2\x1A2~\x3\x2\x2\x2\x1A3\x1A4\a>\x2\x2\x1A4\x1A5\a?"+
		"\x2\x2\x1A5\x80\x3\x2\x2\x2\x1A6\x1AA\t\x6\x2\x2\x1A7\x1A9\t\a\x2\x2\x1A8"+
		"\x1A7\x3\x2\x2\x2\x1A9\x1AC\x3\x2\x2\x2\x1AA\x1A8\x3\x2\x2\x2\x1AA\x1AB"+
		"\x3\x2\x2\x2\x1AB\x82\x3\x2\x2\x2\x1AC\x1AA\x3\x2\x2\x2\x1AD\x1AE\a\x31"+
		"\x2\x2\x1AE\x1AF\a\x31\x2\x2\x1AF\x1B3\x3\x2\x2\x2\x1B0\x1B2\v\x2\x2\x2"+
		"\x1B1\x1B0\x3\x2\x2\x2\x1B2\x1B5\x3\x2\x2\x2\x1B3\x1B4\x3\x2\x2\x2\x1B3"+
		"\x1B1\x3\x2\x2\x2\x1B4\x1B6\x3\x2\x2\x2\x1B5\x1B3\x3\x2\x2\x2\x1B6\x1B7"+
		"\a\f\x2\x2\x1B7\x1B8\x3\x2\x2\x2\x1B8\x1B9\b\x42\x2\x2\x1B9\x84\x3\x2"+
		"\x2\x2\x1BA\x1BB\t\b\x2\x2\x1BB\x1BC\x3\x2\x2\x2\x1BC\x1BD\b\x43\x2\x2"+
		"\x1BD\x86\x3\x2\x2\x2\x1BE\x1BF\v\x2\x2\x2\x1BF\x88\x3\x2\x2\x2\x10\x2"+
		"\x8A\x90\x94\x97\x9C\xA4\xAF\xB5\xB7\xC0\xC7\x1AA\x1B3\x3\x2\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
