//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/c272/Repos/algo-lang/Algo/Parsing/algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, WHILE_SYM=9, IN_SYM=10, IF_SYM=11, UP_SYM=12, TO_SYM=13, AS_SYM=14, 
		ENUM_SYM=15, LIB_SYM=16, SIG_FIG_SYM=17, OBJ_SYM=18, ELSE_SYM=19, IMPORT_SYM=20, 
		RETURN_SYM=21, PRINT_SYM=22, DISREGARD_SYM=23, EXTERNAL_SYM=24, ENDLINE=25, 
		EQUALS=26, COMMA=27, LBRACE=28, RBRACE=29, LSQBR=30, RSQBR=31, INVERT_SYM=32, 
		STREAMING_SYM=33, LBRACKET=34, RBRACKET=35, ADD_OP=36, TAKE_OP=37, MUL_OP=38, 
		DIV_OP=39, POW_OP=40, POINT=41, ADDFROM_OP=42, TAKEFROM_OP=43, DIVFROM_OP=44, 
		MULFROM_OP=45, ADD_PFOP=46, TAKE_PFOP=47, BIN_OR=48, BIN_AND=49, BIN_NET=50, 
		BIN_EQUALS=51, GRTR_THAN=52, LESS_THAN=53, GRTR_THAN_ET=54, LESS_THAN_ET=55, 
		IDENTIFIER=56, COMMENT=57, WS=58, UNKNOWN_SYMBOL=59;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", 
		"RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", 
		"EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"STREAMING_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'while'", 
		"'in'", "'if'", "'up'", "'to'", "'as'", "'enum'", "'library'", "'sf'", 
		"'object'", "'else'", "'import'", "'return'", "'print'", "'disregard'", 
		"'external'", "';'", "'='", "','", "'{'", "'}'", "'['", "']'", "'!'", 
		"'<-'", "'('", "')'", "'+'", "'-'", "'*'", "'/'", "'^'", "'.'", "'+='", 
		"'-='", "'/='", "'*='", "'++'", "'--'", "'|'", "'&'", "'!='", "'=='", 
		"'>'", "'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", 
		"RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", 
		"EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"STREAMING_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2=\x184\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x3\x2\x5\x2{\n\x2\x3\x2"+
		"\x3\x2\a\x2\x7F\n\x2\f\x2\xE\x2\x82\v\x2\x3\x2\x5\x2\x85\n\x2\x3\x3\x5"+
		"\x3\x88\n\x3\x3\x3\a\x3\x8B\n\x3\f\x3\xE\x3\x8E\v\x3\x3\x3\x3\x3\x3\x3"+
		"\x6\x3\x93\n\x3\r\x3\xE\x3\x94\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x5\x4\xA0\n\x4\x3\x5\x3\x5\x3\x5\x3\x5\a\x5\xA6\n\x5\f"+
		"\x5\xE\x5\xA9\v\x5\x3\x5\x3\x5\x3\x6\x3\x6\a\x6\xAF\n\x6\f\x6\xE\x6\xB2"+
		"\v\x6\x3\x6\x3\x6\a\x6\xB6\n\x6\f\x6\xE\x6\xB9\v\x6\x3\x6\x3\x6\x3\a\x3"+
		"\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3"+
		"\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3"+
		"\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12"+
		"\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16"+
		"\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18"+
		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E"+
		"\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3\"\x3#\x3#\x3$\x3$\x3"+
		"%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3+\x3,\x3,\x3"+
		",\x3-\x3-\x3-\x3.\x3.\x3.\x3/\x3/\x3/\x3\x30\x3\x30\x3\x30\x3\x31\x3\x31"+
		"\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33\x3\x34\x3\x34\x3\x34\x3\x35\x3\x35"+
		"\x3\x36\x3\x36\x3\x37\x3\x37\x3\x37\x3\x38\x3\x38\x3\x38\x3\x39\x3\x39"+
		"\a\x39\x16D\n\x39\f\x39\xE\x39\x170\v\x39\x3:\x3:\x3:\x3:\a:\x176\n:\f"+
		":\xE:\x179\v:\x3:\x3:\x3:\x3:\x3;\x3;\x3;\x3;\x3<\x3<\x3\x177\x2\x2=\x3"+
		"\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2"+
		"\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12"+
		"#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33"+
		"\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43"+
		"\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]"+
		"\x2\x30_\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37"+
		"m\x2\x38o\x2\x39q\x2:s\x2;u\x2<w\x2=\x3\x2\t\x3\x2\x33;\x3\x2\x32;\x3"+
		"\x2$$\x3\x2\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63"+
		"|\x5\x2\v\f\xF\xF\"\"\x190\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3"+
		"\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3"+
		"\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2"+
		"\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2"+
		"\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2"+
		"\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/"+
		"\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2"+
		"\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2"+
		"\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2"+
		"\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2\x2o\x3\x2\x2\x2\x2"+
		"q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x2u\x3\x2\x2\x2\x2w\x3\x2\x2\x2\x3\x84\x3"+
		"\x2\x2\x2\x5\x87\x3\x2\x2\x2\a\x9F\x3\x2\x2\x2\t\xA1\x3\x2\x2\x2\v\xAC"+
		"\x3\x2\x2\x2\r\xBC\x3\x2\x2\x2\xF\xC1\x3\x2\x2\x2\x11\xC5\x3\x2\x2\x2"+
		"\x13\xC9\x3\x2\x2\x2\x15\xCF\x3\x2\x2\x2\x17\xD2\x3\x2\x2\x2\x19\xD5\x3"+
		"\x2\x2\x2\x1B\xD8\x3\x2\x2\x2\x1D\xDB\x3\x2\x2\x2\x1F\xDE\x3\x2\x2\x2"+
		"!\xE3\x3\x2\x2\x2#\xEB\x3\x2\x2\x2%\xEE\x3\x2\x2\x2\'\xF5\x3\x2\x2\x2"+
		")\xFA\x3\x2\x2\x2+\x101\x3\x2\x2\x2-\x108\x3\x2\x2\x2/\x10E\x3\x2\x2\x2"+
		"\x31\x118\x3\x2\x2\x2\x33\x121\x3\x2\x2\x2\x35\x123\x3\x2\x2\x2\x37\x125"+
		"\x3\x2\x2\x2\x39\x127\x3\x2\x2\x2;\x129\x3\x2\x2\x2=\x12B\x3\x2\x2\x2"+
		"?\x12D\x3\x2\x2\x2\x41\x12F\x3\x2\x2\x2\x43\x131\x3\x2\x2\x2\x45\x134"+
		"\x3\x2\x2\x2G\x136\x3\x2\x2\x2I\x138\x3\x2\x2\x2K\x13A\x3\x2\x2\x2M\x13C"+
		"\x3\x2\x2\x2O\x13E\x3\x2\x2\x2Q\x140\x3\x2\x2\x2S\x142\x3\x2\x2\x2U\x144"+
		"\x3\x2\x2\x2W\x147\x3\x2\x2\x2Y\x14A\x3\x2\x2\x2[\x14D\x3\x2\x2\x2]\x150"+
		"\x3\x2\x2\x2_\x153\x3\x2\x2\x2\x61\x156\x3\x2\x2\x2\x63\x158\x3\x2\x2"+
		"\x2\x65\x15A\x3\x2\x2\x2g\x15D\x3\x2\x2\x2i\x160\x3\x2\x2\x2k\x162\x3"+
		"\x2\x2\x2m\x164\x3\x2\x2\x2o\x167\x3\x2\x2\x2q\x16A\x3\x2\x2\x2s\x171"+
		"\x3\x2\x2\x2u\x17E\x3\x2\x2\x2w\x182\x3\x2\x2\x2y{\a/\x2\x2zy\x3\x2\x2"+
		"\x2z{\x3\x2\x2\x2{|\x3\x2\x2\x2|\x80\t\x2\x2\x2}\x7F\t\x3\x2\x2~}\x3\x2"+
		"\x2\x2\x7F\x82\x3\x2\x2\x2\x80~\x3\x2\x2\x2\x80\x81\x3\x2\x2\x2\x81\x85"+
		"\x3\x2\x2\x2\x82\x80\x3\x2\x2\x2\x83\x85\a\x32\x2\x2\x84z\x3\x2\x2\x2"+
		"\x84\x83\x3\x2\x2\x2\x85\x4\x3\x2\x2\x2\x86\x88\a/\x2\x2\x87\x86\x3\x2"+
		"\x2\x2\x87\x88\x3\x2\x2\x2\x88\x8C\x3\x2\x2\x2\x89\x8B\t\x2\x2\x2\x8A"+
		"\x89\x3\x2\x2\x2\x8B\x8E\x3\x2\x2\x2\x8C\x8A\x3\x2\x2\x2\x8C\x8D\x3\x2"+
		"\x2\x2\x8D\x8F\x3\x2\x2\x2\x8E\x8C\x3\x2\x2\x2\x8F\x90\t\x3\x2\x2\x90"+
		"\x92\a\x30\x2\x2\x91\x93\t\x3\x2\x2\x92\x91\x3\x2\x2\x2\x93\x94\x3\x2"+
		"\x2\x2\x94\x92\x3\x2\x2\x2\x94\x95\x3\x2\x2\x2\x95\x6\x3\x2\x2\x2\x96"+
		"\x97\av\x2\x2\x97\x98\at\x2\x2\x98\x99\aw\x2\x2\x99\xA0\ag\x2\x2\x9A\x9B"+
		"\ah\x2\x2\x9B\x9C\a\x63\x2\x2\x9C\x9D\an\x2\x2\x9D\x9E\au\x2\x2\x9E\xA0"+
		"\ag\x2\x2\x9F\x96\x3\x2\x2\x2\x9F\x9A\x3\x2\x2\x2\xA0\b\x3\x2\x2\x2\xA1"+
		"\xA7\a$\x2\x2\xA2\xA6\n\x4\x2\x2\xA3\xA4\a^\x2\x2\xA4\xA6\a$\x2\x2\xA5"+
		"\xA2\x3\x2\x2\x2\xA5\xA3\x3\x2\x2\x2\xA6\xA9\x3\x2\x2\x2\xA7\xA5\x3\x2"+
		"\x2\x2\xA7\xA8\x3\x2\x2\x2\xA8\xAA\x3\x2\x2\x2\xA9\xA7\x3\x2\x2\x2\xAA"+
		"\xAB\a$\x2\x2\xAB\n\x3\x2\x2\x2\xAC\xB0\x5\x3\x2\x2\xAD\xAF\t\x5\x2\x2"+
		"\xAE\xAD\x3\x2\x2\x2\xAF\xB2\x3\x2\x2\x2\xB0\xAE\x3\x2\x2\x2\xB0\xB1\x3"+
		"\x2\x2\x2\xB1\xB3\x3\x2\x2\x2\xB2\xB0\x3\x2\x2\x2\xB3\xB7\x5O(\x2\xB4"+
		"\xB6\t\x5\x2\x2\xB5\xB4\x3\x2\x2\x2\xB6\xB9\x3\x2\x2\x2\xB7\xB5\x3\x2"+
		"\x2\x2\xB7\xB8\x3\x2\x2\x2\xB8\xBA\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2\xBA"+
		"\xBB\x5\x3\x2\x2\xBB\f\x3\x2\x2\x2\xBC\xBD\ap\x2\x2\xBD\xBE\aw\x2\x2\xBE"+
		"\xBF\an\x2\x2\xBF\xC0\an\x2\x2\xC0\xE\x3\x2\x2\x2\xC1\xC2\an\x2\x2\xC2"+
		"\xC3\ag\x2\x2\xC3\xC4\av\x2\x2\xC4\x10\x3\x2\x2\x2\xC5\xC6\ah\x2\x2\xC6"+
		"\xC7\aq\x2\x2\xC7\xC8\at\x2\x2\xC8\x12\x3\x2\x2\x2\xC9\xCA\ay\x2\x2\xCA"+
		"\xCB\aj\x2\x2\xCB\xCC\ak\x2\x2\xCC\xCD\an\x2\x2\xCD\xCE\ag\x2\x2\xCE\x14"+
		"\x3\x2\x2\x2\xCF\xD0\ak\x2\x2\xD0\xD1\ap\x2\x2\xD1\x16\x3\x2\x2\x2\xD2"+
		"\xD3\ak\x2\x2\xD3\xD4\ah\x2\x2\xD4\x18\x3\x2\x2\x2\xD5\xD6\aw\x2\x2\xD6"+
		"\xD7\ar\x2\x2\xD7\x1A\x3\x2\x2\x2\xD8\xD9\av\x2\x2\xD9\xDA\aq\x2\x2\xDA"+
		"\x1C\x3\x2\x2\x2\xDB\xDC\a\x63\x2\x2\xDC\xDD\au\x2\x2\xDD\x1E\x3\x2\x2"+
		"\x2\xDE\xDF\ag\x2\x2\xDF\xE0\ap\x2\x2\xE0\xE1\aw\x2\x2\xE1\xE2\ao\x2\x2"+
		"\xE2 \x3\x2\x2\x2\xE3\xE4\an\x2\x2\xE4\xE5\ak\x2\x2\xE5\xE6\a\x64\x2\x2"+
		"\xE6\xE7\at\x2\x2\xE7\xE8\a\x63\x2\x2\xE8\xE9\at\x2\x2\xE9\xEA\a{\x2\x2"+
		"\xEA\"\x3\x2\x2\x2\xEB\xEC\au\x2\x2\xEC\xED\ah\x2\x2\xED$\x3\x2\x2\x2"+
		"\xEE\xEF\aq\x2\x2\xEF\xF0\a\x64\x2\x2\xF0\xF1\al\x2\x2\xF1\xF2\ag\x2\x2"+
		"\xF2\xF3\a\x65\x2\x2\xF3\xF4\av\x2\x2\xF4&\x3\x2\x2\x2\xF5\xF6\ag\x2\x2"+
		"\xF6\xF7\an\x2\x2\xF7\xF8\au\x2\x2\xF8\xF9\ag\x2\x2\xF9(\x3\x2\x2\x2\xFA"+
		"\xFB\ak\x2\x2\xFB\xFC\ao\x2\x2\xFC\xFD\ar\x2\x2\xFD\xFE\aq\x2\x2\xFE\xFF"+
		"\at\x2\x2\xFF\x100\av\x2\x2\x100*\x3\x2\x2\x2\x101\x102\at\x2\x2\x102"+
		"\x103\ag\x2\x2\x103\x104\av\x2\x2\x104\x105\aw\x2\x2\x105\x106\at\x2\x2"+
		"\x106\x107\ap\x2\x2\x107,\x3\x2\x2\x2\x108\x109\ar\x2\x2\x109\x10A\at"+
		"\x2\x2\x10A\x10B\ak\x2\x2\x10B\x10C\ap\x2\x2\x10C\x10D\av\x2\x2\x10D."+
		"\x3\x2\x2\x2\x10E\x10F\a\x66\x2\x2\x10F\x110\ak\x2\x2\x110\x111\au\x2"+
		"\x2\x111\x112\at\x2\x2\x112\x113\ag\x2\x2\x113\x114\ai\x2\x2\x114\x115"+
		"\a\x63\x2\x2\x115\x116\at\x2\x2\x116\x117\a\x66\x2\x2\x117\x30\x3\x2\x2"+
		"\x2\x118\x119\ag\x2\x2\x119\x11A\az\x2\x2\x11A\x11B\av\x2\x2\x11B\x11C"+
		"\ag\x2\x2\x11C\x11D\at\x2\x2\x11D\x11E\ap\x2\x2\x11E\x11F\a\x63\x2\x2"+
		"\x11F\x120\an\x2\x2\x120\x32\x3\x2\x2\x2\x121\x122\a=\x2\x2\x122\x34\x3"+
		"\x2\x2\x2\x123\x124\a?\x2\x2\x124\x36\x3\x2\x2\x2\x125\x126\a.\x2\x2\x126"+
		"\x38\x3\x2\x2\x2\x127\x128\a}\x2\x2\x128:\x3\x2\x2\x2\x129\x12A\a\x7F"+
		"\x2\x2\x12A<\x3\x2\x2\x2\x12B\x12C\a]\x2\x2\x12C>\x3\x2\x2\x2\x12D\x12E"+
		"\a_\x2\x2\x12E@\x3\x2\x2\x2\x12F\x130\a#\x2\x2\x130\x42\x3\x2\x2\x2\x131"+
		"\x132\a>\x2\x2\x132\x133\a/\x2\x2\x133\x44\x3\x2\x2\x2\x134\x135\a*\x2"+
		"\x2\x135\x46\x3\x2\x2\x2\x136\x137\a+\x2\x2\x137H\x3\x2\x2\x2\x138\x139"+
		"\a-\x2\x2\x139J\x3\x2\x2\x2\x13A\x13B\a/\x2\x2\x13BL\x3\x2\x2\x2\x13C"+
		"\x13D\a,\x2\x2\x13DN\x3\x2\x2\x2\x13E\x13F\a\x31\x2\x2\x13FP\x3\x2\x2"+
		"\x2\x140\x141\a`\x2\x2\x141R\x3\x2\x2\x2\x142\x143\a\x30\x2\x2\x143T\x3"+
		"\x2\x2\x2\x144\x145\a-\x2\x2\x145\x146\a?\x2\x2\x146V\x3\x2\x2\x2\x147"+
		"\x148\a/\x2\x2\x148\x149\a?\x2\x2\x149X\x3\x2\x2\x2\x14A\x14B\a\x31\x2"+
		"\x2\x14B\x14C\a?\x2\x2\x14CZ\x3\x2\x2\x2\x14D\x14E\a,\x2\x2\x14E\x14F"+
		"\a?\x2\x2\x14F\\\x3\x2\x2\x2\x150\x151\a-\x2\x2\x151\x152\a-\x2\x2\x152"+
		"^\x3\x2\x2\x2\x153\x154\a/\x2\x2\x154\x155\a/\x2\x2\x155`\x3\x2\x2\x2"+
		"\x156\x157\a~\x2\x2\x157\x62\x3\x2\x2\x2\x158\x159\a(\x2\x2\x159\x64\x3"+
		"\x2\x2\x2\x15A\x15B\a#\x2\x2\x15B\x15C\a?\x2\x2\x15C\x66\x3\x2\x2\x2\x15D"+
		"\x15E\a?\x2\x2\x15E\x15F\a?\x2\x2\x15Fh\x3\x2\x2\x2\x160\x161\a@\x2\x2"+
		"\x161j\x3\x2\x2\x2\x162\x163\a>\x2\x2\x163l\x3\x2\x2\x2\x164\x165\a@\x2"+
		"\x2\x165\x166\a?\x2\x2\x166n\x3\x2\x2\x2\x167\x168\a>\x2\x2\x168\x169"+
		"\a?\x2\x2\x169p\x3\x2\x2\x2\x16A\x16E\t\x6\x2\x2\x16B\x16D\t\a\x2\x2\x16C"+
		"\x16B\x3\x2\x2\x2\x16D\x170\x3\x2\x2\x2\x16E\x16C\x3\x2\x2\x2\x16E\x16F"+
		"\x3\x2\x2\x2\x16Fr\x3\x2\x2\x2\x170\x16E\x3\x2\x2\x2\x171\x172\a\x31\x2"+
		"\x2\x172\x173\a\x31\x2\x2\x173\x177\x3\x2\x2\x2\x174\x176\v\x2\x2\x2\x175"+
		"\x174\x3\x2\x2\x2\x176\x179\x3\x2\x2\x2\x177\x178\x3\x2\x2\x2\x177\x175"+
		"\x3\x2\x2\x2\x178\x17A\x3\x2\x2\x2\x179\x177\x3\x2\x2\x2\x17A\x17B\a\f"+
		"\x2\x2\x17B\x17C\x3\x2\x2\x2\x17C\x17D\b:\x2\x2\x17Dt\x3\x2\x2\x2\x17E"+
		"\x17F\t\b\x2\x2\x17F\x180\x3\x2\x2\x2\x180\x181\b;\x2\x2\x181v\x3\x2\x2"+
		"\x2\x182\x183\v\x2\x2\x2\x183x\x3\x2\x2\x2\x10\x2z\x80\x84\x87\x8C\x94"+
		"\x9F\xA5\xA7\xB0\xB7\x16E\x177\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
