//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Z:\Algo\Algo\Parsing\algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, WHILE_SYM=9, IN_SYM=10, IF_SYM=11, TO_SYM=12, AS_SYM=13, LIB_SYM=14, 
		SIG_FIG_SYM=15, OBJ_SYM=16, ELSE_SYM=17, IMPORT_SYM=18, RETURN_SYM=19, 
		PRINT_SYM=20, DISREGARD_SYM=21, ENDLINE=22, EQUALS=23, COMMA=24, LBRACE=25, 
		RBRACE=26, LSQBR=27, RSQBR=28, INVERT_SYM=29, LBRACKET=30, RBRACKET=31, 
		ADD_OP=32, TAKE_OP=33, MUL_OP=34, DIV_OP=35, POW_OP=36, POINT=37, ADDFROM_OP=38, 
		TAKEFROM_OP=39, DIVFROM_OP=40, MULFROM_OP=41, ADD_PFOP=42, TAKE_PFOP=43, 
		BIN_OR=44, BIN_AND=45, BIN_NET=46, BIN_EQUALS=47, GRTR_THAN=48, LESS_THAN=49, 
		GRTR_THAN_ET=50, LESS_THAN_ET=51, IDENTIFIER=52, FILEPATH=53, COMMENT=54, 
		WS=55, UNKNOWN_SYMBOL=56;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "TO_SYM", "AS_SYM", "LIB_SYM", 
		"SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", 
		"DISREGARD_SYM", "ENDLINE", "EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", 
		"RSQBR", "INVERT_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "FILEPATH", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'while'", 
		"'in'", "'if'", "'to'", "'as'", "'library'", "'sf'", "'object'", "'else'", 
		"'import'", "'return'", "'print'", "'disregard'", "';'", "'='", "','", 
		"'{'", "'}'", "'['", "']'", "'!'", "'('", "')'", "'+'", "'-'", "'*'", 
		"'/'", "'^'", "'.'", "'+='", "'-='", "'/='", "'*='", "'++'", "'--'", "'|'", 
		"'&'", "'!='", "'=='", "'>'", "'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "TO_SYM", "AS_SYM", "LIB_SYM", 
		"SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", 
		"DISREGARD_SYM", "ENDLINE", "EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", 
		"RSQBR", "INVERT_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "FILEPATH", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2:\x16E\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x3\x2\x5\x2u\n\x2\x3\x2\x3\x2\a\x2y\n\x2\f"+
		"\x2\xE\x2|\v\x2\x3\x2\x5\x2\x7F\n\x2\x3\x3\x5\x3\x82\n\x3\x3\x3\a\x3\x85"+
		"\n\x3\f\x3\xE\x3\x88\v\x3\x3\x3\x3\x3\x3\x3\x6\x3\x8D\n\x3\r\x3\xE\x3"+
		"\x8E\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4\x9A\n"+
		"\x4\x3\x5\x3\x5\a\x5\x9E\n\x5\f\x5\xE\x5\xA1\v\x5\x3\x5\x3\x5\x3\x6\x3"+
		"\x6\a\x6\xA7\n\x6\f\x6\xE\x6\xAA\v\x6\x3\x6\x3\x6\a\x6\xAE\n\x6\f\x6\xE"+
		"\x6\xB1\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b"+
		"\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\f"+
		"\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3"+
		"\xF\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x11"+
		"\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13"+
		"\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17"+
		"\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C"+
		"\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3"+
		"#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3\'\x3(\x3(\x3(\x3)\x3)\x3)\x3"+
		"*\x3*\x3*\x3+\x3+\x3+\x3,\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3/\x3\x30\x3"+
		"\x30\x3\x30\x3\x31\x3\x31\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33\x3\x34\x3"+
		"\x34\x3\x34\x3\x35\x3\x35\a\x35\x151\n\x35\f\x35\xE\x35\x154\v\x35\x3"+
		"\x36\a\x36\x157\n\x36\f\x36\xE\x36\x15A\v\x36\x3\x37\x3\x37\x3\x37\x3"+
		"\x37\a\x37\x160\n\x37\f\x37\xE\x37\x163\v\x37\x3\x37\x3\x37\x3\x37\x3"+
		"\x37\x3\x38\x3\x38\x3\x38\x3\x38\x3\x39\x3\x39\x3\x161\x2\x2:\x3\x2\x3"+
		"\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45"+
		"\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_"+
		"\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38"+
		"o\x2\x39q\x2:\x3\x2\n\x3\x2\x33;\x3\x2\x32;\x3\x2$$\x3\x2\"\"\x5\x2\x43"+
		"\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x6\x2\x31;\x43\\\x61\x61"+
		"\x63|\x5\x2\v\f\xF\xF\"\"\x17A\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2"+
		"\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2"+
		"\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2"+
		"\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2"+
		"\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2\x2o\x3\x2\x2\x2\x2"+
		"q\x3\x2\x2\x2\x3~\x3\x2\x2\x2\x5\x81\x3\x2\x2\x2\a\x99\x3\x2\x2\x2\t\x9B"+
		"\x3\x2\x2\x2\v\xA4\x3\x2\x2\x2\r\xB4\x3\x2\x2\x2\xF\xB9\x3\x2\x2\x2\x11"+
		"\xBD\x3\x2\x2\x2\x13\xC1\x3\x2\x2\x2\x15\xC7\x3\x2\x2\x2\x17\xCA\x3\x2"+
		"\x2\x2\x19\xCD\x3\x2\x2\x2\x1B\xD0\x3\x2\x2\x2\x1D\xD3\x3\x2\x2\x2\x1F"+
		"\xDB\x3\x2\x2\x2!\xDE\x3\x2\x2\x2#\xE5\x3\x2\x2\x2%\xEA\x3\x2\x2\x2\'"+
		"\xF1\x3\x2\x2\x2)\xF8\x3\x2\x2\x2+\xFE\x3\x2\x2\x2-\x108\x3\x2\x2\x2/"+
		"\x10A\x3\x2\x2\x2\x31\x10C\x3\x2\x2\x2\x33\x10E\x3\x2\x2\x2\x35\x110\x3"+
		"\x2\x2\x2\x37\x112\x3\x2\x2\x2\x39\x114\x3\x2\x2\x2;\x116\x3\x2\x2\x2"+
		"=\x118\x3\x2\x2\x2?\x11A\x3\x2\x2\x2\x41\x11C\x3\x2\x2\x2\x43\x11E\x3"+
		"\x2\x2\x2\x45\x120\x3\x2\x2\x2G\x122\x3\x2\x2\x2I\x124\x3\x2\x2\x2K\x126"+
		"\x3\x2\x2\x2M\x128\x3\x2\x2\x2O\x12B\x3\x2\x2\x2Q\x12E\x3\x2\x2\x2S\x131"+
		"\x3\x2\x2\x2U\x134\x3\x2\x2\x2W\x137\x3\x2\x2\x2Y\x13A\x3\x2\x2\x2[\x13C"+
		"\x3\x2\x2\x2]\x13E\x3\x2\x2\x2_\x141\x3\x2\x2\x2\x61\x144\x3\x2\x2\x2"+
		"\x63\x146\x3\x2\x2\x2\x65\x148\x3\x2\x2\x2g\x14B\x3\x2\x2\x2i\x14E\x3"+
		"\x2\x2\x2k\x158\x3\x2\x2\x2m\x15B\x3\x2\x2\x2o\x168\x3\x2\x2\x2q\x16C"+
		"\x3\x2\x2\x2su\a/\x2\x2ts\x3\x2\x2\x2tu\x3\x2\x2\x2uv\x3\x2\x2\x2vz\t"+
		"\x2\x2\x2wy\t\x3\x2\x2xw\x3\x2\x2\x2y|\x3\x2\x2\x2zx\x3\x2\x2\x2z{\x3"+
		"\x2\x2\x2{\x7F\x3\x2\x2\x2|z\x3\x2\x2\x2}\x7F\a\x32\x2\x2~t\x3\x2\x2\x2"+
		"~}\x3\x2\x2\x2\x7F\x4\x3\x2\x2\x2\x80\x82\a/\x2\x2\x81\x80\x3\x2\x2\x2"+
		"\x81\x82\x3\x2\x2\x2\x82\x86\x3\x2\x2\x2\x83\x85\t\x2\x2\x2\x84\x83\x3"+
		"\x2\x2\x2\x85\x88\x3\x2\x2\x2\x86\x84\x3\x2\x2\x2\x86\x87\x3\x2\x2\x2"+
		"\x87\x89\x3\x2\x2\x2\x88\x86\x3\x2\x2\x2\x89\x8A\t\x3\x2\x2\x8A\x8C\a"+
		"\x30\x2\x2\x8B\x8D\t\x3\x2\x2\x8C\x8B\x3\x2\x2\x2\x8D\x8E\x3\x2\x2\x2"+
		"\x8E\x8C\x3\x2\x2\x2\x8E\x8F\x3\x2\x2\x2\x8F\x6\x3\x2\x2\x2\x90\x91\a"+
		"v\x2\x2\x91\x92\at\x2\x2\x92\x93\aw\x2\x2\x93\x9A\ag\x2\x2\x94\x95\ah"+
		"\x2\x2\x95\x96\a\x63\x2\x2\x96\x97\an\x2\x2\x97\x98\au\x2\x2\x98\x9A\a"+
		"g\x2\x2\x99\x90\x3\x2\x2\x2\x99\x94\x3\x2\x2\x2\x9A\b\x3\x2\x2\x2\x9B"+
		"\x9F\a$\x2\x2\x9C\x9E\n\x4\x2\x2\x9D\x9C\x3\x2\x2\x2\x9E\xA1\x3\x2\x2"+
		"\x2\x9F\x9D\x3\x2\x2\x2\x9F\xA0\x3\x2\x2\x2\xA0\xA2\x3\x2\x2\x2\xA1\x9F"+
		"\x3\x2\x2\x2\xA2\xA3\a$\x2\x2\xA3\n\x3\x2\x2\x2\xA4\xA8\x5\x3\x2\x2\xA5"+
		"\xA7\t\x5\x2\x2\xA6\xA5\x3\x2\x2\x2\xA7\xAA\x3\x2\x2\x2\xA8\xA6\x3\x2"+
		"\x2\x2\xA8\xA9\x3\x2\x2\x2\xA9\xAB\x3\x2\x2\x2\xAA\xA8\x3\x2\x2\x2\xAB"+
		"\xAF\x5G$\x2\xAC\xAE\t\x5\x2\x2\xAD\xAC\x3\x2\x2\x2\xAE\xB1\x3\x2\x2\x2"+
		"\xAF\xAD\x3\x2\x2\x2\xAF\xB0\x3\x2\x2\x2\xB0\xB2\x3\x2\x2\x2\xB1\xAF\x3"+
		"\x2\x2\x2\xB2\xB3\x5\x3\x2\x2\xB3\f\x3\x2\x2\x2\xB4\xB5\ap\x2\x2\xB5\xB6"+
		"\aw\x2\x2\xB6\xB7\an\x2\x2\xB7\xB8\an\x2\x2\xB8\xE\x3\x2\x2\x2\xB9\xBA"+
		"\an\x2\x2\xBA\xBB\ag\x2\x2\xBB\xBC\av\x2\x2\xBC\x10\x3\x2\x2\x2\xBD\xBE"+
		"\ah\x2\x2\xBE\xBF\aq\x2\x2\xBF\xC0\at\x2\x2\xC0\x12\x3\x2\x2\x2\xC1\xC2"+
		"\ay\x2\x2\xC2\xC3\aj\x2\x2\xC3\xC4\ak\x2\x2\xC4\xC5\an\x2\x2\xC5\xC6\a"+
		"g\x2\x2\xC6\x14\x3\x2\x2\x2\xC7\xC8\ak\x2\x2\xC8\xC9\ap\x2\x2\xC9\x16"+
		"\x3\x2\x2\x2\xCA\xCB\ak\x2\x2\xCB\xCC\ah\x2\x2\xCC\x18\x3\x2\x2\x2\xCD"+
		"\xCE\av\x2\x2\xCE\xCF\aq\x2\x2\xCF\x1A\x3\x2\x2\x2\xD0\xD1\a\x63\x2\x2"+
		"\xD1\xD2\au\x2\x2\xD2\x1C\x3\x2\x2\x2\xD3\xD4\an\x2\x2\xD4\xD5\ak\x2\x2"+
		"\xD5\xD6\a\x64\x2\x2\xD6\xD7\at\x2\x2\xD7\xD8\a\x63\x2\x2\xD8\xD9\at\x2"+
		"\x2\xD9\xDA\a{\x2\x2\xDA\x1E\x3\x2\x2\x2\xDB\xDC\au\x2\x2\xDC\xDD\ah\x2"+
		"\x2\xDD \x3\x2\x2\x2\xDE\xDF\aq\x2\x2\xDF\xE0\a\x64\x2\x2\xE0\xE1\al\x2"+
		"\x2\xE1\xE2\ag\x2\x2\xE2\xE3\a\x65\x2\x2\xE3\xE4\av\x2\x2\xE4\"\x3\x2"+
		"\x2\x2\xE5\xE6\ag\x2\x2\xE6\xE7\an\x2\x2\xE7\xE8\au\x2\x2\xE8\xE9\ag\x2"+
		"\x2\xE9$\x3\x2\x2\x2\xEA\xEB\ak\x2\x2\xEB\xEC\ao\x2\x2\xEC\xED\ar\x2\x2"+
		"\xED\xEE\aq\x2\x2\xEE\xEF\at\x2\x2\xEF\xF0\av\x2\x2\xF0&\x3\x2\x2\x2\xF1"+
		"\xF2\at\x2\x2\xF2\xF3\ag\x2\x2\xF3\xF4\av\x2\x2\xF4\xF5\aw\x2\x2\xF5\xF6"+
		"\at\x2\x2\xF6\xF7\ap\x2\x2\xF7(\x3\x2\x2\x2\xF8\xF9\ar\x2\x2\xF9\xFA\a"+
		"t\x2\x2\xFA\xFB\ak\x2\x2\xFB\xFC\ap\x2\x2\xFC\xFD\av\x2\x2\xFD*\x3\x2"+
		"\x2\x2\xFE\xFF\a\x66\x2\x2\xFF\x100\ak\x2\x2\x100\x101\au\x2\x2\x101\x102"+
		"\at\x2\x2\x102\x103\ag\x2\x2\x103\x104\ai\x2\x2\x104\x105\a\x63\x2\x2"+
		"\x105\x106\at\x2\x2\x106\x107\a\x66\x2\x2\x107,\x3\x2\x2\x2\x108\x109"+
		"\a=\x2\x2\x109.\x3\x2\x2\x2\x10A\x10B\a?\x2\x2\x10B\x30\x3\x2\x2\x2\x10C"+
		"\x10D\a.\x2\x2\x10D\x32\x3\x2\x2\x2\x10E\x10F\a}\x2\x2\x10F\x34\x3\x2"+
		"\x2\x2\x110\x111\a\x7F\x2\x2\x111\x36\x3\x2\x2\x2\x112\x113\a]\x2\x2\x113"+
		"\x38\x3\x2\x2\x2\x114\x115\a_\x2\x2\x115:\x3\x2\x2\x2\x116\x117\a#\x2"+
		"\x2\x117<\x3\x2\x2\x2\x118\x119\a*\x2\x2\x119>\x3\x2\x2\x2\x11A\x11B\a"+
		"+\x2\x2\x11B@\x3\x2\x2\x2\x11C\x11D\a-\x2\x2\x11D\x42\x3\x2\x2\x2\x11E"+
		"\x11F\a/\x2\x2\x11F\x44\x3\x2\x2\x2\x120\x121\a,\x2\x2\x121\x46\x3\x2"+
		"\x2\x2\x122\x123\a\x31\x2\x2\x123H\x3\x2\x2\x2\x124\x125\a`\x2\x2\x125"+
		"J\x3\x2\x2\x2\x126\x127\a\x30\x2\x2\x127L\x3\x2\x2\x2\x128\x129\a-\x2"+
		"\x2\x129\x12A\a?\x2\x2\x12AN\x3\x2\x2\x2\x12B\x12C\a/\x2\x2\x12C\x12D"+
		"\a?\x2\x2\x12DP\x3\x2\x2\x2\x12E\x12F\a\x31\x2\x2\x12F\x130\a?\x2\x2\x130"+
		"R\x3\x2\x2\x2\x131\x132\a,\x2\x2\x132\x133\a?\x2\x2\x133T\x3\x2\x2\x2"+
		"\x134\x135\a-\x2\x2\x135\x136\a-\x2\x2\x136V\x3\x2\x2\x2\x137\x138\a/"+
		"\x2\x2\x138\x139\a/\x2\x2\x139X\x3\x2\x2\x2\x13A\x13B\a~\x2\x2\x13BZ\x3"+
		"\x2\x2\x2\x13C\x13D\a(\x2\x2\x13D\\\x3\x2\x2\x2\x13E\x13F\a#\x2\x2\x13F"+
		"\x140\a?\x2\x2\x140^\x3\x2\x2\x2\x141\x142\a?\x2\x2\x142\x143\a?\x2\x2"+
		"\x143`\x3\x2\x2\x2\x144\x145\a@\x2\x2\x145\x62\x3\x2\x2\x2\x146\x147\a"+
		">\x2\x2\x147\x64\x3\x2\x2\x2\x148\x149\a@\x2\x2\x149\x14A\a?\x2\x2\x14A"+
		"\x66\x3\x2\x2\x2\x14B\x14C\a>\x2\x2\x14C\x14D\a?\x2\x2\x14Dh\x3\x2\x2"+
		"\x2\x14E\x152\t\x6\x2\x2\x14F\x151\t\a\x2\x2\x150\x14F\x3\x2\x2\x2\x151"+
		"\x154\x3\x2\x2\x2\x152\x150\x3\x2\x2\x2\x152\x153\x3\x2\x2\x2\x153j\x3"+
		"\x2\x2\x2\x154\x152\x3\x2\x2\x2\x155\x157\t\b\x2\x2\x156\x155\x3\x2\x2"+
		"\x2\x157\x15A\x3\x2\x2\x2\x158\x156\x3\x2\x2\x2\x158\x159\x3\x2\x2\x2"+
		"\x159l\x3\x2\x2\x2\x15A\x158\x3\x2\x2\x2\x15B\x15C\a\x31\x2\x2\x15C\x15D"+
		"\a\x31\x2\x2\x15D\x161\x3\x2\x2\x2\x15E\x160\v\x2\x2\x2\x15F\x15E\x3\x2"+
		"\x2\x2\x160\x163\x3\x2\x2\x2\x161\x162\x3\x2\x2\x2\x161\x15F\x3\x2\x2"+
		"\x2\x162\x164\x3\x2\x2\x2\x163\x161\x3\x2\x2\x2\x164\x165\a\f\x2\x2\x165"+
		"\x166\x3\x2\x2\x2\x166\x167\b\x37\x2\x2\x167n\x3\x2\x2\x2\x168\x169\t"+
		"\t\x2\x2\x169\x16A\x3\x2\x2\x2\x16A\x16B\b\x38\x2\x2\x16Bp\x3\x2\x2\x2"+
		"\x16C\x16D\v\x2\x2\x2\x16Dr\x3\x2\x2\x2\x10\x2tz~\x81\x86\x8E\x99\x9F"+
		"\xA8\xAF\x152\x158\x161\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
