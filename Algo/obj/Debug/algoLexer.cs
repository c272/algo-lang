//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Z:\Algo\Algo\Parsing\algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, FOREACH_SYM=9, ADD_SYM=10, BREAK_SYM=11, AT_SYM=12, REMOVE_SYM=13, 
		FROM_SYM=14, WHILE_SYM=15, IN_SYM=16, IF_SYM=17, UP_SYM=18, TO_SYM=19, 
		AS_SYM=20, ENUM_SYM=21, LIB_SYM=22, SIG_FIG_SYM=23, OBJ_SYM=24, ELSE_SYM=25, 
		IMPORT_SYM=26, RETURN_SYM=27, PRINT_SYM=28, DISREGARD_SYM=29, EXTERNAL_SYM=30, 
		ENDLINE=31, EQUALS=32, COMMA=33, LBRACE=34, RBRACE=35, LSQBR=36, RSQBR=37, 
		INVERT_SYM=38, STREAMING_SYM=39, LBRACKET=40, RBRACKET=41, ADD_OP=42, 
		TAKE_OP=43, MUL_OP=44, DIV_OP=45, POW_OP=46, POINT=47, ADDFROM_OP=48, 
		TAKEFROM_OP=49, DIVFROM_OP=50, MULFROM_OP=51, ADD_PFOP=52, TAKE_PFOP=53, 
		BIN_OR=54, BIN_AND=55, BIN_NET=56, BIN_EQUALS=57, GRTR_THAN=58, LESS_THAN=59, 
		GRTR_THAN_ET=60, LESS_THAN_ET=61, IDENTIFIER=62, COMMENT=63, WS=64, UNKNOWN_SYMBOL=65;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "BREAK_SYM", "AT_SYM", "REMOVE_SYM", 
		"FROM_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", 
		"RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", 
		"EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"STREAMING_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'foreach'", 
		"'add'", "'break'", "'at'", "'remove'", "'from'", "'while'", "'in'", "'if'", 
		"'up'", "'to'", "'as'", "'enum'", "'library'", "'sf'", "'object'", "'else'", 
		"'import'", "'return'", "'print'", "'disregard'", "'external'", "';'", 
		"'='", "','", "'{'", "'}'", "'['", "']'", "'!'", "'<-'", "'('", "')'", 
		"'+'", "'-'", "'*'", "'/'", "'^'", "'.'", "'+='", "'-='", "'/='", "'*='", 
		"'++'", "'--'", "'|'", "'&'", "'!='", "'=='", "'>'", "'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "BREAK_SYM", "AT_SYM", "REMOVE_SYM", 
		"FROM_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", 
		"RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", 
		"EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"STREAMING_SYM", "LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", 
		"DIV_OP", "POW_OP", "POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", 
		"MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", 
		"BIN_EQUALS", "GRTR_THAN", "LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", 
		"IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x43\x1B1\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37"+
		"\t\x37\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4"+
		"?\t?\x4@\t@\x4\x41\t\x41\x4\x42\t\x42\x3\x2\x5\x2\x87\n\x2\x3\x2\x3\x2"+
		"\a\x2\x8B\n\x2\f\x2\xE\x2\x8E\v\x2\x3\x2\x5\x2\x91\n\x2\x3\x3\x5\x3\x94"+
		"\n\x3\x3\x3\a\x3\x97\n\x3\f\x3\xE\x3\x9A\v\x3\x3\x3\x3\x3\x3\x3\x6\x3"+
		"\x9F\n\x3\r\x3\xE\x3\xA0\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x5\x4\xAC\n\x4\x3\x5\x3\x5\x3\x5\x3\x5\a\x5\xB2\n\x5\f\x5\xE"+
		"\x5\xB5\v\x5\x3\x5\x3\x5\x3\x6\x3\x6\a\x6\xBB\n\x6\f\x6\xE\x6\xBE\v\x6"+
		"\x3\x6\x3\x6\a\x6\xC2\n\x6\f\x6\xE\x6\xC5\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3"+
		"\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3"+
		"\n\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3"+
		"\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF"+
		"\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3"+
		"\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3"+
		"\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3"+
		"\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3"+
		"\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3"+
		"\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3"+
		"\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3"+
		"\'\x3(\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3"+
		"/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x31\x3\x32\x3\x32\x3\x32\x3\x33\x3\x33"+
		"\x3\x33\x3\x34\x3\x34\x3\x34\x3\x35\x3\x35\x3\x35\x3\x36\x3\x36\x3\x36"+
		"\x3\x37\x3\x37\x3\x38\x3\x38\x3\x39\x3\x39\x3\x39\x3:\x3:\x3:\x3;\x3;"+
		"\x3<\x3<\x3=\x3=\x3=\x3>\x3>\x3>\x3?\x3?\a?\x19A\n?\f?\xE?\x19D\v?\x3"+
		"@\x3@\x3@\x3@\a@\x1A3\n@\f@\xE@\x1A6\v@\x3@\x3@\x3@\x3@\x3\x41\x3\x41"+
		"\x3\x41\x3\x41\x3\x42\x3\x42\x3\x1A4\x2\x2\x43\x3\x2\x3\x5\x2\x4\a\x2"+
		"\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r"+
		"\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2"+
		"\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C"+
		"\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2"+
		"%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x61"+
		"\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38o\x2\x39"+
		"q\x2:s\x2;u\x2<w\x2=y\x2>{\x2?}\x2@\x7F\x2\x41\x81\x2\x42\x83\x2\x43\x3"+
		"\x2\t\x3\x2\x33;\x3\x2\x32;\x3\x2$$\x3\x2\"\"\x5\x2\x43\\\x61\x61\x63"+
		"|\x6\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x1BD\x2\x3\x3\x2\x2"+
		"\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2"+
		"\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2"+
		"\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B"+
		"\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2"+
		"#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3"+
		"\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3"+
		"\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2"+
		";\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43"+
		"\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3"+
		"\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2"+
		"\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2"+
		"]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2"+
		"\x65\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3"+
		"\x2\x2\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x2u\x3\x2\x2"+
		"\x2\x2w\x3\x2\x2\x2\x2y\x3\x2\x2\x2\x2{\x3\x2\x2\x2\x2}\x3\x2\x2\x2\x2"+
		"\x7F\x3\x2\x2\x2\x2\x81\x3\x2\x2\x2\x2\x83\x3\x2\x2\x2\x3\x90\x3\x2\x2"+
		"\x2\x5\x93\x3\x2\x2\x2\a\xAB\x3\x2\x2\x2\t\xAD\x3\x2\x2\x2\v\xB8\x3\x2"+
		"\x2\x2\r\xC8\x3\x2\x2\x2\xF\xCD\x3\x2\x2\x2\x11\xD1\x3\x2\x2\x2\x13\xD5"+
		"\x3\x2\x2\x2\x15\xDD\x3\x2\x2\x2\x17\xE1\x3\x2\x2\x2\x19\xE7\x3\x2\x2"+
		"\x2\x1B\xEA\x3\x2\x2\x2\x1D\xF1\x3\x2\x2\x2\x1F\xF6\x3\x2\x2\x2!\xFC\x3"+
		"\x2\x2\x2#\xFF\x3\x2\x2\x2%\x102\x3\x2\x2\x2\'\x105\x3\x2\x2\x2)\x108"+
		"\x3\x2\x2\x2+\x10B\x3\x2\x2\x2-\x110\x3\x2\x2\x2/\x118\x3\x2\x2\x2\x31"+
		"\x11B\x3\x2\x2\x2\x33\x122\x3\x2\x2\x2\x35\x127\x3\x2\x2\x2\x37\x12E\x3"+
		"\x2\x2\x2\x39\x135\x3\x2\x2\x2;\x13B\x3\x2\x2\x2=\x145\x3\x2\x2\x2?\x14E"+
		"\x3\x2\x2\x2\x41\x150\x3\x2\x2\x2\x43\x152\x3\x2\x2\x2\x45\x154\x3\x2"+
		"\x2\x2G\x156\x3\x2\x2\x2I\x158\x3\x2\x2\x2K\x15A\x3\x2\x2\x2M\x15C\x3"+
		"\x2\x2\x2O\x15E\x3\x2\x2\x2Q\x161\x3\x2\x2\x2S\x163\x3\x2\x2\x2U\x165"+
		"\x3\x2\x2\x2W\x167\x3\x2\x2\x2Y\x169\x3\x2\x2\x2[\x16B\x3\x2\x2\x2]\x16D"+
		"\x3\x2\x2\x2_\x16F\x3\x2\x2\x2\x61\x171\x3\x2\x2\x2\x63\x174\x3\x2\x2"+
		"\x2\x65\x177\x3\x2\x2\x2g\x17A\x3\x2\x2\x2i\x17D\x3\x2\x2\x2k\x180\x3"+
		"\x2\x2\x2m\x183\x3\x2\x2\x2o\x185\x3\x2\x2\x2q\x187\x3\x2\x2\x2s\x18A"+
		"\x3\x2\x2\x2u\x18D\x3\x2\x2\x2w\x18F\x3\x2\x2\x2y\x191\x3\x2\x2\x2{\x194"+
		"\x3\x2\x2\x2}\x197\x3\x2\x2\x2\x7F\x19E\x3\x2\x2\x2\x81\x1AB\x3\x2\x2"+
		"\x2\x83\x1AF\x3\x2\x2\x2\x85\x87\a/\x2\x2\x86\x85\x3\x2\x2\x2\x86\x87"+
		"\x3\x2\x2\x2\x87\x88\x3\x2\x2\x2\x88\x8C\t\x2\x2\x2\x89\x8B\t\x3\x2\x2"+
		"\x8A\x89\x3\x2\x2\x2\x8B\x8E\x3\x2\x2\x2\x8C\x8A\x3\x2\x2\x2\x8C\x8D\x3"+
		"\x2\x2\x2\x8D\x91\x3\x2\x2\x2\x8E\x8C\x3\x2\x2\x2\x8F\x91\a\x32\x2\x2"+
		"\x90\x86\x3\x2\x2\x2\x90\x8F\x3\x2\x2\x2\x91\x4\x3\x2\x2\x2\x92\x94\a"+
		"/\x2\x2\x93\x92\x3\x2\x2\x2\x93\x94\x3\x2\x2\x2\x94\x98\x3\x2\x2\x2\x95"+
		"\x97\t\x2\x2\x2\x96\x95\x3\x2\x2\x2\x97\x9A\x3\x2\x2\x2\x98\x96\x3\x2"+
		"\x2\x2\x98\x99\x3\x2\x2\x2\x99\x9B\x3\x2\x2\x2\x9A\x98\x3\x2\x2\x2\x9B"+
		"\x9C\t\x3\x2\x2\x9C\x9E\a\x30\x2\x2\x9D\x9F\t\x3\x2\x2\x9E\x9D\x3\x2\x2"+
		"\x2\x9F\xA0\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2\xA0\xA1\x3\x2\x2\x2\xA1\x6"+
		"\x3\x2\x2\x2\xA2\xA3\av\x2\x2\xA3\xA4\at\x2\x2\xA4\xA5\aw\x2\x2\xA5\xAC"+
		"\ag\x2\x2\xA6\xA7\ah\x2\x2\xA7\xA8\a\x63\x2\x2\xA8\xA9\an\x2\x2\xA9\xAA"+
		"\au\x2\x2\xAA\xAC\ag\x2\x2\xAB\xA2\x3\x2\x2\x2\xAB\xA6\x3\x2\x2\x2\xAC"+
		"\b\x3\x2\x2\x2\xAD\xB3\a$\x2\x2\xAE\xB2\n\x4\x2\x2\xAF\xB0\a^\x2\x2\xB0"+
		"\xB2\a$\x2\x2\xB1\xAE\x3\x2\x2\x2\xB1\xAF\x3\x2\x2\x2\xB2\xB5\x3\x2\x2"+
		"\x2\xB3\xB1\x3\x2\x2\x2\xB3\xB4\x3\x2\x2\x2\xB4\xB6\x3\x2\x2\x2\xB5\xB3"+
		"\x3\x2\x2\x2\xB6\xB7\a$\x2\x2\xB7\n\x3\x2\x2\x2\xB8\xBC\x5\x3\x2\x2\xB9"+
		"\xBB\t\x5\x2\x2\xBA\xB9\x3\x2\x2\x2\xBB\xBE\x3\x2\x2\x2\xBC\xBA\x3\x2"+
		"\x2\x2\xBC\xBD\x3\x2\x2\x2\xBD\xBF\x3\x2\x2\x2\xBE\xBC\x3\x2\x2\x2\xBF"+
		"\xC3\x5[.\x2\xC0\xC2\t\x5\x2\x2\xC1\xC0\x3\x2\x2\x2\xC2\xC5\x3\x2\x2\x2"+
		"\xC3\xC1\x3\x2\x2\x2\xC3\xC4\x3\x2\x2\x2\xC4\xC6\x3\x2\x2\x2\xC5\xC3\x3"+
		"\x2\x2\x2\xC6\xC7\x5\x3\x2\x2\xC7\f\x3\x2\x2\x2\xC8\xC9\ap\x2\x2\xC9\xCA"+
		"\aw\x2\x2\xCA\xCB\an\x2\x2\xCB\xCC\an\x2\x2\xCC\xE\x3\x2\x2\x2\xCD\xCE"+
		"\an\x2\x2\xCE\xCF\ag\x2\x2\xCF\xD0\av\x2\x2\xD0\x10\x3\x2\x2\x2\xD1\xD2"+
		"\ah\x2\x2\xD2\xD3\aq\x2\x2\xD3\xD4\at\x2\x2\xD4\x12\x3\x2\x2\x2\xD5\xD6"+
		"\ah\x2\x2\xD6\xD7\aq\x2\x2\xD7\xD8\at\x2\x2\xD8\xD9\ag\x2\x2\xD9\xDA\a"+
		"\x63\x2\x2\xDA\xDB\a\x65\x2\x2\xDB\xDC\aj\x2\x2\xDC\x14\x3\x2\x2\x2\xDD"+
		"\xDE\a\x63\x2\x2\xDE\xDF\a\x66\x2\x2\xDF\xE0\a\x66\x2\x2\xE0\x16\x3\x2"+
		"\x2\x2\xE1\xE2\a\x64\x2\x2\xE2\xE3\at\x2\x2\xE3\xE4\ag\x2\x2\xE4\xE5\a"+
		"\x63\x2\x2\xE5\xE6\am\x2\x2\xE6\x18\x3\x2\x2\x2\xE7\xE8\a\x63\x2\x2\xE8"+
		"\xE9\av\x2\x2\xE9\x1A\x3\x2\x2\x2\xEA\xEB\at\x2\x2\xEB\xEC\ag\x2\x2\xEC"+
		"\xED\ao\x2\x2\xED\xEE\aq\x2\x2\xEE\xEF\ax\x2\x2\xEF\xF0\ag\x2\x2\xF0\x1C"+
		"\x3\x2\x2\x2\xF1\xF2\ah\x2\x2\xF2\xF3\at\x2\x2\xF3\xF4\aq\x2\x2\xF4\xF5"+
		"\ao\x2\x2\xF5\x1E\x3\x2\x2\x2\xF6\xF7\ay\x2\x2\xF7\xF8\aj\x2\x2\xF8\xF9"+
		"\ak\x2\x2\xF9\xFA\an\x2\x2\xFA\xFB\ag\x2\x2\xFB \x3\x2\x2\x2\xFC\xFD\a"+
		"k\x2\x2\xFD\xFE\ap\x2\x2\xFE\"\x3\x2\x2\x2\xFF\x100\ak\x2\x2\x100\x101"+
		"\ah\x2\x2\x101$\x3\x2\x2\x2\x102\x103\aw\x2\x2\x103\x104\ar\x2\x2\x104"+
		"&\x3\x2\x2\x2\x105\x106\av\x2\x2\x106\x107\aq\x2\x2\x107(\x3\x2\x2\x2"+
		"\x108\x109\a\x63\x2\x2\x109\x10A\au\x2\x2\x10A*\x3\x2\x2\x2\x10B\x10C"+
		"\ag\x2\x2\x10C\x10D\ap\x2\x2\x10D\x10E\aw\x2\x2\x10E\x10F\ao\x2\x2\x10F"+
		",\x3\x2\x2\x2\x110\x111\an\x2\x2\x111\x112\ak\x2\x2\x112\x113\a\x64\x2"+
		"\x2\x113\x114\at\x2\x2\x114\x115\a\x63\x2\x2\x115\x116\at\x2\x2\x116\x117"+
		"\a{\x2\x2\x117.\x3\x2\x2\x2\x118\x119\au\x2\x2\x119\x11A\ah\x2\x2\x11A"+
		"\x30\x3\x2\x2\x2\x11B\x11C\aq\x2\x2\x11C\x11D\a\x64\x2\x2\x11D\x11E\a"+
		"l\x2\x2\x11E\x11F\ag\x2\x2\x11F\x120\a\x65\x2\x2\x120\x121\av\x2\x2\x121"+
		"\x32\x3\x2\x2\x2\x122\x123\ag\x2\x2\x123\x124\an\x2\x2\x124\x125\au\x2"+
		"\x2\x125\x126\ag\x2\x2\x126\x34\x3\x2\x2\x2\x127\x128\ak\x2\x2\x128\x129"+
		"\ao\x2\x2\x129\x12A\ar\x2\x2\x12A\x12B\aq\x2\x2\x12B\x12C\at\x2\x2\x12C"+
		"\x12D\av\x2\x2\x12D\x36\x3\x2\x2\x2\x12E\x12F\at\x2\x2\x12F\x130\ag\x2"+
		"\x2\x130\x131\av\x2\x2\x131\x132\aw\x2\x2\x132\x133\at\x2\x2\x133\x134"+
		"\ap\x2\x2\x134\x38\x3\x2\x2\x2\x135\x136\ar\x2\x2\x136\x137\at\x2\x2\x137"+
		"\x138\ak\x2\x2\x138\x139\ap\x2\x2\x139\x13A\av\x2\x2\x13A:\x3\x2\x2\x2"+
		"\x13B\x13C\a\x66\x2\x2\x13C\x13D\ak\x2\x2\x13D\x13E\au\x2\x2\x13E\x13F"+
		"\at\x2\x2\x13F\x140\ag\x2\x2\x140\x141\ai\x2\x2\x141\x142\a\x63\x2\x2"+
		"\x142\x143\at\x2\x2\x143\x144\a\x66\x2\x2\x144<\x3\x2\x2\x2\x145\x146"+
		"\ag\x2\x2\x146\x147\az\x2\x2\x147\x148\av\x2\x2\x148\x149\ag\x2\x2\x149"+
		"\x14A\at\x2\x2\x14A\x14B\ap\x2\x2\x14B\x14C\a\x63\x2\x2\x14C\x14D\an\x2"+
		"\x2\x14D>\x3\x2\x2\x2\x14E\x14F\a=\x2\x2\x14F@\x3\x2\x2\x2\x150\x151\a"+
		"?\x2\x2\x151\x42\x3\x2\x2\x2\x152\x153\a.\x2\x2\x153\x44\x3\x2\x2\x2\x154"+
		"\x155\a}\x2\x2\x155\x46\x3\x2\x2\x2\x156\x157\a\x7F\x2\x2\x157H\x3\x2"+
		"\x2\x2\x158\x159\a]\x2\x2\x159J\x3\x2\x2\x2\x15A\x15B\a_\x2\x2\x15BL\x3"+
		"\x2\x2\x2\x15C\x15D\a#\x2\x2\x15DN\x3\x2\x2\x2\x15E\x15F\a>\x2\x2\x15F"+
		"\x160\a/\x2\x2\x160P\x3\x2\x2\x2\x161\x162\a*\x2\x2\x162R\x3\x2\x2\x2"+
		"\x163\x164\a+\x2\x2\x164T\x3\x2\x2\x2\x165\x166\a-\x2\x2\x166V\x3\x2\x2"+
		"\x2\x167\x168\a/\x2\x2\x168X\x3\x2\x2\x2\x169\x16A\a,\x2\x2\x16AZ\x3\x2"+
		"\x2\x2\x16B\x16C\a\x31\x2\x2\x16C\\\x3\x2\x2\x2\x16D\x16E\a`\x2\x2\x16E"+
		"^\x3\x2\x2\x2\x16F\x170\a\x30\x2\x2\x170`\x3\x2\x2\x2\x171\x172\a-\x2"+
		"\x2\x172\x173\a?\x2\x2\x173\x62\x3\x2\x2\x2\x174\x175\a/\x2\x2\x175\x176"+
		"\a?\x2\x2\x176\x64\x3\x2\x2\x2\x177\x178\a\x31\x2\x2\x178\x179\a?\x2\x2"+
		"\x179\x66\x3\x2\x2\x2\x17A\x17B\a,\x2\x2\x17B\x17C\a?\x2\x2\x17Ch\x3\x2"+
		"\x2\x2\x17D\x17E\a-\x2\x2\x17E\x17F\a-\x2\x2\x17Fj\x3\x2\x2\x2\x180\x181"+
		"\a/\x2\x2\x181\x182\a/\x2\x2\x182l\x3\x2\x2\x2\x183\x184\a~\x2\x2\x184"+
		"n\x3\x2\x2\x2\x185\x186\a(\x2\x2\x186p\x3\x2\x2\x2\x187\x188\a#\x2\x2"+
		"\x188\x189\a?\x2\x2\x189r\x3\x2\x2\x2\x18A\x18B\a?\x2\x2\x18B\x18C\a?"+
		"\x2\x2\x18Ct\x3\x2\x2\x2\x18D\x18E\a@\x2\x2\x18Ev\x3\x2\x2\x2\x18F\x190"+
		"\a>\x2\x2\x190x\x3\x2\x2\x2\x191\x192\a@\x2\x2\x192\x193\a?\x2\x2\x193"+
		"z\x3\x2\x2\x2\x194\x195\a>\x2\x2\x195\x196\a?\x2\x2\x196|\x3\x2\x2\x2"+
		"\x197\x19B\t\x6\x2\x2\x198\x19A\t\a\x2\x2\x199\x198\x3\x2\x2\x2\x19A\x19D"+
		"\x3\x2\x2\x2\x19B\x199\x3\x2\x2\x2\x19B\x19C\x3\x2\x2\x2\x19C~\x3\x2\x2"+
		"\x2\x19D\x19B\x3\x2\x2\x2\x19E\x19F\a\x31\x2\x2\x19F\x1A0\a\x31\x2\x2"+
		"\x1A0\x1A4\x3\x2\x2\x2\x1A1\x1A3\v\x2\x2\x2\x1A2\x1A1\x3\x2\x2\x2\x1A3"+
		"\x1A6\x3\x2\x2\x2\x1A4\x1A5\x3\x2\x2\x2\x1A4\x1A2\x3\x2\x2\x2\x1A5\x1A7"+
		"\x3\x2\x2\x2\x1A6\x1A4\x3\x2\x2\x2\x1A7\x1A8\a\f\x2\x2\x1A8\x1A9\x3\x2"+
		"\x2\x2\x1A9\x1AA\b@\x2\x2\x1AA\x80\x3\x2\x2\x2\x1AB\x1AC\t\b\x2\x2\x1AC"+
		"\x1AD\x3\x2\x2\x2\x1AD\x1AE\b\x41\x2\x2\x1AE\x82\x3\x2\x2\x2\x1AF\x1B0"+
		"\v\x2\x2\x2\x1B0\x84\x3\x2\x2\x2\x10\x2\x86\x8C\x90\x93\x98\xA0\xAB\xB1"+
		"\xB3\xBC\xC3\x19B\x1A4\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
