//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/c272/Repos/algo-lang/Algo/Parsing/algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, FOREACH_SYM=9, ADD_SYM=10, AT_SYM=11, REMOVE_SYM=12, FROM_SYM=13, 
		WHILE_SYM=14, IN_SYM=15, IF_SYM=16, UP_SYM=17, TO_SYM=18, AS_SYM=19, ENUM_SYM=20, 
		LIB_SYM=21, SIG_FIG_SYM=22, OBJ_SYM=23, ELSE_SYM=24, IMPORT_SYM=25, RETURN_SYM=26, 
		PRINT_SYM=27, DISREGARD_SYM=28, EXTERNAL_SYM=29, ENDLINE=30, EQUALS=31, 
		COMMA=32, LBRACE=33, RBRACE=34, LSQBR=35, RSQBR=36, INVERT_SYM=37, STREAMING_SYM=38, 
		LBRACKET=39, RBRACKET=40, ADD_OP=41, TAKE_OP=42, MUL_OP=43, DIV_OP=44, 
		POW_OP=45, POINT=46, ADDFROM_OP=47, TAKEFROM_OP=48, DIVFROM_OP=49, MULFROM_OP=50, 
		ADD_PFOP=51, TAKE_PFOP=52, BIN_OR=53, BIN_AND=54, BIN_NET=55, BIN_EQUALS=56, 
		GRTR_THAN=57, LESS_THAN=58, GRTR_THAN_ET=59, LESS_THAN_ET=60, IDENTIFIER=61, 
		COMMENT=62, WS=63, UNKNOWN_SYMBOL=64;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "AT_SYM", "REMOVE_SYM", "FROM_SYM", 
		"WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", "ENUM_SYM", 
		"LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", 
		"PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", "EQUALS", "COMMA", 
		"LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", 
		"RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'foreach'", 
		"'add'", "'at'", "'remove'", "'from'", "'while'", "'in'", "'if'", "'up'", 
		"'to'", "'as'", "'enum'", "'library'", "'sf'", "'object'", "'else'", "'import'", 
		"'return'", "'print'", "'disregard'", "'external'", "';'", "'='", "','", 
		"'{'", "'}'", "'['", "']'", "'!'", "'<-'", "'('", "')'", "'+'", "'-'", 
		"'*'", "'/'", "'^'", "'.'", "'+='", "'-='", "'/='", "'*='", "'++'", "'--'", 
		"'|'", "'&'", "'!='", "'=='", "'>'", "'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "AT_SYM", "REMOVE_SYM", "FROM_SYM", 
		"WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", "ENUM_SYM", 
		"LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", 
		"PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", "EQUALS", "COMMA", 
		"LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", 
		"RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x42\x1A9\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37"+
		"\t\x37\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4"+
		"?\t?\x4@\t@\x4\x41\t\x41\x3\x2\x5\x2\x85\n\x2\x3\x2\x3\x2\a\x2\x89\n\x2"+
		"\f\x2\xE\x2\x8C\v\x2\x3\x2\x5\x2\x8F\n\x2\x3\x3\x5\x3\x92\n\x3\x3\x3\a"+
		"\x3\x95\n\x3\f\x3\xE\x3\x98\v\x3\x3\x3\x3\x3\x3\x3\x6\x3\x9D\n\x3\r\x3"+
		"\xE\x3\x9E\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4"+
		"\xAA\n\x4\x3\x5\x3\x5\x3\x5\x3\x5\a\x5\xB0\n\x5\f\x5\xE\x5\xB3\v\x5\x3"+
		"\x5\x3\x5\x3\x6\x3\x6\a\x6\xB9\n\x6\f\x6\xE\x6\xBC\v\x6\x3\x6\x3\x6\a"+
		"\x6\xC0\n\x6\f\x6\xE\x6\xC3\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a"+
		"\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n"+
		"\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r"+
		"\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12"+
		"\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17"+
		"\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19"+
		"\x3\x19\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A"+
		"\x3\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E"+
		"\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#"+
		"\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3"+
		"+\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3\x30\x3\x31\x3\x31\x3"+
		"\x31\x3\x32\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33\x3\x34\x3\x34\x3\x34\x3"+
		"\x35\x3\x35\x3\x35\x3\x36\x3\x36\x3\x37\x3\x37\x3\x38\x3\x38\x3\x38\x3"+
		"\x39\x3\x39\x3\x39\x3:\x3:\x3;\x3;\x3<\x3<\x3<\x3=\x3=\x3=\x3>\x3>\a>"+
		"\x192\n>\f>\xE>\x195\v>\x3?\x3?\x3?\x3?\a?\x19B\n?\f?\xE?\x19E\v?\x3?"+
		"\x3?\x3?\x3?\x3@\x3@\x3@\x3@\x3\x41\x3\x41\x3\x19C\x2\x2\x42\x3\x2\x3"+
		"\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45"+
		"\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_"+
		"\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38"+
		"o\x2\x39q\x2:s\x2;u\x2<w\x2=y\x2>{\x2?}\x2@\x7F\x2\x41\x81\x2\x42\x3\x2"+
		"\t\x3\x2\x33;\x3\x2\x32;\x3\x2$$\x3\x2\"\"\x5\x2\x43\\\x61\x61\x63|\x6"+
		"\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x1B5\x2\x3\x3\x2\x2\x2"+
		"\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2"+
		"\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2"+
		"\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3"+
		"\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3"+
		"\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2"+
		"\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2"+
		"\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2"+
		"\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2"+
		"\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2"+
		"\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2"+
		"U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2"+
		"\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3"+
		"\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2"+
		"\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x2u\x3\x2\x2\x2\x2"+
		"w\x3\x2\x2\x2\x2y\x3\x2\x2\x2\x2{\x3\x2\x2\x2\x2}\x3\x2\x2\x2\x2\x7F\x3"+
		"\x2\x2\x2\x2\x81\x3\x2\x2\x2\x3\x8E\x3\x2\x2\x2\x5\x91\x3\x2\x2\x2\a\xA9"+
		"\x3\x2\x2\x2\t\xAB\x3\x2\x2\x2\v\xB6\x3\x2\x2\x2\r\xC6\x3\x2\x2\x2\xF"+
		"\xCB\x3\x2\x2\x2\x11\xCF\x3\x2\x2\x2\x13\xD3\x3\x2\x2\x2\x15\xDB\x3\x2"+
		"\x2\x2\x17\xDF\x3\x2\x2\x2\x19\xE2\x3\x2\x2\x2\x1B\xE9\x3\x2\x2\x2\x1D"+
		"\xEE\x3\x2\x2\x2\x1F\xF4\x3\x2\x2\x2!\xF7\x3\x2\x2\x2#\xFA\x3\x2\x2\x2"+
		"%\xFD\x3\x2\x2\x2\'\x100\x3\x2\x2\x2)\x103\x3\x2\x2\x2+\x108\x3\x2\x2"+
		"\x2-\x110\x3\x2\x2\x2/\x113\x3\x2\x2\x2\x31\x11A\x3\x2\x2\x2\x33\x11F"+
		"\x3\x2\x2\x2\x35\x126\x3\x2\x2\x2\x37\x12D\x3\x2\x2\x2\x39\x133\x3\x2"+
		"\x2\x2;\x13D\x3\x2\x2\x2=\x146\x3\x2\x2\x2?\x148\x3\x2\x2\x2\x41\x14A"+
		"\x3\x2\x2\x2\x43\x14C\x3\x2\x2\x2\x45\x14E\x3\x2\x2\x2G\x150\x3\x2\x2"+
		"\x2I\x152\x3\x2\x2\x2K\x154\x3\x2\x2\x2M\x156\x3\x2\x2\x2O\x159\x3\x2"+
		"\x2\x2Q\x15B\x3\x2\x2\x2S\x15D\x3\x2\x2\x2U\x15F\x3\x2\x2\x2W\x161\x3"+
		"\x2\x2\x2Y\x163\x3\x2\x2\x2[\x165\x3\x2\x2\x2]\x167\x3\x2\x2\x2_\x169"+
		"\x3\x2\x2\x2\x61\x16C\x3\x2\x2\x2\x63\x16F\x3\x2\x2\x2\x65\x172\x3\x2"+
		"\x2\x2g\x175\x3\x2\x2\x2i\x178\x3\x2\x2\x2k\x17B\x3\x2\x2\x2m\x17D\x3"+
		"\x2\x2\x2o\x17F\x3\x2\x2\x2q\x182\x3\x2\x2\x2s\x185\x3\x2\x2\x2u\x187"+
		"\x3\x2\x2\x2w\x189\x3\x2\x2\x2y\x18C\x3\x2\x2\x2{\x18F\x3\x2\x2\x2}\x196"+
		"\x3\x2\x2\x2\x7F\x1A3\x3\x2\x2\x2\x81\x1A7\x3\x2\x2\x2\x83\x85\a/\x2\x2"+
		"\x84\x83\x3\x2\x2\x2\x84\x85\x3\x2\x2\x2\x85\x86\x3\x2\x2\x2\x86\x8A\t"+
		"\x2\x2\x2\x87\x89\t\x3\x2\x2\x88\x87\x3\x2\x2\x2\x89\x8C\x3\x2\x2\x2\x8A"+
		"\x88\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x8F\x3\x2\x2\x2\x8C\x8A\x3\x2"+
		"\x2\x2\x8D\x8F\a\x32\x2\x2\x8E\x84\x3\x2\x2\x2\x8E\x8D\x3\x2\x2\x2\x8F"+
		"\x4\x3\x2\x2\x2\x90\x92\a/\x2\x2\x91\x90\x3\x2\x2\x2\x91\x92\x3\x2\x2"+
		"\x2\x92\x96\x3\x2\x2\x2\x93\x95\t\x2\x2\x2\x94\x93\x3\x2\x2\x2\x95\x98"+
		"\x3\x2\x2\x2\x96\x94\x3\x2\x2\x2\x96\x97\x3\x2\x2\x2\x97\x99\x3\x2\x2"+
		"\x2\x98\x96\x3\x2\x2\x2\x99\x9A\t\x3\x2\x2\x9A\x9C\a\x30\x2\x2\x9B\x9D"+
		"\t\x3\x2\x2\x9C\x9B\x3\x2\x2\x2\x9D\x9E\x3\x2\x2\x2\x9E\x9C\x3\x2\x2\x2"+
		"\x9E\x9F\x3\x2\x2\x2\x9F\x6\x3\x2\x2\x2\xA0\xA1\av\x2\x2\xA1\xA2\at\x2"+
		"\x2\xA2\xA3\aw\x2\x2\xA3\xAA\ag\x2\x2\xA4\xA5\ah\x2\x2\xA5\xA6\a\x63\x2"+
		"\x2\xA6\xA7\an\x2\x2\xA7\xA8\au\x2\x2\xA8\xAA\ag\x2\x2\xA9\xA0\x3\x2\x2"+
		"\x2\xA9\xA4\x3\x2\x2\x2\xAA\b\x3\x2\x2\x2\xAB\xB1\a$\x2\x2\xAC\xB0\n\x4"+
		"\x2\x2\xAD\xAE\a^\x2\x2\xAE\xB0\a$\x2\x2\xAF\xAC\x3\x2\x2\x2\xAF\xAD\x3"+
		"\x2\x2\x2\xB0\xB3\x3\x2\x2\x2\xB1\xAF\x3\x2\x2\x2\xB1\xB2\x3\x2\x2\x2"+
		"\xB2\xB4\x3\x2\x2\x2\xB3\xB1\x3\x2\x2\x2\xB4\xB5\a$\x2\x2\xB5\n\x3\x2"+
		"\x2\x2\xB6\xBA\x5\x3\x2\x2\xB7\xB9\t\x5\x2\x2\xB8\xB7\x3\x2\x2\x2\xB9"+
		"\xBC\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBA\xBB\x3\x2\x2\x2\xBB\xBD\x3\x2"+
		"\x2\x2\xBC\xBA\x3\x2\x2\x2\xBD\xC1\x5Y-\x2\xBE\xC0\t\x5\x2\x2\xBF\xBE"+
		"\x3\x2\x2\x2\xC0\xC3\x3\x2\x2\x2\xC1\xBF\x3\x2\x2\x2\xC1\xC2\x3\x2\x2"+
		"\x2\xC2\xC4\x3\x2\x2\x2\xC3\xC1\x3\x2\x2\x2\xC4\xC5\x5\x3\x2\x2\xC5\f"+
		"\x3\x2\x2\x2\xC6\xC7\ap\x2\x2\xC7\xC8\aw\x2\x2\xC8\xC9\an\x2\x2\xC9\xCA"+
		"\an\x2\x2\xCA\xE\x3\x2\x2\x2\xCB\xCC\an\x2\x2\xCC\xCD\ag\x2\x2\xCD\xCE"+
		"\av\x2\x2\xCE\x10\x3\x2\x2\x2\xCF\xD0\ah\x2\x2\xD0\xD1\aq\x2\x2\xD1\xD2"+
		"\at\x2\x2\xD2\x12\x3\x2\x2\x2\xD3\xD4\ah\x2\x2\xD4\xD5\aq\x2\x2\xD5\xD6"+
		"\at\x2\x2\xD6\xD7\ag\x2\x2\xD7\xD8\a\x63\x2\x2\xD8\xD9\a\x65\x2\x2\xD9"+
		"\xDA\aj\x2\x2\xDA\x14\x3\x2\x2\x2\xDB\xDC\a\x63\x2\x2\xDC\xDD\a\x66\x2"+
		"\x2\xDD\xDE\a\x66\x2\x2\xDE\x16\x3\x2\x2\x2\xDF\xE0\a\x63\x2\x2\xE0\xE1"+
		"\av\x2\x2\xE1\x18\x3\x2\x2\x2\xE2\xE3\at\x2\x2\xE3\xE4\ag\x2\x2\xE4\xE5"+
		"\ao\x2\x2\xE5\xE6\aq\x2\x2\xE6\xE7\ax\x2\x2\xE7\xE8\ag\x2\x2\xE8\x1A\x3"+
		"\x2\x2\x2\xE9\xEA\ah\x2\x2\xEA\xEB\at\x2\x2\xEB\xEC\aq\x2\x2\xEC\xED\a"+
		"o\x2\x2\xED\x1C\x3\x2\x2\x2\xEE\xEF\ay\x2\x2\xEF\xF0\aj\x2\x2\xF0\xF1"+
		"\ak\x2\x2\xF1\xF2\an\x2\x2\xF2\xF3\ag\x2\x2\xF3\x1E\x3\x2\x2\x2\xF4\xF5"+
		"\ak\x2\x2\xF5\xF6\ap\x2\x2\xF6 \x3\x2\x2\x2\xF7\xF8\ak\x2\x2\xF8\xF9\a"+
		"h\x2\x2\xF9\"\x3\x2\x2\x2\xFA\xFB\aw\x2\x2\xFB\xFC\ar\x2\x2\xFC$\x3\x2"+
		"\x2\x2\xFD\xFE\av\x2\x2\xFE\xFF\aq\x2\x2\xFF&\x3\x2\x2\x2\x100\x101\a"+
		"\x63\x2\x2\x101\x102\au\x2\x2\x102(\x3\x2\x2\x2\x103\x104\ag\x2\x2\x104"+
		"\x105\ap\x2\x2\x105\x106\aw\x2\x2\x106\x107\ao\x2\x2\x107*\x3\x2\x2\x2"+
		"\x108\x109\an\x2\x2\x109\x10A\ak\x2\x2\x10A\x10B\a\x64\x2\x2\x10B\x10C"+
		"\at\x2\x2\x10C\x10D\a\x63\x2\x2\x10D\x10E\at\x2\x2\x10E\x10F\a{\x2\x2"+
		"\x10F,\x3\x2\x2\x2\x110\x111\au\x2\x2\x111\x112\ah\x2\x2\x112.\x3\x2\x2"+
		"\x2\x113\x114\aq\x2\x2\x114\x115\a\x64\x2\x2\x115\x116\al\x2\x2\x116\x117"+
		"\ag\x2\x2\x117\x118\a\x65\x2\x2\x118\x119\av\x2\x2\x119\x30\x3\x2\x2\x2"+
		"\x11A\x11B\ag\x2\x2\x11B\x11C\an\x2\x2\x11C\x11D\au\x2\x2\x11D\x11E\a"+
		"g\x2\x2\x11E\x32\x3\x2\x2\x2\x11F\x120\ak\x2\x2\x120\x121\ao\x2\x2\x121"+
		"\x122\ar\x2\x2\x122\x123\aq\x2\x2\x123\x124\at\x2\x2\x124\x125\av\x2\x2"+
		"\x125\x34\x3\x2\x2\x2\x126\x127\at\x2\x2\x127\x128\ag\x2\x2\x128\x129"+
		"\av\x2\x2\x129\x12A\aw\x2\x2\x12A\x12B\at\x2\x2\x12B\x12C\ap\x2\x2\x12C"+
		"\x36\x3\x2\x2\x2\x12D\x12E\ar\x2\x2\x12E\x12F\at\x2\x2\x12F\x130\ak\x2"+
		"\x2\x130\x131\ap\x2\x2\x131\x132\av\x2\x2\x132\x38\x3\x2\x2\x2\x133\x134"+
		"\a\x66\x2\x2\x134\x135\ak\x2\x2\x135\x136\au\x2\x2\x136\x137\at\x2\x2"+
		"\x137\x138\ag\x2\x2\x138\x139\ai\x2\x2\x139\x13A\a\x63\x2\x2\x13A\x13B"+
		"\at\x2\x2\x13B\x13C\a\x66\x2\x2\x13C:\x3\x2\x2\x2\x13D\x13E\ag\x2\x2\x13E"+
		"\x13F\az\x2\x2\x13F\x140\av\x2\x2\x140\x141\ag\x2\x2\x141\x142\at\x2\x2"+
		"\x142\x143\ap\x2\x2\x143\x144\a\x63\x2\x2\x144\x145\an\x2\x2\x145<\x3"+
		"\x2\x2\x2\x146\x147\a=\x2\x2\x147>\x3\x2\x2\x2\x148\x149\a?\x2\x2\x149"+
		"@\x3\x2\x2\x2\x14A\x14B\a.\x2\x2\x14B\x42\x3\x2\x2\x2\x14C\x14D\a}\x2"+
		"\x2\x14D\x44\x3\x2\x2\x2\x14E\x14F\a\x7F\x2\x2\x14F\x46\x3\x2\x2\x2\x150"+
		"\x151\a]\x2\x2\x151H\x3\x2\x2\x2\x152\x153\a_\x2\x2\x153J\x3\x2\x2\x2"+
		"\x154\x155\a#\x2\x2\x155L\x3\x2\x2\x2\x156\x157\a>\x2\x2\x157\x158\a/"+
		"\x2\x2\x158N\x3\x2\x2\x2\x159\x15A\a*\x2\x2\x15AP\x3\x2\x2\x2\x15B\x15C"+
		"\a+\x2\x2\x15CR\x3\x2\x2\x2\x15D\x15E\a-\x2\x2\x15ET\x3\x2\x2\x2\x15F"+
		"\x160\a/\x2\x2\x160V\x3\x2\x2\x2\x161\x162\a,\x2\x2\x162X\x3\x2\x2\x2"+
		"\x163\x164\a\x31\x2\x2\x164Z\x3\x2\x2\x2\x165\x166\a`\x2\x2\x166\\\x3"+
		"\x2\x2\x2\x167\x168\a\x30\x2\x2\x168^\x3\x2\x2\x2\x169\x16A\a-\x2\x2\x16A"+
		"\x16B\a?\x2\x2\x16B`\x3\x2\x2\x2\x16C\x16D\a/\x2\x2\x16D\x16E\a?\x2\x2"+
		"\x16E\x62\x3\x2\x2\x2\x16F\x170\a\x31\x2\x2\x170\x171\a?\x2\x2\x171\x64"+
		"\x3\x2\x2\x2\x172\x173\a,\x2\x2\x173\x174\a?\x2\x2\x174\x66\x3\x2\x2\x2"+
		"\x175\x176\a-\x2\x2\x176\x177\a-\x2\x2\x177h\x3\x2\x2\x2\x178\x179\a/"+
		"\x2\x2\x179\x17A\a/\x2\x2\x17Aj\x3\x2\x2\x2\x17B\x17C\a~\x2\x2\x17Cl\x3"+
		"\x2\x2\x2\x17D\x17E\a(\x2\x2\x17En\x3\x2\x2\x2\x17F\x180\a#\x2\x2\x180"+
		"\x181\a?\x2\x2\x181p\x3\x2\x2\x2\x182\x183\a?\x2\x2\x183\x184\a?\x2\x2"+
		"\x184r\x3\x2\x2\x2\x185\x186\a@\x2\x2\x186t\x3\x2\x2\x2\x187\x188\a>\x2"+
		"\x2\x188v\x3\x2\x2\x2\x189\x18A\a@\x2\x2\x18A\x18B\a?\x2\x2\x18Bx\x3\x2"+
		"\x2\x2\x18C\x18D\a>\x2\x2\x18D\x18E\a?\x2\x2\x18Ez\x3\x2\x2\x2\x18F\x193"+
		"\t\x6\x2\x2\x190\x192\t\a\x2\x2\x191\x190\x3\x2\x2\x2\x192\x195\x3\x2"+
		"\x2\x2\x193\x191\x3\x2\x2\x2\x193\x194\x3\x2\x2\x2\x194|\x3\x2\x2\x2\x195"+
		"\x193\x3\x2\x2\x2\x196\x197\a\x31\x2\x2\x197\x198\a\x31\x2\x2\x198\x19C"+
		"\x3\x2\x2\x2\x199\x19B\v\x2\x2\x2\x19A\x199\x3\x2\x2\x2\x19B\x19E\x3\x2"+
		"\x2\x2\x19C\x19D\x3\x2\x2\x2\x19C\x19A\x3\x2\x2\x2\x19D\x19F\x3\x2\x2"+
		"\x2\x19E\x19C\x3\x2\x2\x2\x19F\x1A0\a\f\x2\x2\x1A0\x1A1\x3\x2\x2\x2\x1A1"+
		"\x1A2\b?\x2\x2\x1A2~\x3\x2\x2\x2\x1A3\x1A4\t\b\x2\x2\x1A4\x1A5\x3\x2\x2"+
		"\x2\x1A5\x1A6\b@\x2\x2\x1A6\x80\x3\x2\x2\x2\x1A7\x1A8\v\x2\x2\x2\x1A8"+
		"\x82\x3\x2\x2\x2\x10\x2\x84\x8A\x8E\x91\x96\x9E\xA9\xAF\xB1\xBA\xC1\x193"+
		"\x19C\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
