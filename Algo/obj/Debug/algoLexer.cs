//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/c272/Repos/algo-lang/Algo/Parsing/algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, WHILE_SYM=9, IN_SYM=10, IF_SYM=11, UP_SYM=12, TO_SYM=13, AS_SYM=14, 
		LIB_SYM=15, SIG_FIG_SYM=16, OBJ_SYM=17, ELSE_SYM=18, IMPORT_SYM=19, RETURN_SYM=20, 
		PRINT_SYM=21, DISREGARD_SYM=22, EXTERNAL_SYM=23, ENDLINE=24, EQUALS=25, 
		COMMA=26, LBRACE=27, RBRACE=28, LSQBR=29, RSQBR=30, INVERT_SYM=31, STREAMING_SYM=32, 
		LBRACKET=33, RBRACKET=34, ADD_OP=35, TAKE_OP=36, MUL_OP=37, DIV_OP=38, 
		POW_OP=39, POINT=40, ADDFROM_OP=41, TAKEFROM_OP=42, DIVFROM_OP=43, MULFROM_OP=44, 
		ADD_PFOP=45, TAKE_PFOP=46, BIN_OR=47, BIN_AND=48, BIN_NET=49, BIN_EQUALS=50, 
		GRTR_THAN=51, LESS_THAN=52, GRTR_THAN_ET=53, LESS_THAN_ET=54, IDENTIFIER=55, 
		COMMENT=56, WS=57, UNKNOWN_SYMBOL=58;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", 
		"PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", "EQUALS", "COMMA", 
		"LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", 
		"RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'while'", 
		"'in'", "'if'", "'up'", "'to'", "'as'", "'library'", "'sf'", "'object'", 
		"'else'", "'import'", "'return'", "'print'", "'disregard'", "'external'", 
		"';'", "'='", "','", "'{'", "'}'", "'['", "']'", "'!'", "'<-'", "'('", 
		"')'", "'+'", "'-'", "'*'", "'/'", "'^'", "'.'", "'+='", "'-='", "'/='", 
		"'*='", "'++'", "'--'", "'|'", "'&'", "'!='", "'=='", "'>'", "'<'", "'>='", 
		"'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", 
		"PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", "EQUALS", "COMMA", 
		"LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", 
		"RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2<\x17D\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x3\x2\x5\x2y\n\x2\x3\x2\x3\x2"+
		"\a\x2}\n\x2\f\x2\xE\x2\x80\v\x2\x3\x2\x5\x2\x83\n\x2\x3\x3\x5\x3\x86\n"+
		"\x3\x3\x3\a\x3\x89\n\x3\f\x3\xE\x3\x8C\v\x3\x3\x3\x3\x3\x3\x3\x6\x3\x91"+
		"\n\x3\r\x3\xE\x3\x92\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x5\x4\x9E\n\x4\x3\x5\x3\x5\x3\x5\x3\x5\a\x5\xA4\n\x5\f\x5\xE\x5\xA7"+
		"\v\x5\x3\x5\x3\x5\x3\x6\x3\x6\a\x6\xAD\n\x6\f\x6\xE\x6\xB0\v\x6\x3\x6"+
		"\x3\x6\a\x6\xB4\n\x6\f\x6\xE\x6\xB7\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3"+
		"\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3"+
		"\n\x3\n\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE"+
		"\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3"+
		"\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3"+
		"\x12\x3\x13\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3"+
		"\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3"+
		"\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3"+
		"\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3"+
		"\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3"+
		"!\x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3("+
		"\x3)\x3)\x3*\x3*\x3*\x3+\x3+\x3+\x3,\x3,\x3,\x3-\x3-\x3-\x3.\x3.\x3.\x3"+
		"/\x3/\x3/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x32\x3\x32\x3\x32\x3\x33\x3\x33"+
		"\x3\x33\x3\x34\x3\x34\x3\x35\x3\x35\x3\x36\x3\x36\x3\x36\x3\x37\x3\x37"+
		"\x3\x37\x3\x38\x3\x38\a\x38\x166\n\x38\f\x38\xE\x38\x169\v\x38\x3\x39"+
		"\x3\x39\x3\x39\x3\x39\a\x39\x16F\n\x39\f\x39\xE\x39\x172\v\x39\x3\x39"+
		"\x3\x39\x3\x39\x3\x39\x3:\x3:\x3:\x3:\x3;\x3;\x3\x170\x2\x2<\x3\x2\x3"+
		"\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45"+
		"\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_"+
		"\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38"+
		"o\x2\x39q\x2:s\x2;u\x2<\x3\x2\t\x3\x2\x33;\x3\x2\x32;\x3\x2$$\x3\x2\""+
		"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF"+
		"\xF\"\"\x189\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t"+
		"\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11"+
		"\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2"+
		"\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2"+
		"\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2"+
		"\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31"+
		"\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2"+
		"\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2"+
		"\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2"+
		"\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3"+
		"\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2"+
		"\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2"+
		"\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2"+
		"\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3"+
		"\x2\x2\x2\x2u\x3\x2\x2\x2\x3\x82\x3\x2\x2\x2\x5\x85\x3\x2\x2\x2\a\x9D"+
		"\x3\x2\x2\x2\t\x9F\x3\x2\x2\x2\v\xAA\x3\x2\x2\x2\r\xBA\x3\x2\x2\x2\xF"+
		"\xBF\x3\x2\x2\x2\x11\xC3\x3\x2\x2\x2\x13\xC7\x3\x2\x2\x2\x15\xCD\x3\x2"+
		"\x2\x2\x17\xD0\x3\x2\x2\x2\x19\xD3\x3\x2\x2\x2\x1B\xD6\x3\x2\x2\x2\x1D"+
		"\xD9\x3\x2\x2\x2\x1F\xDC\x3\x2\x2\x2!\xE4\x3\x2\x2\x2#\xE7\x3\x2\x2\x2"+
		"%\xEE\x3\x2\x2\x2\'\xF3\x3\x2\x2\x2)\xFA\x3\x2\x2\x2+\x101\x3\x2\x2\x2"+
		"-\x107\x3\x2\x2\x2/\x111\x3\x2\x2\x2\x31\x11A\x3\x2\x2\x2\x33\x11C\x3"+
		"\x2\x2\x2\x35\x11E\x3\x2\x2\x2\x37\x120\x3\x2\x2\x2\x39\x122\x3\x2\x2"+
		"\x2;\x124\x3\x2\x2\x2=\x126\x3\x2\x2\x2?\x128\x3\x2\x2\x2\x41\x12A\x3"+
		"\x2\x2\x2\x43\x12D\x3\x2\x2\x2\x45\x12F\x3\x2\x2\x2G\x131\x3\x2\x2\x2"+
		"I\x133\x3\x2\x2\x2K\x135\x3\x2\x2\x2M\x137\x3\x2\x2\x2O\x139\x3\x2\x2"+
		"\x2Q\x13B\x3\x2\x2\x2S\x13D\x3\x2\x2\x2U\x140\x3\x2\x2\x2W\x143\x3\x2"+
		"\x2\x2Y\x146\x3\x2\x2\x2[\x149\x3\x2\x2\x2]\x14C\x3\x2\x2\x2_\x14F\x3"+
		"\x2\x2\x2\x61\x151\x3\x2\x2\x2\x63\x153\x3\x2\x2\x2\x65\x156\x3\x2\x2"+
		"\x2g\x159\x3\x2\x2\x2i\x15B\x3\x2\x2\x2k\x15D\x3\x2\x2\x2m\x160\x3\x2"+
		"\x2\x2o\x163\x3\x2\x2\x2q\x16A\x3\x2\x2\x2s\x177\x3\x2\x2\x2u\x17B\x3"+
		"\x2\x2\x2wy\a/\x2\x2xw\x3\x2\x2\x2xy\x3\x2\x2\x2yz\x3\x2\x2\x2z~\t\x2"+
		"\x2\x2{}\t\x3\x2\x2|{\x3\x2\x2\x2}\x80\x3\x2\x2\x2~|\x3\x2\x2\x2~\x7F"+
		"\x3\x2\x2\x2\x7F\x83\x3\x2\x2\x2\x80~\x3\x2\x2\x2\x81\x83\a\x32\x2\x2"+
		"\x82x\x3\x2\x2\x2\x82\x81\x3\x2\x2\x2\x83\x4\x3\x2\x2\x2\x84\x86\a/\x2"+
		"\x2\x85\x84\x3\x2\x2\x2\x85\x86\x3\x2\x2\x2\x86\x8A\x3\x2\x2\x2\x87\x89"+
		"\t\x2\x2\x2\x88\x87\x3\x2\x2\x2\x89\x8C\x3\x2\x2\x2\x8A\x88\x3\x2\x2\x2"+
		"\x8A\x8B\x3\x2\x2\x2\x8B\x8D\x3\x2\x2\x2\x8C\x8A\x3\x2\x2\x2\x8D\x8E\t"+
		"\x3\x2\x2\x8E\x90\a\x30\x2\x2\x8F\x91\t\x3\x2\x2\x90\x8F\x3\x2\x2\x2\x91"+
		"\x92\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2\x2\x93\x6\x3\x2"+
		"\x2\x2\x94\x95\av\x2\x2\x95\x96\at\x2\x2\x96\x97\aw\x2\x2\x97\x9E\ag\x2"+
		"\x2\x98\x99\ah\x2\x2\x99\x9A\a\x63\x2\x2\x9A\x9B\an\x2\x2\x9B\x9C\au\x2"+
		"\x2\x9C\x9E\ag\x2\x2\x9D\x94\x3\x2\x2\x2\x9D\x98\x3\x2\x2\x2\x9E\b\x3"+
		"\x2\x2\x2\x9F\xA5\a$\x2\x2\xA0\xA4\n\x4\x2\x2\xA1\xA2\a^\x2\x2\xA2\xA4"+
		"\a$\x2\x2\xA3\xA0\x3\x2\x2\x2\xA3\xA1\x3\x2\x2\x2\xA4\xA7\x3\x2\x2\x2"+
		"\xA5\xA3\x3\x2\x2\x2\xA5\xA6\x3\x2\x2\x2\xA6\xA8\x3\x2\x2\x2\xA7\xA5\x3"+
		"\x2\x2\x2\xA8\xA9\a$\x2\x2\xA9\n\x3\x2\x2\x2\xAA\xAE\x5\x3\x2\x2\xAB\xAD"+
		"\t\x5\x2\x2\xAC\xAB\x3\x2\x2\x2\xAD\xB0\x3\x2\x2\x2\xAE\xAC\x3\x2\x2\x2"+
		"\xAE\xAF\x3\x2\x2\x2\xAF\xB1\x3\x2\x2\x2\xB0\xAE\x3\x2\x2\x2\xB1\xB5\x5"+
		"M\'\x2\xB2\xB4\t\x5\x2\x2\xB3\xB2\x3\x2\x2\x2\xB4\xB7\x3\x2\x2\x2\xB5"+
		"\xB3\x3\x2\x2\x2\xB5\xB6\x3\x2\x2\x2\xB6\xB8\x3\x2\x2\x2\xB7\xB5\x3\x2"+
		"\x2\x2\xB8\xB9\x5\x3\x2\x2\xB9\f\x3\x2\x2\x2\xBA\xBB\ap\x2\x2\xBB\xBC"+
		"\aw\x2\x2\xBC\xBD\an\x2\x2\xBD\xBE\an\x2\x2\xBE\xE\x3\x2\x2\x2\xBF\xC0"+
		"\an\x2\x2\xC0\xC1\ag\x2\x2\xC1\xC2\av\x2\x2\xC2\x10\x3\x2\x2\x2\xC3\xC4"+
		"\ah\x2\x2\xC4\xC5\aq\x2\x2\xC5\xC6\at\x2\x2\xC6\x12\x3\x2\x2\x2\xC7\xC8"+
		"\ay\x2\x2\xC8\xC9\aj\x2\x2\xC9\xCA\ak\x2\x2\xCA\xCB\an\x2\x2\xCB\xCC\a"+
		"g\x2\x2\xCC\x14\x3\x2\x2\x2\xCD\xCE\ak\x2\x2\xCE\xCF\ap\x2\x2\xCF\x16"+
		"\x3\x2\x2\x2\xD0\xD1\ak\x2\x2\xD1\xD2\ah\x2\x2\xD2\x18\x3\x2\x2\x2\xD3"+
		"\xD4\aw\x2\x2\xD4\xD5\ar\x2\x2\xD5\x1A\x3\x2\x2\x2\xD6\xD7\av\x2\x2\xD7"+
		"\xD8\aq\x2\x2\xD8\x1C\x3\x2\x2\x2\xD9\xDA\a\x63\x2\x2\xDA\xDB\au\x2\x2"+
		"\xDB\x1E\x3\x2\x2\x2\xDC\xDD\an\x2\x2\xDD\xDE\ak\x2\x2\xDE\xDF\a\x64\x2"+
		"\x2\xDF\xE0\at\x2\x2\xE0\xE1\a\x63\x2\x2\xE1\xE2\at\x2\x2\xE2\xE3\a{\x2"+
		"\x2\xE3 \x3\x2\x2\x2\xE4\xE5\au\x2\x2\xE5\xE6\ah\x2\x2\xE6\"\x3\x2\x2"+
		"\x2\xE7\xE8\aq\x2\x2\xE8\xE9\a\x64\x2\x2\xE9\xEA\al\x2\x2\xEA\xEB\ag\x2"+
		"\x2\xEB\xEC\a\x65\x2\x2\xEC\xED\av\x2\x2\xED$\x3\x2\x2\x2\xEE\xEF\ag\x2"+
		"\x2\xEF\xF0\an\x2\x2\xF0\xF1\au\x2\x2\xF1\xF2\ag\x2\x2\xF2&\x3\x2\x2\x2"+
		"\xF3\xF4\ak\x2\x2\xF4\xF5\ao\x2\x2\xF5\xF6\ar\x2\x2\xF6\xF7\aq\x2\x2\xF7"+
		"\xF8\at\x2\x2\xF8\xF9\av\x2\x2\xF9(\x3\x2\x2\x2\xFA\xFB\at\x2\x2\xFB\xFC"+
		"\ag\x2\x2\xFC\xFD\av\x2\x2\xFD\xFE\aw\x2\x2\xFE\xFF\at\x2\x2\xFF\x100"+
		"\ap\x2\x2\x100*\x3\x2\x2\x2\x101\x102\ar\x2\x2\x102\x103\at\x2\x2\x103"+
		"\x104\ak\x2\x2\x104\x105\ap\x2\x2\x105\x106\av\x2\x2\x106,\x3\x2\x2\x2"+
		"\x107\x108\a\x66\x2\x2\x108\x109\ak\x2\x2\x109\x10A\au\x2\x2\x10A\x10B"+
		"\at\x2\x2\x10B\x10C\ag\x2\x2\x10C\x10D\ai\x2\x2\x10D\x10E\a\x63\x2\x2"+
		"\x10E\x10F\at\x2\x2\x10F\x110\a\x66\x2\x2\x110.\x3\x2\x2\x2\x111\x112"+
		"\ag\x2\x2\x112\x113\az\x2\x2\x113\x114\av\x2\x2\x114\x115\ag\x2\x2\x115"+
		"\x116\at\x2\x2\x116\x117\ap\x2\x2\x117\x118\a\x63\x2\x2\x118\x119\an\x2"+
		"\x2\x119\x30\x3\x2\x2\x2\x11A\x11B\a=\x2\x2\x11B\x32\x3\x2\x2\x2\x11C"+
		"\x11D\a?\x2\x2\x11D\x34\x3\x2\x2\x2\x11E\x11F\a.\x2\x2\x11F\x36\x3\x2"+
		"\x2\x2\x120\x121\a}\x2\x2\x121\x38\x3\x2\x2\x2\x122\x123\a\x7F\x2\x2\x123"+
		":\x3\x2\x2\x2\x124\x125\a]\x2\x2\x125<\x3\x2\x2\x2\x126\x127\a_\x2\x2"+
		"\x127>\x3\x2\x2\x2\x128\x129\a#\x2\x2\x129@\x3\x2\x2\x2\x12A\x12B\a>\x2"+
		"\x2\x12B\x12C\a/\x2\x2\x12C\x42\x3\x2\x2\x2\x12D\x12E\a*\x2\x2\x12E\x44"+
		"\x3\x2\x2\x2\x12F\x130\a+\x2\x2\x130\x46\x3\x2\x2\x2\x131\x132\a-\x2\x2"+
		"\x132H\x3\x2\x2\x2\x133\x134\a/\x2\x2\x134J\x3\x2\x2\x2\x135\x136\a,\x2"+
		"\x2\x136L\x3\x2\x2\x2\x137\x138\a\x31\x2\x2\x138N\x3\x2\x2\x2\x139\x13A"+
		"\a`\x2\x2\x13AP\x3\x2\x2\x2\x13B\x13C\a\x30\x2\x2\x13CR\x3\x2\x2\x2\x13D"+
		"\x13E\a-\x2\x2\x13E\x13F\a?\x2\x2\x13FT\x3\x2\x2\x2\x140\x141\a/\x2\x2"+
		"\x141\x142\a?\x2\x2\x142V\x3\x2\x2\x2\x143\x144\a\x31\x2\x2\x144\x145"+
		"\a?\x2\x2\x145X\x3\x2\x2\x2\x146\x147\a,\x2\x2\x147\x148\a?\x2\x2\x148"+
		"Z\x3\x2\x2\x2\x149\x14A\a-\x2\x2\x14A\x14B\a-\x2\x2\x14B\\\x3\x2\x2\x2"+
		"\x14C\x14D\a/\x2\x2\x14D\x14E\a/\x2\x2\x14E^\x3\x2\x2\x2\x14F\x150\a~"+
		"\x2\x2\x150`\x3\x2\x2\x2\x151\x152\a(\x2\x2\x152\x62\x3\x2\x2\x2\x153"+
		"\x154\a#\x2\x2\x154\x155\a?\x2\x2\x155\x64\x3\x2\x2\x2\x156\x157\a?\x2"+
		"\x2\x157\x158\a?\x2\x2\x158\x66\x3\x2\x2\x2\x159\x15A\a@\x2\x2\x15Ah\x3"+
		"\x2\x2\x2\x15B\x15C\a>\x2\x2\x15Cj\x3\x2\x2\x2\x15D\x15E\a@\x2\x2\x15E"+
		"\x15F\a?\x2\x2\x15Fl\x3\x2\x2\x2\x160\x161\a>\x2\x2\x161\x162\a?\x2\x2"+
		"\x162n\x3\x2\x2\x2\x163\x167\t\x6\x2\x2\x164\x166\t\a\x2\x2\x165\x164"+
		"\x3\x2\x2\x2\x166\x169\x3\x2\x2\x2\x167\x165\x3\x2\x2\x2\x167\x168\x3"+
		"\x2\x2\x2\x168p\x3\x2\x2\x2\x169\x167\x3\x2\x2\x2\x16A\x16B\a\x31\x2\x2"+
		"\x16B\x16C\a\x31\x2\x2\x16C\x170\x3\x2\x2\x2\x16D\x16F\v\x2\x2\x2\x16E"+
		"\x16D\x3\x2\x2\x2\x16F\x172\x3\x2\x2\x2\x170\x171\x3\x2\x2\x2\x170\x16E"+
		"\x3\x2\x2\x2\x171\x173\x3\x2\x2\x2\x172\x170\x3\x2\x2\x2\x173\x174\a\f"+
		"\x2\x2\x174\x175\x3\x2\x2\x2\x175\x176\b\x39\x2\x2\x176r\x3\x2\x2\x2\x177"+
		"\x178\t\b\x2\x2\x178\x179\x3\x2\x2\x2\x179\x17A\b:\x2\x2\x17At\x3\x2\x2"+
		"\x2\x17B\x17C\v\x2\x2\x2\x17Cv\x3\x2\x2\x2\x10\x2x~\x82\x85\x8A\x92\x9D"+
		"\xA3\xA5\xAE\xB5\x167\x170\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
