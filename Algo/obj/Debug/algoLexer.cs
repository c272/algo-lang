//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/c272/Repos/algo-lang/Algo/Parsing/algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, WHILE_SYM=9, IN_SYM=10, IF_SYM=11, UP_SYM=12, TO_SYM=13, AS_SYM=14, 
		LIB_SYM=15, SIG_FIG_SYM=16, OBJ_SYM=17, ELSE_SYM=18, IMPORT_SYM=19, RETURN_SYM=20, 
		PRINT_SYM=21, DISREGARD_SYM=22, INTERNAL_SYM=23, EXTERNAL_SYM=24, ENDLINE=25, 
		EQUALS=26, COMMA=27, LBRACE=28, RBRACE=29, LSQBR=30, RSQBR=31, INVERT_SYM=32, 
		LBRACKET=33, RBRACKET=34, ADD_OP=35, TAKE_OP=36, MUL_OP=37, DIV_OP=38, 
		POW_OP=39, POINT=40, ADDFROM_OP=41, TAKEFROM_OP=42, DIVFROM_OP=43, MULFROM_OP=44, 
		ADD_PFOP=45, TAKE_PFOP=46, BIN_OR=47, BIN_AND=48, BIN_NET=49, BIN_EQUALS=50, 
		GRTR_THAN=51, LESS_THAN=52, GRTR_THAN_ET=53, LESS_THAN_ET=54, IDENTIFIER=55, 
		COMMENT=56, WS=57, UNKNOWN_SYMBOL=58;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", 
		"PRINT_SYM", "DISREGARD_SYM", "INTERNAL_SYM", "EXTERNAL_SYM", "ENDLINE", 
		"EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", 
		"POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", 
		"TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", 
		"LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", 
		"WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'while'", 
		"'in'", "'if'", "'up'", "'to'", "'as'", "'library'", "'sf'", "'object'", 
		"'else'", "'import'", "'return'", "'print'", "'disregard'", "'internal'", 
		"'external'", "';'", "'='", "','", "'{'", "'}'", "'['", "']'", "'!'", 
		"'('", "')'", "'+'", "'-'", "'*'", "'/'", "'^'", "'.'", "'+='", "'-='", 
		"'/='", "'*='", "'++'", "'--'", "'|'", "'&'", "'!='", "'=='", "'>'", "'<'", 
		"'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", 
		"LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", 
		"PRINT_SYM", "DISREGARD_SYM", "INTERNAL_SYM", "EXTERNAL_SYM", "ENDLINE", 
		"EQUALS", "COMMA", "LBRACE", "RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", 
		"LBRACKET", "RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", 
		"POINT", "ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", 
		"TAKE_PFOP", "BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", 
		"LESS_THAN", "GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", 
		"WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2<\x181\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x3\x2\x5\x2y\n\x2\x3\x2\x3\x2"+
		"\a\x2}\n\x2\f\x2\xE\x2\x80\v\x2\x3\x2\x5\x2\x83\n\x2\x3\x3\x5\x3\x86\n"+
		"\x3\x3\x3\a\x3\x89\n\x3\f\x3\xE\x3\x8C\v\x3\x3\x3\x3\x3\x3\x3\x6\x3\x91"+
		"\n\x3\r\x3\xE\x3\x92\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3"+
		"\x4\x5\x4\x9E\n\x4\x3\x5\x3\x5\a\x5\xA2\n\x5\f\x5\xE\x5\xA5\v\x5\x3\x5"+
		"\x3\x5\x3\x6\x3\x6\a\x6\xAB\n\x6\f\x6\xE\x6\xAE\v\x6\x3\x6\x3\x6\a\x6"+
		"\xB2\n\x6\f\x6\xE\x6\xB5\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3"+
		"\b\x3\b\x3\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
		"\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3"+
		"\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11"+
		"\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x12\x3\x13"+
		"\x3\x13\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16"+
		"\x3\x16\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x3\x17\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18"+
		"\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D"+
		"\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3"+
		"$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3*\x3+\x3+\x3+\x3"+
		",\x3,\x3,\x3-\x3-\x3-\x3.\x3.\x3.\x3/\x3/\x3/\x3\x30\x3\x30\x3\x31\x3"+
		"\x31\x3\x32\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33\x3\x34\x3\x34\x3\x35\x3"+
		"\x35\x3\x36\x3\x36\x3\x36\x3\x37\x3\x37\x3\x37\x3\x38\x3\x38\a\x38\x16A"+
		"\n\x38\f\x38\xE\x38\x16D\v\x38\x3\x39\x3\x39\x3\x39\x3\x39\a\x39\x173"+
		"\n\x39\f\x39\xE\x39\x176\v\x39\x3\x39\x3\x39\x3\x39\x3\x39\x3:\x3:\x3"+
		":\x3:\x3;\x3;\x3\x174\x2\x2<\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a"+
		"\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF"+
		"\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17"+
		"-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E"+
		";\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)"+
		"Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x61\x2\x32\x63\x2\x33\x65"+
		"\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38o\x2\x39q\x2:s\x2;u\x2<\x3\x2\t"+
		"\x3\x2\x33;\x3\x2\x32;\x3\x2$$\x3\x2\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2"+
		"\x32;\x43\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x18C\x2\x3\x3\x2\x2\x2\x2"+
		"\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2"+
		"\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2"+
		"\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2"+
		"\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2"+
		"\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2"+
		"\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2"+
		"\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2"+
		"\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2"+
		"\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2"+
		"\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3"+
		"\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2"+
		"\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2"+
		"\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2"+
		"\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x2u\x3\x2\x2\x2\x3\x82"+
		"\x3\x2\x2\x2\x5\x85\x3\x2\x2\x2\a\x9D\x3\x2\x2\x2\t\x9F\x3\x2\x2\x2\v"+
		"\xA8\x3\x2\x2\x2\r\xB8\x3\x2\x2\x2\xF\xBD\x3\x2\x2\x2\x11\xC1\x3\x2\x2"+
		"\x2\x13\xC5\x3\x2\x2\x2\x15\xCB\x3\x2\x2\x2\x17\xCE\x3\x2\x2\x2\x19\xD1"+
		"\x3\x2\x2\x2\x1B\xD4\x3\x2\x2\x2\x1D\xD7\x3\x2\x2\x2\x1F\xDA\x3\x2\x2"+
		"\x2!\xE2\x3\x2\x2\x2#\xE5\x3\x2\x2\x2%\xEC\x3\x2\x2\x2\'\xF1\x3\x2\x2"+
		"\x2)\xF8\x3\x2\x2\x2+\xFF\x3\x2\x2\x2-\x105\x3\x2\x2\x2/\x10F\x3\x2\x2"+
		"\x2\x31\x118\x3\x2\x2\x2\x33\x121\x3\x2\x2\x2\x35\x123\x3\x2\x2\x2\x37"+
		"\x125\x3\x2\x2\x2\x39\x127\x3\x2\x2\x2;\x129\x3\x2\x2\x2=\x12B\x3\x2\x2"+
		"\x2?\x12D\x3\x2\x2\x2\x41\x12F\x3\x2\x2\x2\x43\x131\x3\x2\x2\x2\x45\x133"+
		"\x3\x2\x2\x2G\x135\x3\x2\x2\x2I\x137\x3\x2\x2\x2K\x139\x3\x2\x2\x2M\x13B"+
		"\x3\x2\x2\x2O\x13D\x3\x2\x2\x2Q\x13F\x3\x2\x2\x2S\x141\x3\x2\x2\x2U\x144"+
		"\x3\x2\x2\x2W\x147\x3\x2\x2\x2Y\x14A\x3\x2\x2\x2[\x14D\x3\x2\x2\x2]\x150"+
		"\x3\x2\x2\x2_\x153\x3\x2\x2\x2\x61\x155\x3\x2\x2\x2\x63\x157\x3\x2\x2"+
		"\x2\x65\x15A\x3\x2\x2\x2g\x15D\x3\x2\x2\x2i\x15F\x3\x2\x2\x2k\x161\x3"+
		"\x2\x2\x2m\x164\x3\x2\x2\x2o\x167\x3\x2\x2\x2q\x16E\x3\x2\x2\x2s\x17B"+
		"\x3\x2\x2\x2u\x17F\x3\x2\x2\x2wy\a/\x2\x2xw\x3\x2\x2\x2xy\x3\x2\x2\x2"+
		"yz\x3\x2\x2\x2z~\t\x2\x2\x2{}\t\x3\x2\x2|{\x3\x2\x2\x2}\x80\x3\x2\x2\x2"+
		"~|\x3\x2\x2\x2~\x7F\x3\x2\x2\x2\x7F\x83\x3\x2\x2\x2\x80~\x3\x2\x2\x2\x81"+
		"\x83\a\x32\x2\x2\x82x\x3\x2\x2\x2\x82\x81\x3\x2\x2\x2\x83\x4\x3\x2\x2"+
		"\x2\x84\x86\a/\x2\x2\x85\x84\x3\x2\x2\x2\x85\x86\x3\x2\x2\x2\x86\x8A\x3"+
		"\x2\x2\x2\x87\x89\t\x2\x2\x2\x88\x87\x3\x2\x2\x2\x89\x8C\x3\x2\x2\x2\x8A"+
		"\x88\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B\x8D\x3\x2\x2\x2\x8C\x8A\x3\x2"+
		"\x2\x2\x8D\x8E\t\x3\x2\x2\x8E\x90\a\x30\x2\x2\x8F\x91\t\x3\x2\x2\x90\x8F"+
		"\x3\x2\x2\x2\x91\x92\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2\x92\x93\x3\x2\x2"+
		"\x2\x93\x6\x3\x2\x2\x2\x94\x95\av\x2\x2\x95\x96\at\x2\x2\x96\x97\aw\x2"+
		"\x2\x97\x9E\ag\x2\x2\x98\x99\ah\x2\x2\x99\x9A\a\x63\x2\x2\x9A\x9B\an\x2"+
		"\x2\x9B\x9C\au\x2\x2\x9C\x9E\ag\x2\x2\x9D\x94\x3\x2\x2\x2\x9D\x98\x3\x2"+
		"\x2\x2\x9E\b\x3\x2\x2\x2\x9F\xA3\a$\x2\x2\xA0\xA2\n\x4\x2\x2\xA1\xA0\x3"+
		"\x2\x2\x2\xA2\xA5\x3\x2\x2\x2\xA3\xA1\x3\x2\x2\x2\xA3\xA4\x3\x2\x2\x2"+
		"\xA4\xA6\x3\x2\x2\x2\xA5\xA3\x3\x2\x2\x2\xA6\xA7\a$\x2\x2\xA7\n\x3\x2"+
		"\x2\x2\xA8\xAC\x5\x3\x2\x2\xA9\xAB\t\x5\x2\x2\xAA\xA9\x3\x2\x2\x2\xAB"+
		"\xAE\x3\x2\x2\x2\xAC\xAA\x3\x2\x2\x2\xAC\xAD\x3\x2\x2\x2\xAD\xAF\x3\x2"+
		"\x2\x2\xAE\xAC\x3\x2\x2\x2\xAF\xB3\x5M\'\x2\xB0\xB2\t\x5\x2\x2\xB1\xB0"+
		"\x3\x2\x2\x2\xB2\xB5\x3\x2\x2\x2\xB3\xB1\x3\x2\x2\x2\xB3\xB4\x3\x2\x2"+
		"\x2\xB4\xB6\x3\x2\x2\x2\xB5\xB3\x3\x2\x2\x2\xB6\xB7\x5\x3\x2\x2\xB7\f"+
		"\x3\x2\x2\x2\xB8\xB9\ap\x2\x2\xB9\xBA\aw\x2\x2\xBA\xBB\an\x2\x2\xBB\xBC"+
		"\an\x2\x2\xBC\xE\x3\x2\x2\x2\xBD\xBE\an\x2\x2\xBE\xBF\ag\x2\x2\xBF\xC0"+
		"\av\x2\x2\xC0\x10\x3\x2\x2\x2\xC1\xC2\ah\x2\x2\xC2\xC3\aq\x2\x2\xC3\xC4"+
		"\at\x2\x2\xC4\x12\x3\x2\x2\x2\xC5\xC6\ay\x2\x2\xC6\xC7\aj\x2\x2\xC7\xC8"+
		"\ak\x2\x2\xC8\xC9\an\x2\x2\xC9\xCA\ag\x2\x2\xCA\x14\x3\x2\x2\x2\xCB\xCC"+
		"\ak\x2\x2\xCC\xCD\ap\x2\x2\xCD\x16\x3\x2\x2\x2\xCE\xCF\ak\x2\x2\xCF\xD0"+
		"\ah\x2\x2\xD0\x18\x3\x2\x2\x2\xD1\xD2\aw\x2\x2\xD2\xD3\ar\x2\x2\xD3\x1A"+
		"\x3\x2\x2\x2\xD4\xD5\av\x2\x2\xD5\xD6\aq\x2\x2\xD6\x1C\x3\x2\x2\x2\xD7"+
		"\xD8\a\x63\x2\x2\xD8\xD9\au\x2\x2\xD9\x1E\x3\x2\x2\x2\xDA\xDB\an\x2\x2"+
		"\xDB\xDC\ak\x2\x2\xDC\xDD\a\x64\x2\x2\xDD\xDE\at\x2\x2\xDE\xDF\a\x63\x2"+
		"\x2\xDF\xE0\at\x2\x2\xE0\xE1\a{\x2\x2\xE1 \x3\x2\x2\x2\xE2\xE3\au\x2\x2"+
		"\xE3\xE4\ah\x2\x2\xE4\"\x3\x2\x2\x2\xE5\xE6\aq\x2\x2\xE6\xE7\a\x64\x2"+
		"\x2\xE7\xE8\al\x2\x2\xE8\xE9\ag\x2\x2\xE9\xEA\a\x65\x2\x2\xEA\xEB\av\x2"+
		"\x2\xEB$\x3\x2\x2\x2\xEC\xED\ag\x2\x2\xED\xEE\an\x2\x2\xEE\xEF\au\x2\x2"+
		"\xEF\xF0\ag\x2\x2\xF0&\x3\x2\x2\x2\xF1\xF2\ak\x2\x2\xF2\xF3\ao\x2\x2\xF3"+
		"\xF4\ar\x2\x2\xF4\xF5\aq\x2\x2\xF5\xF6\at\x2\x2\xF6\xF7\av\x2\x2\xF7("+
		"\x3\x2\x2\x2\xF8\xF9\at\x2\x2\xF9\xFA\ag\x2\x2\xFA\xFB\av\x2\x2\xFB\xFC"+
		"\aw\x2\x2\xFC\xFD\at\x2\x2\xFD\xFE\ap\x2\x2\xFE*\x3\x2\x2\x2\xFF\x100"+
		"\ar\x2\x2\x100\x101\at\x2\x2\x101\x102\ak\x2\x2\x102\x103\ap\x2\x2\x103"+
		"\x104\av\x2\x2\x104,\x3\x2\x2\x2\x105\x106\a\x66\x2\x2\x106\x107\ak\x2"+
		"\x2\x107\x108\au\x2\x2\x108\x109\at\x2\x2\x109\x10A\ag\x2\x2\x10A\x10B"+
		"\ai\x2\x2\x10B\x10C\a\x63\x2\x2\x10C\x10D\at\x2\x2\x10D\x10E\a\x66\x2"+
		"\x2\x10E.\x3\x2\x2\x2\x10F\x110\ak\x2\x2\x110\x111\ap\x2\x2\x111\x112"+
		"\av\x2\x2\x112\x113\ag\x2\x2\x113\x114\at\x2\x2\x114\x115\ap\x2\x2\x115"+
		"\x116\a\x63\x2\x2\x116\x117\an\x2\x2\x117\x30\x3\x2\x2\x2\x118\x119\a"+
		"g\x2\x2\x119\x11A\az\x2\x2\x11A\x11B\av\x2\x2\x11B\x11C\ag\x2\x2\x11C"+
		"\x11D\at\x2\x2\x11D\x11E\ap\x2\x2\x11E\x11F\a\x63\x2\x2\x11F\x120\an\x2"+
		"\x2\x120\x32\x3\x2\x2\x2\x121\x122\a=\x2\x2\x122\x34\x3\x2\x2\x2\x123"+
		"\x124\a?\x2\x2\x124\x36\x3\x2\x2\x2\x125\x126\a.\x2\x2\x126\x38\x3\x2"+
		"\x2\x2\x127\x128\a}\x2\x2\x128:\x3\x2\x2\x2\x129\x12A\a\x7F\x2\x2\x12A"+
		"<\x3\x2\x2\x2\x12B\x12C\a]\x2\x2\x12C>\x3\x2\x2\x2\x12D\x12E\a_\x2\x2"+
		"\x12E@\x3\x2\x2\x2\x12F\x130\a#\x2\x2\x130\x42\x3\x2\x2\x2\x131\x132\a"+
		"*\x2\x2\x132\x44\x3\x2\x2\x2\x133\x134\a+\x2\x2\x134\x46\x3\x2\x2\x2\x135"+
		"\x136\a-\x2\x2\x136H\x3\x2\x2\x2\x137\x138\a/\x2\x2\x138J\x3\x2\x2\x2"+
		"\x139\x13A\a,\x2\x2\x13AL\x3\x2\x2\x2\x13B\x13C\a\x31\x2\x2\x13CN\x3\x2"+
		"\x2\x2\x13D\x13E\a`\x2\x2\x13EP\x3\x2\x2\x2\x13F\x140\a\x30\x2\x2\x140"+
		"R\x3\x2\x2\x2\x141\x142\a-\x2\x2\x142\x143\a?\x2\x2\x143T\x3\x2\x2\x2"+
		"\x144\x145\a/\x2\x2\x145\x146\a?\x2\x2\x146V\x3\x2\x2\x2\x147\x148\a\x31"+
		"\x2\x2\x148\x149\a?\x2\x2\x149X\x3\x2\x2\x2\x14A\x14B\a,\x2\x2\x14B\x14C"+
		"\a?\x2\x2\x14CZ\x3\x2\x2\x2\x14D\x14E\a-\x2\x2\x14E\x14F\a-\x2\x2\x14F"+
		"\\\x3\x2\x2\x2\x150\x151\a/\x2\x2\x151\x152\a/\x2\x2\x152^\x3\x2\x2\x2"+
		"\x153\x154\a~\x2\x2\x154`\x3\x2\x2\x2\x155\x156\a(\x2\x2\x156\x62\x3\x2"+
		"\x2\x2\x157\x158\a#\x2\x2\x158\x159\a?\x2\x2\x159\x64\x3\x2\x2\x2\x15A"+
		"\x15B\a?\x2\x2\x15B\x15C\a?\x2\x2\x15C\x66\x3\x2\x2\x2\x15D\x15E\a@\x2"+
		"\x2\x15Eh\x3\x2\x2\x2\x15F\x160\a>\x2\x2\x160j\x3\x2\x2\x2\x161\x162\a"+
		"@\x2\x2\x162\x163\a?\x2\x2\x163l\x3\x2\x2\x2\x164\x165\a>\x2\x2\x165\x166"+
		"\a?\x2\x2\x166n\x3\x2\x2\x2\x167\x16B\t\x6\x2\x2\x168\x16A\t\a\x2\x2\x169"+
		"\x168\x3\x2\x2\x2\x16A\x16D\x3\x2\x2\x2\x16B\x169\x3\x2\x2\x2\x16B\x16C"+
		"\x3\x2\x2\x2\x16Cp\x3\x2\x2\x2\x16D\x16B\x3\x2\x2\x2\x16E\x16F\a\x31\x2"+
		"\x2\x16F\x170\a\x31\x2\x2\x170\x174\x3\x2\x2\x2\x171\x173\v\x2\x2\x2\x172"+
		"\x171\x3\x2\x2\x2\x173\x176\x3\x2\x2\x2\x174\x175\x3\x2\x2\x2\x174\x172"+
		"\x3\x2\x2\x2\x175\x177\x3\x2\x2\x2\x176\x174\x3\x2\x2\x2\x177\x178\a\f"+
		"\x2\x2\x178\x179\x3\x2\x2\x2\x179\x17A\b\x39\x2\x2\x17Ar\x3\x2\x2\x2\x17B"+
		"\x17C\t\b\x2\x2\x17C\x17D\x3\x2\x2\x2\x17D\x17E\b:\x2\x2\x17Et\x3\x2\x2"+
		"\x2\x17F\x180\v\x2\x2\x2\x180v\x3\x2\x2\x2\xF\x2x~\x82\x85\x8A\x92\x9D"+
		"\xA3\xAC\xB3\x16B\x174\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
