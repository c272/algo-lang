//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Files\Programming\GitHub\algo\Algo\Parsing\algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, FOREACH_SYM=9, ADD_SYM=10, BREAK_SYM=11, CONTINUE_SYM=12, AT_SYM=13, 
		REMOVE_SYM=14, FROM_SYM=15, WHILE_SYM=16, IN_SYM=17, IF_SYM=18, UP_SYM=19, 
		TO_SYM=20, AS_SYM=21, ENUM_SYM=22, LIB_SYM=23, SIG_FIG_SYM=24, OBJ_SYM=25, 
		ELSE_SYM=26, IMPORT_SYM=27, RETURN_SYM=28, PRINT_SYM=29, DISREGARD_SYM=30, 
		EXTERNAL_SYM=31, TRY_SYM=32, CATCH_SYM=33, ENDLINE=34, EQUALS=35, COMMA=36, 
		LBRACE=37, RBRACE=38, LSQBR=39, RSQBR=40, INVERT_SYM=41, STREAMING_SYM=42, 
		LBRACKET=43, RBRACKET=44, ADD_OP=45, TAKE_OP=46, MUL_OP=47, DIV_OP=48, 
		POW_OP=49, MOD_OP=50, POINT=51, ADDFROM_OP=52, TAKEFROM_OP=53, DIVFROM_OP=54, 
		MULFROM_OP=55, ADD_PFOP=56, TAKE_PFOP=57, BIN_OR=58, BIN_AND=59, BIN_NET=60, 
		BIN_EQUALS=61, GRTR_THAN=62, LESS_THAN=63, GRTR_THAN_ET=64, LESS_THAN_ET=65, 
		IDENTIFIER=66, COMMENT=67, WS=68, UNKNOWN_SYMBOL=69;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "BREAK_SYM", "CONTINUE_SYM", "AT_SYM", 
		"REMOVE_SYM", "FROM_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", 
		"AS_SYM", "ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", 
		"IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", 
		"TRY_SYM", "CATCH_SYM", "ENDLINE", "EQUALS", "COMMA", "LBRACE", "RBRACE", 
		"LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", "RBRACKET", 
		"ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "MOD_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'foreach'", 
		"'add'", "'break'", "'continue'", "'at'", "'remove'", "'from'", "'while'", 
		"'in'", "'if'", "'up'", "'to'", "'as'", "'enum'", "'library'", "'sf'", 
		"'object'", "'else'", "'import'", "'return'", "'print '", "'disregard'", 
		"'external'", "'try'", "'catch'", "';'", "'='", "','", "'{'", "'}'", "'['", 
		"']'", "'!'", "'<-'", "'('", "')'", "'+'", "'-'", "'*'", "'/'", "'^'", 
		"'%'", "'.'", "'+='", "'-='", "'/='", "'*='", "'++'", "'--'", "'|'", "'&'", 
		"'!='", "'=='", "'>'", "'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "FOREACH_SYM", "ADD_SYM", "BREAK_SYM", "CONTINUE_SYM", "AT_SYM", 
		"REMOVE_SYM", "FROM_SYM", "WHILE_SYM", "IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", 
		"AS_SYM", "ENUM_SYM", "LIB_SYM", "SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", 
		"IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", "DISREGARD_SYM", "EXTERNAL_SYM", 
		"TRY_SYM", "CATCH_SYM", "ENDLINE", "EQUALS", "COMMA", "LBRACE", "RBRACE", 
		"LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", "RBRACKET", 
		"ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "MOD_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2G\x1CF\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37\t\x37"+
		"\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4?\t?\x4"+
		"@\t@\x4\x41\t\x41\x4\x42\t\x42\x4\x43\t\x43\x4\x44\t\x44\x4\x45\t\x45"+
		"\x4\x46\t\x46\x3\x2\x5\x2\x8F\n\x2\x3\x2\x3\x2\a\x2\x93\n\x2\f\x2\xE\x2"+
		"\x96\v\x2\x3\x2\x5\x2\x99\n\x2\x3\x3\x5\x3\x9C\n\x3\x3\x3\a\x3\x9F\n\x3"+
		"\f\x3\xE\x3\xA2\v\x3\x3\x3\x3\x3\x3\x3\x6\x3\xA7\n\x3\r\x3\xE\x3\xA8\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4\xB4\n\x4\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\a\x5\xBA\n\x5\f\x5\xE\x5\xBD\v\x5\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\a\x6\xC3\n\x6\f\x6\xE\x6\xC6\v\x6\x3\x6\x3\x6\a\x6\xCA\n\x6"+
		"\f\x6\xE\x6\xCD\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3"+
		"\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3\n\x3"+
		"\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3"+
		"\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\xF\x3\xF"+
		"\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3"+
		"\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3"+
		"\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3"+
		"\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3"+
		"\x18\x3\x19\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3"+
		"\x1A\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3"+
		"\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3"+
		"\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3\x1F\x3 \x3 \x3 \x3 \x3 \x3"+
		" \x3 \x3 \x3 \x3!\x3!\x3!\x3!\x3\"\x3\"\x3\"\x3\"\x3\"\x3\"\x3#\x3#\x3"+
		"$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)\x3)\x3*\x3*\x3+\x3+\x3+\x3"+
		",\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x32\x3\x32"+
		"\x3\x33\x3\x33\x3\x34\x3\x34\x3\x35\x3\x35\x3\x35\x3\x36\x3\x36\x3\x36"+
		"\x3\x37\x3\x37\x3\x37\x3\x38\x3\x38\x3\x38\x3\x39\x3\x39\x3\x39\x3:\x3"+
		":\x3:\x3;\x3;\x3<\x3<\x3=\x3=\x3=\x3>\x3>\x3>\x3?\x3?\x3@\x3@\x3\x41\x3"+
		"\x41\x3\x41\x3\x42\x3\x42\x3\x42\x3\x43\x3\x43\a\x43\x1B8\n\x43\f\x43"+
		"\xE\x43\x1BB\v\x43\x3\x44\x3\x44\x3\x44\x3\x44\a\x44\x1C1\n\x44\f\x44"+
		"\xE\x44\x1C4\v\x44\x3\x44\x3\x44\x3\x44\x3\x44\x3\x45\x3\x45\x3\x45\x3"+
		"\x45\x3\x46\x3\x46\x3\x1C2\x2\x2G\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v"+
		"\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B"+
		"\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16"+
		"+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39"+
		"\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2"+
		"(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_\x2\x31\x61\x2\x32\x63\x2"+
		"\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38o\x2\x39q\x2:s\x2;u\x2"+
		"<w\x2=y\x2>{\x2?}\x2@\x7F\x2\x41\x81\x2\x42\x83\x2\x43\x85\x2\x44\x87"+
		"\x2\x45\x89\x2\x46\x8B\x2G\x3\x2\t\x3\x2\x33;\x3\x2\x32;\x3\x2$$\x3\x2"+
		"\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x5\x2\v\f"+
		"\xF\xF\"\"\x1DB\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2"+
		"\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2"+
		"\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2"+
		"\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3"+
		"\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2"+
		"\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2"+
		"\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2"+
		"\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2"+
		"\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2"+
		"\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2"+
		"Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2"+
		"\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2_\x3\x2\x2\x2\x2\x61\x3\x2\x2"+
		"\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2\x2g\x3\x2\x2\x2\x2i\x3\x2\x2"+
		"\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2\x2o\x3\x2\x2\x2\x2q\x3\x2\x2\x2\x2"+
		"s\x3\x2\x2\x2\x2u\x3\x2\x2\x2\x2w\x3\x2\x2\x2\x2y\x3\x2\x2\x2\x2{\x3\x2"+
		"\x2\x2\x2}\x3\x2\x2\x2\x2\x7F\x3\x2\x2\x2\x2\x81\x3\x2\x2\x2\x2\x83\x3"+
		"\x2\x2\x2\x2\x85\x3\x2\x2\x2\x2\x87\x3\x2\x2\x2\x2\x89\x3\x2\x2\x2\x2"+
		"\x8B\x3\x2\x2\x2\x3\x98\x3\x2\x2\x2\x5\x9B\x3\x2\x2\x2\a\xB3\x3\x2\x2"+
		"\x2\t\xB5\x3\x2\x2\x2\v\xC0\x3\x2\x2\x2\r\xD0\x3\x2\x2\x2\xF\xD5\x3\x2"+
		"\x2\x2\x11\xD9\x3\x2\x2\x2\x13\xDD\x3\x2\x2\x2\x15\xE5\x3\x2\x2\x2\x17"+
		"\xE9\x3\x2\x2\x2\x19\xEF\x3\x2\x2\x2\x1B\xF8\x3\x2\x2\x2\x1D\xFB\x3\x2"+
		"\x2\x2\x1F\x102\x3\x2\x2\x2!\x107\x3\x2\x2\x2#\x10D\x3\x2\x2\x2%\x110"+
		"\x3\x2\x2\x2\'\x113\x3\x2\x2\x2)\x116\x3\x2\x2\x2+\x119\x3\x2\x2\x2-\x11C"+
		"\x3\x2\x2\x2/\x121\x3\x2\x2\x2\x31\x129\x3\x2\x2\x2\x33\x12C\x3\x2\x2"+
		"\x2\x35\x133\x3\x2\x2\x2\x37\x138\x3\x2\x2\x2\x39\x13F\x3\x2\x2\x2;\x146"+
		"\x3\x2\x2\x2=\x14D\x3\x2\x2\x2?\x157\x3\x2\x2\x2\x41\x160\x3\x2\x2\x2"+
		"\x43\x164\x3\x2\x2\x2\x45\x16A\x3\x2\x2\x2G\x16C\x3\x2\x2\x2I\x16E\x3"+
		"\x2\x2\x2K\x170\x3\x2\x2\x2M\x172\x3\x2\x2\x2O\x174\x3\x2\x2\x2Q\x176"+
		"\x3\x2\x2\x2S\x178\x3\x2\x2\x2U\x17A\x3\x2\x2\x2W\x17D\x3\x2\x2\x2Y\x17F"+
		"\x3\x2\x2\x2[\x181\x3\x2\x2\x2]\x183\x3\x2\x2\x2_\x185\x3\x2\x2\x2\x61"+
		"\x187\x3\x2\x2\x2\x63\x189\x3\x2\x2\x2\x65\x18B\x3\x2\x2\x2g\x18D\x3\x2"+
		"\x2\x2i\x18F\x3\x2\x2\x2k\x192\x3\x2\x2\x2m\x195\x3\x2\x2\x2o\x198\x3"+
		"\x2\x2\x2q\x19B\x3\x2\x2\x2s\x19E\x3\x2\x2\x2u\x1A1\x3\x2\x2\x2w\x1A3"+
		"\x3\x2\x2\x2y\x1A5\x3\x2\x2\x2{\x1A8\x3\x2\x2\x2}\x1AB\x3\x2\x2\x2\x7F"+
		"\x1AD\x3\x2\x2\x2\x81\x1AF\x3\x2\x2\x2\x83\x1B2\x3\x2\x2\x2\x85\x1B5\x3"+
		"\x2\x2\x2\x87\x1BC\x3\x2\x2\x2\x89\x1C9\x3\x2\x2\x2\x8B\x1CD\x3\x2\x2"+
		"\x2\x8D\x8F\a/\x2\x2\x8E\x8D\x3\x2\x2\x2\x8E\x8F\x3\x2\x2\x2\x8F\x90\x3"+
		"\x2\x2\x2\x90\x94\t\x2\x2\x2\x91\x93\t\x3\x2\x2\x92\x91\x3\x2\x2\x2\x93"+
		"\x96\x3\x2\x2\x2\x94\x92\x3\x2\x2\x2\x94\x95\x3\x2\x2\x2\x95\x99\x3\x2"+
		"\x2\x2\x96\x94\x3\x2\x2\x2\x97\x99\a\x32\x2\x2\x98\x8E\x3\x2\x2\x2\x98"+
		"\x97\x3\x2\x2\x2\x99\x4\x3\x2\x2\x2\x9A\x9C\a/\x2\x2\x9B\x9A\x3\x2\x2"+
		"\x2\x9B\x9C\x3\x2\x2\x2\x9C\xA0\x3\x2\x2\x2\x9D\x9F\t\x2\x2\x2\x9E\x9D"+
		"\x3\x2\x2\x2\x9F\xA2\x3\x2\x2\x2\xA0\x9E\x3\x2\x2\x2\xA0\xA1\x3\x2\x2"+
		"\x2\xA1\xA3\x3\x2\x2\x2\xA2\xA0\x3\x2\x2\x2\xA3\xA4\t\x3\x2\x2\xA4\xA6"+
		"\a\x30\x2\x2\xA5\xA7\t\x3\x2\x2\xA6\xA5\x3\x2\x2\x2\xA7\xA8\x3\x2\x2\x2"+
		"\xA8\xA6\x3\x2\x2\x2\xA8\xA9\x3\x2\x2\x2\xA9\x6\x3\x2\x2\x2\xAA\xAB\a"+
		"v\x2\x2\xAB\xAC\at\x2\x2\xAC\xAD\aw\x2\x2\xAD\xB4\ag\x2\x2\xAE\xAF\ah"+
		"\x2\x2\xAF\xB0\a\x63\x2\x2\xB0\xB1\an\x2\x2\xB1\xB2\au\x2\x2\xB2\xB4\a"+
		"g\x2\x2\xB3\xAA\x3\x2\x2\x2\xB3\xAE\x3\x2\x2\x2\xB4\b\x3\x2\x2\x2\xB5"+
		"\xBB\a$\x2\x2\xB6\xBA\n\x4\x2\x2\xB7\xB8\a^\x2\x2\xB8\xBA\a$\x2\x2\xB9"+
		"\xB6\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2\xBA\xBD\x3\x2\x2\x2\xBB\xB9\x3\x2"+
		"\x2\x2\xBB\xBC\x3\x2\x2\x2\xBC\xBE\x3\x2\x2\x2\xBD\xBB\x3\x2\x2\x2\xBE"+
		"\xBF\a$\x2\x2\xBF\n\x3\x2\x2\x2\xC0\xC4\x5\x3\x2\x2\xC1\xC3\t\x5\x2\x2"+
		"\xC2\xC1\x3\x2\x2\x2\xC3\xC6\x3\x2\x2\x2\xC4\xC2\x3\x2\x2\x2\xC4\xC5\x3"+
		"\x2\x2\x2\xC5\xC7\x3\x2\x2\x2\xC6\xC4\x3\x2\x2\x2\xC7\xCB\x5\x61\x31\x2"+
		"\xC8\xCA\t\x5\x2\x2\xC9\xC8\x3\x2\x2\x2\xCA\xCD\x3\x2\x2\x2\xCB\xC9\x3"+
		"\x2\x2\x2\xCB\xCC\x3\x2\x2\x2\xCC\xCE\x3\x2\x2\x2\xCD\xCB\x3\x2\x2\x2"+
		"\xCE\xCF\x5\x3\x2\x2\xCF\f\x3\x2\x2\x2\xD0\xD1\ap\x2\x2\xD1\xD2\aw\x2"+
		"\x2\xD2\xD3\an\x2\x2\xD3\xD4\an\x2\x2\xD4\xE\x3\x2\x2\x2\xD5\xD6\an\x2"+
		"\x2\xD6\xD7\ag\x2\x2\xD7\xD8\av\x2\x2\xD8\x10\x3\x2\x2\x2\xD9\xDA\ah\x2"+
		"\x2\xDA\xDB\aq\x2\x2\xDB\xDC\at\x2\x2\xDC\x12\x3\x2\x2\x2\xDD\xDE\ah\x2"+
		"\x2\xDE\xDF\aq\x2\x2\xDF\xE0\at\x2\x2\xE0\xE1\ag\x2\x2\xE1\xE2\a\x63\x2"+
		"\x2\xE2\xE3\a\x65\x2\x2\xE3\xE4\aj\x2\x2\xE4\x14\x3\x2\x2\x2\xE5\xE6\a"+
		"\x63\x2\x2\xE6\xE7\a\x66\x2\x2\xE7\xE8\a\x66\x2\x2\xE8\x16\x3\x2\x2\x2"+
		"\xE9\xEA\a\x64\x2\x2\xEA\xEB\at\x2\x2\xEB\xEC\ag\x2\x2\xEC\xED\a\x63\x2"+
		"\x2\xED\xEE\am\x2\x2\xEE\x18\x3\x2\x2\x2\xEF\xF0\a\x65\x2\x2\xF0\xF1\a"+
		"q\x2\x2\xF1\xF2\ap\x2\x2\xF2\xF3\av\x2\x2\xF3\xF4\ak\x2\x2\xF4\xF5\ap"+
		"\x2\x2\xF5\xF6\aw\x2\x2\xF6\xF7\ag\x2\x2\xF7\x1A\x3\x2\x2\x2\xF8\xF9\a"+
		"\x63\x2\x2\xF9\xFA\av\x2\x2\xFA\x1C\x3\x2\x2\x2\xFB\xFC\at\x2\x2\xFC\xFD"+
		"\ag\x2\x2\xFD\xFE\ao\x2\x2\xFE\xFF\aq\x2\x2\xFF\x100\ax\x2\x2\x100\x101"+
		"\ag\x2\x2\x101\x1E\x3\x2\x2\x2\x102\x103\ah\x2\x2\x103\x104\at\x2\x2\x104"+
		"\x105\aq\x2\x2\x105\x106\ao\x2\x2\x106 \x3\x2\x2\x2\x107\x108\ay\x2\x2"+
		"\x108\x109\aj\x2\x2\x109\x10A\ak\x2\x2\x10A\x10B\an\x2\x2\x10B\x10C\a"+
		"g\x2\x2\x10C\"\x3\x2\x2\x2\x10D\x10E\ak\x2\x2\x10E\x10F\ap\x2\x2\x10F"+
		"$\x3\x2\x2\x2\x110\x111\ak\x2\x2\x111\x112\ah\x2\x2\x112&\x3\x2\x2\x2"+
		"\x113\x114\aw\x2\x2\x114\x115\ar\x2\x2\x115(\x3\x2\x2\x2\x116\x117\av"+
		"\x2\x2\x117\x118\aq\x2\x2\x118*\x3\x2\x2\x2\x119\x11A\a\x63\x2\x2\x11A"+
		"\x11B\au\x2\x2\x11B,\x3\x2\x2\x2\x11C\x11D\ag\x2\x2\x11D\x11E\ap\x2\x2"+
		"\x11E\x11F\aw\x2\x2\x11F\x120\ao\x2\x2\x120.\x3\x2\x2\x2\x121\x122\an"+
		"\x2\x2\x122\x123\ak\x2\x2\x123\x124\a\x64\x2\x2\x124\x125\at\x2\x2\x125"+
		"\x126\a\x63\x2\x2\x126\x127\at\x2\x2\x127\x128\a{\x2\x2\x128\x30\x3\x2"+
		"\x2\x2\x129\x12A\au\x2\x2\x12A\x12B\ah\x2\x2\x12B\x32\x3\x2\x2\x2\x12C"+
		"\x12D\aq\x2\x2\x12D\x12E\a\x64\x2\x2\x12E\x12F\al\x2\x2\x12F\x130\ag\x2"+
		"\x2\x130\x131\a\x65\x2\x2\x131\x132\av\x2\x2\x132\x34\x3\x2\x2\x2\x133"+
		"\x134\ag\x2\x2\x134\x135\an\x2\x2\x135\x136\au\x2\x2\x136\x137\ag\x2\x2"+
		"\x137\x36\x3\x2\x2\x2\x138\x139\ak\x2\x2\x139\x13A\ao\x2\x2\x13A\x13B"+
		"\ar\x2\x2\x13B\x13C\aq\x2\x2\x13C\x13D\at\x2\x2\x13D\x13E\av\x2\x2\x13E"+
		"\x38\x3\x2\x2\x2\x13F\x140\at\x2\x2\x140\x141\ag\x2\x2\x141\x142\av\x2"+
		"\x2\x142\x143\aw\x2\x2\x143\x144\at\x2\x2\x144\x145\ap\x2\x2\x145:\x3"+
		"\x2\x2\x2\x146\x147\ar\x2\x2\x147\x148\at\x2\x2\x148\x149\ak\x2\x2\x149"+
		"\x14A\ap\x2\x2\x14A\x14B\av\x2\x2\x14B\x14C\a\"\x2\x2\x14C<\x3\x2\x2\x2"+
		"\x14D\x14E\a\x66\x2\x2\x14E\x14F\ak\x2\x2\x14F\x150\au\x2\x2\x150\x151"+
		"\at\x2\x2\x151\x152\ag\x2\x2\x152\x153\ai\x2\x2\x153\x154\a\x63\x2\x2"+
		"\x154\x155\at\x2\x2\x155\x156\a\x66\x2\x2\x156>\x3\x2\x2\x2\x157\x158"+
		"\ag\x2\x2\x158\x159\az\x2\x2\x159\x15A\av\x2\x2\x15A\x15B\ag\x2\x2\x15B"+
		"\x15C\at\x2\x2\x15C\x15D\ap\x2\x2\x15D\x15E\a\x63\x2\x2\x15E\x15F\an\x2"+
		"\x2\x15F@\x3\x2\x2\x2\x160\x161\av\x2\x2\x161\x162\at\x2\x2\x162\x163"+
		"\a{\x2\x2\x163\x42\x3\x2\x2\x2\x164\x165\a\x65\x2\x2\x165\x166\a\x63\x2"+
		"\x2\x166\x167\av\x2\x2\x167\x168\a\x65\x2\x2\x168\x169\aj\x2\x2\x169\x44"+
		"\x3\x2\x2\x2\x16A\x16B\a=\x2\x2\x16B\x46\x3\x2\x2\x2\x16C\x16D\a?\x2\x2"+
		"\x16DH\x3\x2\x2\x2\x16E\x16F\a.\x2\x2\x16FJ\x3\x2\x2\x2\x170\x171\a}\x2"+
		"\x2\x171L\x3\x2\x2\x2\x172\x173\a\x7F\x2\x2\x173N\x3\x2\x2\x2\x174\x175"+
		"\a]\x2\x2\x175P\x3\x2\x2\x2\x176\x177\a_\x2\x2\x177R\x3\x2\x2\x2\x178"+
		"\x179\a#\x2\x2\x179T\x3\x2\x2\x2\x17A\x17B\a>\x2\x2\x17B\x17C\a/\x2\x2"+
		"\x17CV\x3\x2\x2\x2\x17D\x17E\a*\x2\x2\x17EX\x3\x2\x2\x2\x17F\x180\a+\x2"+
		"\x2\x180Z\x3\x2\x2\x2\x181\x182\a-\x2\x2\x182\\\x3\x2\x2\x2\x183\x184"+
		"\a/\x2\x2\x184^\x3\x2\x2\x2\x185\x186\a,\x2\x2\x186`\x3\x2\x2\x2\x187"+
		"\x188\a\x31\x2\x2\x188\x62\x3\x2\x2\x2\x189\x18A\a`\x2\x2\x18A\x64\x3"+
		"\x2\x2\x2\x18B\x18C\a\'\x2\x2\x18C\x66\x3\x2\x2\x2\x18D\x18E\a\x30\x2"+
		"\x2\x18Eh\x3\x2\x2\x2\x18F\x190\a-\x2\x2\x190\x191\a?\x2\x2\x191j\x3\x2"+
		"\x2\x2\x192\x193\a/\x2\x2\x193\x194\a?\x2\x2\x194l\x3\x2\x2\x2\x195\x196"+
		"\a\x31\x2\x2\x196\x197\a?\x2\x2\x197n\x3\x2\x2\x2\x198\x199\a,\x2\x2\x199"+
		"\x19A\a?\x2\x2\x19Ap\x3\x2\x2\x2\x19B\x19C\a-\x2\x2\x19C\x19D\a-\x2\x2"+
		"\x19Dr\x3\x2\x2\x2\x19E\x19F\a/\x2\x2\x19F\x1A0\a/\x2\x2\x1A0t\x3\x2\x2"+
		"\x2\x1A1\x1A2\a~\x2\x2\x1A2v\x3\x2\x2\x2\x1A3\x1A4\a(\x2\x2\x1A4x\x3\x2"+
		"\x2\x2\x1A5\x1A6\a#\x2\x2\x1A6\x1A7\a?\x2\x2\x1A7z\x3\x2\x2\x2\x1A8\x1A9"+
		"\a?\x2\x2\x1A9\x1AA\a?\x2\x2\x1AA|\x3\x2\x2\x2\x1AB\x1AC\a@\x2\x2\x1AC"+
		"~\x3\x2\x2\x2\x1AD\x1AE\a>\x2\x2\x1AE\x80\x3\x2\x2\x2\x1AF\x1B0\a@\x2"+
		"\x2\x1B0\x1B1\a?\x2\x2\x1B1\x82\x3\x2\x2\x2\x1B2\x1B3\a>\x2\x2\x1B3\x1B4"+
		"\a?\x2\x2\x1B4\x84\x3\x2\x2\x2\x1B5\x1B9\t\x6\x2\x2\x1B6\x1B8\t\a\x2\x2"+
		"\x1B7\x1B6\x3\x2\x2\x2\x1B8\x1BB\x3\x2\x2\x2\x1B9\x1B7\x3\x2\x2\x2\x1B9"+
		"\x1BA\x3\x2\x2\x2\x1BA\x86\x3\x2\x2\x2\x1BB\x1B9\x3\x2\x2\x2\x1BC\x1BD"+
		"\a\x31\x2\x2\x1BD\x1BE\a\x31\x2\x2\x1BE\x1C2\x3\x2\x2\x2\x1BF\x1C1\v\x2"+
		"\x2\x2\x1C0\x1BF\x3\x2\x2\x2\x1C1\x1C4\x3\x2\x2\x2\x1C2\x1C3\x3\x2\x2"+
		"\x2\x1C2\x1C0\x3\x2\x2\x2\x1C3\x1C5\x3\x2\x2\x2\x1C4\x1C2\x3\x2\x2\x2"+
		"\x1C5\x1C6\a\f\x2\x2\x1C6\x1C7\x3\x2\x2\x2\x1C7\x1C8\b\x44\x2\x2\x1C8"+
		"\x88\x3\x2\x2\x2\x1C9\x1CA\t\b\x2\x2\x1CA\x1CB\x3\x2\x2\x2\x1CB\x1CC\b"+
		"\x45\x2\x2\x1CC\x8A\x3\x2\x2\x2\x1CD\x1CE\v\x2\x2\x2\x1CE\x8C\x3\x2\x2"+
		"\x2\x10\x2\x8E\x94\x98\x9B\xA0\xA8\xB3\xB9\xBB\xC4\xCB\x1B9\x1C2\x3\x2"+
		"\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
