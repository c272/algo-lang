//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/c272/Repos/algo-lang/Algo/Parsing/algo.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Algo {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class algoLexer : Lexer {
	public const int
		INTEGER=1, FLOAT=2, BOOLEAN=3, STRING=4, RATIONAL=5, NULL=6, LET_SYM=7, 
		FOR_SYM=8, ADD_SYM=9, AT_SYM=10, REMOVE_SYM=11, FROM_SYM=12, WHILE_SYM=13, 
		IN_SYM=14, IF_SYM=15, UP_SYM=16, TO_SYM=17, AS_SYM=18, ENUM_SYM=19, LIB_SYM=20, 
		SIG_FIG_SYM=21, OBJ_SYM=22, ELSE_SYM=23, IMPORT_SYM=24, RETURN_SYM=25, 
		PRINT_SYM=26, DISREGARD_SYM=27, EXTERNAL_SYM=28, ENDLINE=29, EQUALS=30, 
		COMMA=31, LBRACE=32, RBRACE=33, LSQBR=34, RSQBR=35, INVERT_SYM=36, STREAMING_SYM=37, 
		LBRACKET=38, RBRACKET=39, ADD_OP=40, TAKE_OP=41, MUL_OP=42, DIV_OP=43, 
		POW_OP=44, POINT=45, ADDFROM_OP=46, TAKEFROM_OP=47, DIVFROM_OP=48, MULFROM_OP=49, 
		ADD_PFOP=50, TAKE_PFOP=51, BIN_OR=52, BIN_AND=53, BIN_NET=54, BIN_EQUALS=55, 
		GRTR_THAN=56, LESS_THAN=57, GRTR_THAN_ET=58, LESS_THAN_ET=59, IDENTIFIER=60, 
		COMMENT=61, WS=62, UNKNOWN_SYMBOL=63;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "ADD_SYM", "AT_SYM", "REMOVE_SYM", "FROM_SYM", "WHILE_SYM", 
		"IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", "ENUM_SYM", "LIB_SYM", 
		"SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", 
		"DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", "EQUALS", "COMMA", "LBRACE", 
		"RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", 
		"RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};


	public algoLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, null, null, null, null, null, "'null'", "'let'", "'for'", "'add'", 
		"'at'", "'remove'", "'from'", "'while'", "'in'", "'if'", "'up'", "'to'", 
		"'as'", "'enum'", "'library'", "'sf'", "'object'", "'else'", "'import'", 
		"'return'", "'print'", "'disregard'", "'external'", "';'", "'='", "','", 
		"'{'", "'}'", "'['", "']'", "'!'", "'<-'", "'('", "')'", "'+'", "'-'", 
		"'*'", "'/'", "'^'", "'.'", "'+='", "'-='", "'/='", "'*='", "'++'", "'--'", 
		"'|'", "'&'", "'!='", "'=='", "'>'", "'<'", "'>='", "'<='"
	};
	private static readonly string[] _SymbolicNames = {
		null, "INTEGER", "FLOAT", "BOOLEAN", "STRING", "RATIONAL", "NULL", "LET_SYM", 
		"FOR_SYM", "ADD_SYM", "AT_SYM", "REMOVE_SYM", "FROM_SYM", "WHILE_SYM", 
		"IN_SYM", "IF_SYM", "UP_SYM", "TO_SYM", "AS_SYM", "ENUM_SYM", "LIB_SYM", 
		"SIG_FIG_SYM", "OBJ_SYM", "ELSE_SYM", "IMPORT_SYM", "RETURN_SYM", "PRINT_SYM", 
		"DISREGARD_SYM", "EXTERNAL_SYM", "ENDLINE", "EQUALS", "COMMA", "LBRACE", 
		"RBRACE", "LSQBR", "RSQBR", "INVERT_SYM", "STREAMING_SYM", "LBRACKET", 
		"RBRACKET", "ADD_OP", "TAKE_OP", "MUL_OP", "DIV_OP", "POW_OP", "POINT", 
		"ADDFROM_OP", "TAKEFROM_OP", "DIVFROM_OP", "MULFROM_OP", "ADD_PFOP", "TAKE_PFOP", 
		"BIN_OR", "BIN_AND", "BIN_NET", "BIN_EQUALS", "GRTR_THAN", "LESS_THAN", 
		"GRTR_THAN_ET", "LESS_THAN_ET", "IDENTIFIER", "COMMENT", "WS", "UNKNOWN_SYMBOL"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "algo.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x41\x19F\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 "+
		"\t \x4!\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t"+
		")\x4*\t*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31"+
		"\x4\x32\t\x32\x4\x33\t\x33\x4\x34\t\x34\x4\x35\t\x35\x4\x36\t\x36\x4\x37"+
		"\t\x37\x4\x38\t\x38\x4\x39\t\x39\x4:\t:\x4;\t;\x4<\t<\x4=\t=\x4>\t>\x4"+
		"?\t?\x4@\t@\x3\x2\x5\x2\x83\n\x2\x3\x2\x3\x2\a\x2\x87\n\x2\f\x2\xE\x2"+
		"\x8A\v\x2\x3\x2\x5\x2\x8D\n\x2\x3\x3\x5\x3\x90\n\x3\x3\x3\a\x3\x93\n\x3"+
		"\f\x3\xE\x3\x96\v\x3\x3\x3\x3\x3\x3\x3\x6\x3\x9B\n\x3\r\x3\xE\x3\x9C\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4\xA8\n\x4\x3"+
		"\x5\x3\x5\x3\x5\x3\x5\a\x5\xAE\n\x5\f\x5\xE\x5\xB1\v\x5\x3\x5\x3\x5\x3"+
		"\x6\x3\x6\a\x6\xB7\n\x6\f\x6\xE\x6\xBA\v\x6\x3\x6\x3\x6\a\x6\xBE\n\x6"+
		"\f\x6\xE\x6\xC1\v\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3"+
		"\b\x3\b\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\f\x3"+
		"\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xE"+
		"\x3\xE\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15"+
		"\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17\x3\x17"+
		"\x3\x18\x3\x18\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B"+
		"\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C"+
		"\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1D"+
		"\x3\x1D\x3\x1D\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3"+
		"!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3&\x3\'\x3\'\x3(\x3(\x3)"+
		"\x3)\x3*\x3*\x3+\x3+\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3/\x3\x30\x3\x30"+
		"\x3\x30\x3\x31\x3\x31\x3\x31\x3\x32\x3\x32\x3\x32\x3\x33\x3\x33\x3\x33"+
		"\x3\x34\x3\x34\x3\x34\x3\x35\x3\x35\x3\x36\x3\x36\x3\x37\x3\x37\x3\x37"+
		"\x3\x38\x3\x38\x3\x38\x3\x39\x3\x39\x3:\x3:\x3;\x3;\x3;\x3<\x3<\x3<\x3"+
		"=\x3=\a=\x188\n=\f=\xE=\x18B\v=\x3>\x3>\x3>\x3>\a>\x191\n>\f>\xE>\x194"+
		"\v>\x3>\x3>\x3>\x3>\x3?\x3?\x3?\x3?\x3@\x3@\x3\x192\x2\x2\x41\x3\x2\x3"+
		"\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15"+
		"\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13"+
		"%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B"+
		"\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45"+
		"\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2/]\x2\x30_"+
		"\x2\x31\x61\x2\x32\x63\x2\x33\x65\x2\x34g\x2\x35i\x2\x36k\x2\x37m\x2\x38"+
		"o\x2\x39q\x2:s\x2;u\x2<w\x2=y\x2>{\x2?}\x2@\x7F\x2\x41\x3\x2\t\x3\x2\x33"+
		";\x3\x2\x32;\x3\x2$$\x3\x2\"\"\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43"+
		"\\\x61\x61\x63|\x5\x2\v\f\xF\xF\"\"\x1AB\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2"+
		"\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2"+
		"\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3"+
		"\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2"+
		"\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2"+
		"%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3"+
		"\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35"+
		"\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2"+
		"=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2"+
		"\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3"+
		"\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2"+
		"\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2\x2[\x3\x2\x2\x2\x2]\x3\x2\x2\x2\x2"+
		"_\x3\x2\x2\x2\x2\x61\x3\x2\x2\x2\x2\x63\x3\x2\x2\x2\x2\x65\x3\x2\x2\x2"+
		"\x2g\x3\x2\x2\x2\x2i\x3\x2\x2\x2\x2k\x3\x2\x2\x2\x2m\x3\x2\x2\x2\x2o\x3"+
		"\x2\x2\x2\x2q\x3\x2\x2\x2\x2s\x3\x2\x2\x2\x2u\x3\x2\x2\x2\x2w\x3\x2\x2"+
		"\x2\x2y\x3\x2\x2\x2\x2{\x3\x2\x2\x2\x2}\x3\x2\x2\x2\x2\x7F\x3\x2\x2\x2"+
		"\x3\x8C\x3\x2\x2\x2\x5\x8F\x3\x2\x2\x2\a\xA7\x3\x2\x2\x2\t\xA9\x3\x2\x2"+
		"\x2\v\xB4\x3\x2\x2\x2\r\xC4\x3\x2\x2\x2\xF\xC9\x3\x2\x2\x2\x11\xCD\x3"+
		"\x2\x2\x2\x13\xD1\x3\x2\x2\x2\x15\xD5\x3\x2\x2\x2\x17\xD8\x3\x2\x2\x2"+
		"\x19\xDF\x3\x2\x2\x2\x1B\xE4\x3\x2\x2\x2\x1D\xEA\x3\x2\x2\x2\x1F\xED\x3"+
		"\x2\x2\x2!\xF0\x3\x2\x2\x2#\xF3\x3\x2\x2\x2%\xF6\x3\x2\x2\x2\'\xF9\x3"+
		"\x2\x2\x2)\xFE\x3\x2\x2\x2+\x106\x3\x2\x2\x2-\x109\x3\x2\x2\x2/\x110\x3"+
		"\x2\x2\x2\x31\x115\x3\x2\x2\x2\x33\x11C\x3\x2\x2\x2\x35\x123\x3\x2\x2"+
		"\x2\x37\x129\x3\x2\x2\x2\x39\x133\x3\x2\x2\x2;\x13C\x3\x2\x2\x2=\x13E"+
		"\x3\x2\x2\x2?\x140\x3\x2\x2\x2\x41\x142\x3\x2\x2\x2\x43\x144\x3\x2\x2"+
		"\x2\x45\x146\x3\x2\x2\x2G\x148\x3\x2\x2\x2I\x14A\x3\x2\x2\x2K\x14C\x3"+
		"\x2\x2\x2M\x14F\x3\x2\x2\x2O\x151\x3\x2\x2\x2Q\x153\x3\x2\x2\x2S\x155"+
		"\x3\x2\x2\x2U\x157\x3\x2\x2\x2W\x159\x3\x2\x2\x2Y\x15B\x3\x2\x2\x2[\x15D"+
		"\x3\x2\x2\x2]\x15F\x3\x2\x2\x2_\x162\x3\x2\x2\x2\x61\x165\x3\x2\x2\x2"+
		"\x63\x168\x3\x2\x2\x2\x65\x16B\x3\x2\x2\x2g\x16E\x3\x2\x2\x2i\x171\x3"+
		"\x2\x2\x2k\x173\x3\x2\x2\x2m\x175\x3\x2\x2\x2o\x178\x3\x2\x2\x2q\x17B"+
		"\x3\x2\x2\x2s\x17D\x3\x2\x2\x2u\x17F\x3\x2\x2\x2w\x182\x3\x2\x2\x2y\x185"+
		"\x3\x2\x2\x2{\x18C\x3\x2\x2\x2}\x199\x3\x2\x2\x2\x7F\x19D\x3\x2\x2\x2"+
		"\x81\x83\a/\x2\x2\x82\x81\x3\x2\x2\x2\x82\x83\x3\x2\x2\x2\x83\x84\x3\x2"+
		"\x2\x2\x84\x88\t\x2\x2\x2\x85\x87\t\x3\x2\x2\x86\x85\x3\x2\x2\x2\x87\x8A"+
		"\x3\x2\x2\x2\x88\x86\x3\x2\x2\x2\x88\x89\x3\x2\x2\x2\x89\x8D\x3\x2\x2"+
		"\x2\x8A\x88\x3\x2\x2\x2\x8B\x8D\a\x32\x2\x2\x8C\x82\x3\x2\x2\x2\x8C\x8B"+
		"\x3\x2\x2\x2\x8D\x4\x3\x2\x2\x2\x8E\x90\a/\x2\x2\x8F\x8E\x3\x2\x2\x2\x8F"+
		"\x90\x3\x2\x2\x2\x90\x94\x3\x2\x2\x2\x91\x93\t\x2\x2\x2\x92\x91\x3\x2"+
		"\x2\x2\x93\x96\x3\x2\x2\x2\x94\x92\x3\x2\x2\x2\x94\x95\x3\x2\x2\x2\x95"+
		"\x97\x3\x2\x2\x2\x96\x94\x3\x2\x2\x2\x97\x98\t\x3\x2\x2\x98\x9A\a\x30"+
		"\x2\x2\x99\x9B\t\x3\x2\x2\x9A\x99\x3\x2\x2\x2\x9B\x9C\x3\x2\x2\x2\x9C"+
		"\x9A\x3\x2\x2\x2\x9C\x9D\x3\x2\x2\x2\x9D\x6\x3\x2\x2\x2\x9E\x9F\av\x2"+
		"\x2\x9F\xA0\at\x2\x2\xA0\xA1\aw\x2\x2\xA1\xA8\ag\x2\x2\xA2\xA3\ah\x2\x2"+
		"\xA3\xA4\a\x63\x2\x2\xA4\xA5\an\x2\x2\xA5\xA6\au\x2\x2\xA6\xA8\ag\x2\x2"+
		"\xA7\x9E\x3\x2\x2\x2\xA7\xA2\x3\x2\x2\x2\xA8\b\x3\x2\x2\x2\xA9\xAF\a$"+
		"\x2\x2\xAA\xAE\n\x4\x2\x2\xAB\xAC\a^\x2\x2\xAC\xAE\a$\x2\x2\xAD\xAA\x3"+
		"\x2\x2\x2\xAD\xAB\x3\x2\x2\x2\xAE\xB1\x3\x2\x2\x2\xAF\xAD\x3\x2\x2\x2"+
		"\xAF\xB0\x3\x2\x2\x2\xB0\xB2\x3\x2\x2\x2\xB1\xAF\x3\x2\x2\x2\xB2\xB3\a"+
		"$\x2\x2\xB3\n\x3\x2\x2\x2\xB4\xB8\x5\x3\x2\x2\xB5\xB7\t\x5\x2\x2\xB6\xB5"+
		"\x3\x2\x2\x2\xB7\xBA\x3\x2\x2\x2\xB8\xB6\x3\x2\x2\x2\xB8\xB9\x3\x2\x2"+
		"\x2\xB9\xBB\x3\x2\x2\x2\xBA\xB8\x3\x2\x2\x2\xBB\xBF\x5W,\x2\xBC\xBE\t"+
		"\x5\x2\x2\xBD\xBC\x3\x2\x2\x2\xBE\xC1\x3\x2\x2\x2\xBF\xBD\x3\x2\x2\x2"+
		"\xBF\xC0\x3\x2\x2\x2\xC0\xC2\x3\x2\x2\x2\xC1\xBF\x3\x2\x2\x2\xC2\xC3\x5"+
		"\x3\x2\x2\xC3\f\x3\x2\x2\x2\xC4\xC5\ap\x2\x2\xC5\xC6\aw\x2\x2\xC6\xC7"+
		"\an\x2\x2\xC7\xC8\an\x2\x2\xC8\xE\x3\x2\x2\x2\xC9\xCA\an\x2\x2\xCA\xCB"+
		"\ag\x2\x2\xCB\xCC\av\x2\x2\xCC\x10\x3\x2\x2\x2\xCD\xCE\ah\x2\x2\xCE\xCF"+
		"\aq\x2\x2\xCF\xD0\at\x2\x2\xD0\x12\x3\x2\x2\x2\xD1\xD2\a\x63\x2\x2\xD2"+
		"\xD3\a\x66\x2\x2\xD3\xD4\a\x66\x2\x2\xD4\x14\x3\x2\x2\x2\xD5\xD6\a\x63"+
		"\x2\x2\xD6\xD7\av\x2\x2\xD7\x16\x3\x2\x2\x2\xD8\xD9\at\x2\x2\xD9\xDA\a"+
		"g\x2\x2\xDA\xDB\ao\x2\x2\xDB\xDC\aq\x2\x2\xDC\xDD\ax\x2\x2\xDD\xDE\ag"+
		"\x2\x2\xDE\x18\x3\x2\x2\x2\xDF\xE0\ah\x2\x2\xE0\xE1\at\x2\x2\xE1\xE2\a"+
		"q\x2\x2\xE2\xE3\ao\x2\x2\xE3\x1A\x3\x2\x2\x2\xE4\xE5\ay\x2\x2\xE5\xE6"+
		"\aj\x2\x2\xE6\xE7\ak\x2\x2\xE7\xE8\an\x2\x2\xE8\xE9\ag\x2\x2\xE9\x1C\x3"+
		"\x2\x2\x2\xEA\xEB\ak\x2\x2\xEB\xEC\ap\x2\x2\xEC\x1E\x3\x2\x2\x2\xED\xEE"+
		"\ak\x2\x2\xEE\xEF\ah\x2\x2\xEF \x3\x2\x2\x2\xF0\xF1\aw\x2\x2\xF1\xF2\a"+
		"r\x2\x2\xF2\"\x3\x2\x2\x2\xF3\xF4\av\x2\x2\xF4\xF5\aq\x2\x2\xF5$\x3\x2"+
		"\x2\x2\xF6\xF7\a\x63\x2\x2\xF7\xF8\au\x2\x2\xF8&\x3\x2\x2\x2\xF9\xFA\a"+
		"g\x2\x2\xFA\xFB\ap\x2\x2\xFB\xFC\aw\x2\x2\xFC\xFD\ao\x2\x2\xFD(\x3\x2"+
		"\x2\x2\xFE\xFF\an\x2\x2\xFF\x100\ak\x2\x2\x100\x101\a\x64\x2\x2\x101\x102"+
		"\at\x2\x2\x102\x103\a\x63\x2\x2\x103\x104\at\x2\x2\x104\x105\a{\x2\x2"+
		"\x105*\x3\x2\x2\x2\x106\x107\au\x2\x2\x107\x108\ah\x2\x2\x108,\x3\x2\x2"+
		"\x2\x109\x10A\aq\x2\x2\x10A\x10B\a\x64\x2\x2\x10B\x10C\al\x2\x2\x10C\x10D"+
		"\ag\x2\x2\x10D\x10E\a\x65\x2\x2\x10E\x10F\av\x2\x2\x10F.\x3\x2\x2\x2\x110"+
		"\x111\ag\x2\x2\x111\x112\an\x2\x2\x112\x113\au\x2\x2\x113\x114\ag\x2\x2"+
		"\x114\x30\x3\x2\x2\x2\x115\x116\ak\x2\x2\x116\x117\ao\x2\x2\x117\x118"+
		"\ar\x2\x2\x118\x119\aq\x2\x2\x119\x11A\at\x2\x2\x11A\x11B\av\x2\x2\x11B"+
		"\x32\x3\x2\x2\x2\x11C\x11D\at\x2\x2\x11D\x11E\ag\x2\x2\x11E\x11F\av\x2"+
		"\x2\x11F\x120\aw\x2\x2\x120\x121\at\x2\x2\x121\x122\ap\x2\x2\x122\x34"+
		"\x3\x2\x2\x2\x123\x124\ar\x2\x2\x124\x125\at\x2\x2\x125\x126\ak\x2\x2"+
		"\x126\x127\ap\x2\x2\x127\x128\av\x2\x2\x128\x36\x3\x2\x2\x2\x129\x12A"+
		"\a\x66\x2\x2\x12A\x12B\ak\x2\x2\x12B\x12C\au\x2\x2\x12C\x12D\at\x2\x2"+
		"\x12D\x12E\ag\x2\x2\x12E\x12F\ai\x2\x2\x12F\x130\a\x63\x2\x2\x130\x131"+
		"\at\x2\x2\x131\x132\a\x66\x2\x2\x132\x38\x3\x2\x2\x2\x133\x134\ag\x2\x2"+
		"\x134\x135\az\x2\x2\x135\x136\av\x2\x2\x136\x137\ag\x2\x2\x137\x138\a"+
		"t\x2\x2\x138\x139\ap\x2\x2\x139\x13A\a\x63\x2\x2\x13A\x13B\an\x2\x2\x13B"+
		":\x3\x2\x2\x2\x13C\x13D\a=\x2\x2\x13D<\x3\x2\x2\x2\x13E\x13F\a?\x2\x2"+
		"\x13F>\x3\x2\x2\x2\x140\x141\a.\x2\x2\x141@\x3\x2\x2\x2\x142\x143\a}\x2"+
		"\x2\x143\x42\x3\x2\x2\x2\x144\x145\a\x7F\x2\x2\x145\x44\x3\x2\x2\x2\x146"+
		"\x147\a]\x2\x2\x147\x46\x3\x2\x2\x2\x148\x149\a_\x2\x2\x149H\x3\x2\x2"+
		"\x2\x14A\x14B\a#\x2\x2\x14BJ\x3\x2\x2\x2\x14C\x14D\a>\x2\x2\x14D\x14E"+
		"\a/\x2\x2\x14EL\x3\x2\x2\x2\x14F\x150\a*\x2\x2\x150N\x3\x2\x2\x2\x151"+
		"\x152\a+\x2\x2\x152P\x3\x2\x2\x2\x153\x154\a-\x2\x2\x154R\x3\x2\x2\x2"+
		"\x155\x156\a/\x2\x2\x156T\x3\x2\x2\x2\x157\x158\a,\x2\x2\x158V\x3\x2\x2"+
		"\x2\x159\x15A\a\x31\x2\x2\x15AX\x3\x2\x2\x2\x15B\x15C\a`\x2\x2\x15CZ\x3"+
		"\x2\x2\x2\x15D\x15E\a\x30\x2\x2\x15E\\\x3\x2\x2\x2\x15F\x160\a-\x2\x2"+
		"\x160\x161\a?\x2\x2\x161^\x3\x2\x2\x2\x162\x163\a/\x2\x2\x163\x164\a?"+
		"\x2\x2\x164`\x3\x2\x2\x2\x165\x166\a\x31\x2\x2\x166\x167\a?\x2\x2\x167"+
		"\x62\x3\x2\x2\x2\x168\x169\a,\x2\x2\x169\x16A\a?\x2\x2\x16A\x64\x3\x2"+
		"\x2\x2\x16B\x16C\a-\x2\x2\x16C\x16D\a-\x2\x2\x16D\x66\x3\x2\x2\x2\x16E"+
		"\x16F\a/\x2\x2\x16F\x170\a/\x2\x2\x170h\x3\x2\x2\x2\x171\x172\a~\x2\x2"+
		"\x172j\x3\x2\x2\x2\x173\x174\a(\x2\x2\x174l\x3\x2\x2\x2\x175\x176\a#\x2"+
		"\x2\x176\x177\a?\x2\x2\x177n\x3\x2\x2\x2\x178\x179\a?\x2\x2\x179\x17A"+
		"\a?\x2\x2\x17Ap\x3\x2\x2\x2\x17B\x17C\a@\x2\x2\x17Cr\x3\x2\x2\x2\x17D"+
		"\x17E\a>\x2\x2\x17Et\x3\x2\x2\x2\x17F\x180\a@\x2\x2\x180\x181\a?\x2\x2"+
		"\x181v\x3\x2\x2\x2\x182\x183\a>\x2\x2\x183\x184\a?\x2\x2\x184x\x3\x2\x2"+
		"\x2\x185\x189\t\x6\x2\x2\x186\x188\t\a\x2\x2\x187\x186\x3\x2\x2\x2\x188"+
		"\x18B\x3\x2\x2\x2\x189\x187\x3\x2\x2\x2\x189\x18A\x3\x2\x2\x2\x18Az\x3"+
		"\x2\x2\x2\x18B\x189\x3\x2\x2\x2\x18C\x18D\a\x31\x2\x2\x18D\x18E\a\x31"+
		"\x2\x2\x18E\x192\x3\x2\x2\x2\x18F\x191\v\x2\x2\x2\x190\x18F\x3\x2\x2\x2"+
		"\x191\x194\x3\x2\x2\x2\x192\x193\x3\x2\x2\x2\x192\x190\x3\x2\x2\x2\x193"+
		"\x195\x3\x2\x2\x2\x194\x192\x3\x2\x2\x2\x195\x196\a\f\x2\x2\x196\x197"+
		"\x3\x2\x2\x2\x197\x198\b>\x2\x2\x198|\x3\x2\x2\x2\x199\x19A\t\b\x2\x2"+
		"\x19A\x19B\x3\x2\x2\x2\x19B\x19C\b?\x2\x2\x19C~\x3\x2\x2\x2\x19D\x19E"+
		"\v\x2\x2\x2\x19E\x80\x3\x2\x2\x2\x10\x2\x82\x88\x8C\x8F\x94\x9C\xA7\xAD"+
		"\xAF\xB8\xBF\x189\x192\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Algo
