// The "core" standard library, provided by Algo.
// NOTE: THESE FUNCTIONS ARE NOT IN A LIBRARY.
// v0.0.1, revision 0.

//Returns the length of an array or string.
external len <- std_core.len;

//////////////////////////////////////
// Static casts for all core types. //
//////////////////////////////////////
	
//String.
external str <- std_core.str;

//Integer.
external int <- std_core.int;

//Rational.
external rat <- std_core.rat;

//Float.
external flt <- std_core.flt;

//Boolean.
external bool <- std_core.bool;

//////////////////////////////////
// Check the type of variables. //
//////////////////////////////////

//Types enum.
library core 
{
    let types = enum 
    {
        String,
        Integer,
        Float,
        Rational,
        Boolean,
        List,
        Function,
        EmulatedFunction,
        Object,
        Null
    };
}

//Function to check the type of a variable.
external type <- std_core.get_type;

//////////////////////////////////////////////////////
// Standard array library, in core for ease of use. //
//////////////////////////////////////////////////////

library array 
{
    //Returns the index of an item in a list. If it's not there, returns -1.
    let indexOf(item, arr) =
    {
        for (i in arr) 
        {
            print arr[i];
            print item;
            if (arr[i] == item) 
            {
                return i;
            }
        }
        
        return -1;
    }
    
    //Returns whether an item is contained in a list or not.
    let contains(item, arr) =
    {
        if (indexOf(item, arr) != -1) { return true; }
        return false;
    }
}
